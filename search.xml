<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用PSO-NN解决双螺旋分类TSNP问题</title>
      <link href="/2025/03/14/TSNP%E2%80%94problem/"/>
      <url>/2025/03/14/TSNP%E2%80%94problem/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h2><ul><li>粒子群算法PSO优化神经网络权重和偏置参数，取代传统的梯度下降法。</li><li>神经网络参数矩阵展平，作为PSO算法中粒子的速度参数进行优化。</li></ul><hr><h2 id="Presentation-PPT"><a href="#Presentation-PPT" class="headerlink" title="Presentation PPT"></a>Presentation PPT</h2><img src="https://s2.loli.net/2025/03/14/xUrA3vkNdilZInS.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/teSMvKg3dj8UNIF.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/sa9XOM75ch1CdUH.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/wyUBXdPCYFJ3ghl.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/82K3OxNZv4EGWwT.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/bQyK2iN4dof7uBw.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/qXI9dgYku7SJOvo.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/icXvJuEwTZGRhf6.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/9pZJjm8KFaA6yId.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/3xpPRvLMiAdBmtU.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/JXr5A96s1vQS73P.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/MvYcsQfIduDoaKp.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/mwupfrFZqQRojb9.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/BVajvxYpkUiRNeQ.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/2tkoqziDPLMu8jJ.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/FNuyMpiDnBbtmVs.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/bMNlUrwYEhDZITz.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/2xMOGN7gDcBYVn9.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/FvGP4bkmBWyXALx.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/zrCKM9YQTlWxwIy.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/UagBy2iqkF4WnRo.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/iYLvM9NtpInzbhK.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/7RY3oekWh8Lu6tI.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/AkRmN4W8P7cIqa2.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/fvG1ePdh7iTSYBW.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/9thjGwPWpTxn17u.jpg" width="500" height="500"><img src="https://s2.loli.net/2025/03/14/cKAZG3uinNyvJY1.jpg" width="500" height="500"><hr><h2 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h2><div class="row">    <embed src="https://shinononome-enana.github.io/file/PSO_NN_TNSP.pdf" width="100%" height="550" type="application/pdf"></div><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// data parameter</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> num_spiral_rounds = <span class="number">5</span>;</span><br><span class="line"><span class="comment">// PSO-Parameter</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> w = <span class="number">0.2</span>;    </span><br><span class="line"><span class="type">const</span> <span class="type">double</span> c1 = <span class="number">1</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> c2 = <span class="number">2</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> LR = <span class="number">1.2</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> num_particles = <span class="number">1000</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> max_iterations = <span class="number">10000</span>; </span><br><span class="line"><span class="comment">// NN-Parameter</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M_hidden_nodes = <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DataPoint</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; input; <span class="comment">// Position:(x, y)</span></span><br><span class="line">    <span class="type">double</span> label;         <span class="comment">// Lable: 0 / 1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Particle</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; position;  </span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; velocity;  </span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; best_position; </span><br><span class="line">    <span class="type">double</span> best_fitness;     </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">GlobalBest</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; position; </span><br><span class="line">    <span class="type">double</span> fitness;         </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Tanh_activation_function</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tanh</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Sigmiod_activation_function</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1.0</span> + <span class="built_in">exp</span>(-x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">ReLU_activation_function</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0.0</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">fitness_function</span><span class="params">(<span class="type">const</span> vector&lt;<span class="type">double</span>&gt;&amp; position, <span class="type">const</span> vector&lt;DataPoint&gt;&amp; data, <span class="type">int</span> hidden_nodes)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//==================== 2-layer NN dim ====================</span></span><br><span class="line">    <span class="type">int</span> input_dim = <span class="number">2</span>; </span><br><span class="line">    <span class="type">int</span> hidden_dim = hidden_nodes; </span><br><span class="line">    <span class="type">int</span> output_dim = <span class="number">1</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//==================== Extract (W,b) from particles&#x27; weight sequence ====================</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">double</span>&gt;&gt; <span class="built_in">input_to_hidden</span>(input_dim, <span class="built_in">vector</span>&lt;<span class="type">double</span>&gt;(hidden_dim));</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">hidden_to_output</span><span class="params">(hidden_dim)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">hidden_bias</span><span class="params">(hidden_dim)</span></span>;</span><br><span class="line">    <span class="type">double</span> output_bias;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 2*M: W (Input-&gt;Hidden)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; input_dim; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">            input_to_hidden[i][j] = position[idx++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1*M: W (Hidden-&gt;Output)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">        hidden_to_output[j] = position[idx++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1*M: b (Hidden)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">        hidden_bias[j] = position[idx++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1: b(Output)</span></span><br><span class="line">    output_bias = position[idx];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//==================== Forward-Propagate: Build up the NN / then get error for PSO to optimize position(W,b) ====================</span></span><br><span class="line">    <span class="type">double</span> error = <span class="number">0.0</span>;</span><br><span class="line">    <span class="type">int</span> correct_predictions = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//for every data</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; sample : data) &#123;</span><br><span class="line">        <span class="type">const</span> vector&lt;<span class="type">double</span>&gt;&amp; input = sample.input;</span><br><span class="line">        <span class="type">double</span> true_output = sample.label;</span><br><span class="line">        <span class="comment">//Forward-Propagate: HiddenLayer</span></span><br><span class="line">        <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">hidden_output</span><span class="params">(hidden_dim, <span class="number">0.0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; input_dim; i++) &#123;</span><br><span class="line">                <span class="comment">//y = w1*x1 + w2*x2 + b</span></span><br><span class="line">                hidden_output[j] += input[i] * input_to_hidden[i][j];</span><br><span class="line">                <span class="comment">//y = w1*(x1^2+x2^2) + w2*(x1*x2) + b </span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                if(i == 1)</span></span><br><span class="line"><span class="comment">                    hidden_output[j] += input_to_hidden[i-1][j] * (pow(input[i-1],2) + pow(input[i],2)) </span></span><br><span class="line"><span class="comment">                                      + input_to_hidden[i][j] * (input[i-1] * input[i-1]);</span></span><br><span class="line"><span class="comment">                else</span></span><br><span class="line"><span class="comment">                    continue;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="comment">//y = w1*sinx1 + w2*cosx2 + b </span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                if(i == 1)</span></span><br><span class="line"><span class="comment">                    hidden_output[j] += sin(input[i-1]) * input_to_hidden[i-1][j] + cos(input[i]) * input_to_hidden[i][j];</span></span><br><span class="line"><span class="comment">                else</span></span><br><span class="line"><span class="comment">                    continue;</span></span><br><span class="line"><span class="comment">                */</span>   </span><br><span class="line">            &#125;</span><br><span class="line">            hidden_output[j] += hidden_bias[j];</span><br><span class="line">            hidden_output[j] = <span class="built_in">Tanh_activation_function</span>(hidden_output[j]);</span><br><span class="line">            <span class="comment">//hidden_output[j] = ReLU_activation_function(hidden_output[j]);</span></span><br><span class="line">            <span class="comment">//hidden_output[j] = Sigmiod_activation_function(hidden_output[j]);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Forward-Propagate: OutputLayer</span></span><br><span class="line">        <span class="type">double</span> output = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">            output += hidden_output[j] * hidden_to_output[j];</span><br><span class="line">        &#125;</span><br><span class="line">        output += output_bias;</span><br><span class="line">        output = <span class="built_in">Sigmiod_activation_function</span>(output); </span><br><span class="line">        <span class="comment">//Error Calculation</span></span><br><span class="line">        error += <span class="built_in">pow</span>(output - true_output, <span class="number">2</span>) / data.<span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">// Accuracy calculation</span></span><br><span class="line">        <span class="type">int</span> predicted_label = (output &gt;= <span class="number">0.5</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (predicted_label == true_output) &#123;</span><br><span class="line">            correct_predictions++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> accuracy = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(correct_predictions) / data.<span class="built_in">size</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//double E = error + (1-accuracy);</span></span><br><span class="line">    <span class="type">double</span> E = error;</span><br><span class="line">    <span class="keyword">return</span> E;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">GlobalBest <span class="title">pso</span><span class="params">(<span class="type">const</span> vector&lt;DataPoint&gt;&amp; data, <span class="type">int</span> hidden_nodes, <span class="type">int</span> num_particles, <span class="type">int</span> max_iterations)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> dim = <span class="number">2</span> * hidden_nodes + hidden_nodes + hidden_nodes + <span class="number">1</span>;  <span class="comment">// Particle.Position dim: 2*M + 1*M + 1*M + 1;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//==================== Initialization of Particles ====================</span></span><br><span class="line">    random_device rd;</span><br><span class="line">    <span class="function">mt19937 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">    uniform_real_distribution&lt;&gt; <span class="built_in">dist</span>(<span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;Particle&gt; <span class="title">particles</span><span class="params">(num_particles)</span></span>;</span><br><span class="line">    GlobalBest global_best;</span><br><span class="line">    global_best.fitness = numeric_limits&lt;<span class="type">double</span>&gt;::<span class="built_in">infinity</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; particle : particles) &#123;</span><br><span class="line">        particle.position.<span class="built_in">resize</span>(dim);</span><br><span class="line">        particle.velocity.<span class="built_in">resize</span>(dim);</span><br><span class="line">        particle.best_position.<span class="built_in">resize</span>(dim);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dim; i++) &#123;</span><br><span class="line">            particle.position[i] = <span class="built_in">dist</span>(gen);</span><br><span class="line">            particle.velocity[i] = <span class="built_in">dist</span>(gen) * <span class="number">0.1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        particle.best_position = particle.position;</span><br><span class="line">        particle.best_fitness = <span class="built_in">fitness_function</span>(particle.position, data, hidden_nodes);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (particle.best_fitness &lt; global_best.fitness) &#123;</span><br><span class="line">            global_best.position = particle.best_position;</span><br><span class="line">            global_best.fitness = particle.best_fitness;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// PSO迭代</span></span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">&quot;result/fitness_results_ARM5.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> iter = <span class="number">0</span>; iter &lt; max_iterations; iter++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; particle : particles) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> fitness = <span class="built_in">fitness_function</span>(particle.position, data, hidden_nodes);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fitness &lt; particle.best_fitness) &#123;</span><br><span class="line">                particle.best_fitness = fitness;</span><br><span class="line">                particle.best_position = particle.position;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fitness &lt; global_best.fitness) &#123;</span><br><span class="line">                global_best.fitness = fitness;</span><br><span class="line">                global_best.position = particle.position;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; dim; i++) &#123;</span><br><span class="line">                <span class="type">double</span> r1 = <span class="built_in">dist</span>(gen), r2 = <span class="built_in">dist</span>(gen);</span><br><span class="line">                particle.velocity[i] = w * particle.velocity[i] +</span><br><span class="line">                                       c1 * r1 * (particle.best_position[i] - particle.position[i]) +</span><br><span class="line">                                       c2 * r2 * (global_best.position[i] - particle.position[i]);</span><br><span class="line">                particle.position[i] += particle.velocity[i] * LR;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Iteration &quot;</span> &lt;&lt; iter + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: Best Fitness(ErrorRate) = &quot;</span> &lt;&lt; global_best.fitness &lt;&lt; endl;</span><br><span class="line">        outfile &lt;&lt; <span class="string">&quot;Iteration &quot;</span> &lt;&lt; iter + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: Best Fitness(ErrorRate) = &quot;</span> &lt;&lt; global_best.fitness &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    outfile.<span class="built_in">close</span>(); </span><br><span class="line">    <span class="keyword">return</span> global_best;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Two-Nested-Spirals</span></span><br><span class="line"><span class="function">vector&lt;DataPoint&gt; <span class="title">generate_spiral_data</span><span class="params">(<span class="type">int</span> num_points, <span class="type">int</span> num_turns)</span> </span>&#123;</span><br><span class="line">    vector&lt;DataPoint&gt; data;</span><br><span class="line">    <span class="type">double</span> pi = <span class="number">3.141592653589793</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_points; i++) &#123;</span><br><span class="line">        <span class="type">double</span> t = i * pi * num_turns / num_points;</span><br><span class="line">        data.<span class="built_in">push_back</span>(\&#123;\&#123;t * <span class="built_in">cos</span>(t), t * <span class="built_in">sin</span>(t)\&#125;, <span class="number">0.0</span>\&#125;); </span><br><span class="line">        data.<span class="built_in">push_back</span>(\&#123;\&#123;-t * <span class="built_in">cos</span>(t), -t * <span class="built_in">sin</span>(t)\&#125;, <span class="number">1.0</span>\&#125;); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">normalize_data</span><span class="params">(vector&lt;DataPoint&gt;&amp; data, <span class="type">double</span> max_value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; point : data) &#123;</span><br><span class="line">        point.input[<span class="number">0</span>] /= max_value;</span><br><span class="line">        point.input[<span class="number">1</span>] /= max_value; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pair&lt;vector&lt;DataPoint&gt;, vector&lt;DataPoint&gt;&gt; <span class="built_in">split_data_for_validation</span>(<span class="type">const</span> vector&lt;DataPoint&gt;&amp; data, <span class="type">double</span> validation_ratio) &#123;</span><br><span class="line">    <span class="type">int</span> validation_size = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(data.<span class="built_in">size</span>() * validation_ratio);</span><br><span class="line"></span><br><span class="line">    vector&lt;DataPoint&gt; shuffled_data = data;</span><br><span class="line">    random_device rd;</span><br><span class="line">    <span class="function">mt19937 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">    <span class="built_in">shuffle</span>(shuffled_data.<span class="built_in">begin</span>(), shuffled_data.<span class="built_in">end</span>(), gen);</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;DataPoint&gt; <span class="title">validation_data</span><span class="params">(shuffled_data.begin(), shuffled_data.begin() + validation_size)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;DataPoint&gt; <span class="title">training_data</span><span class="params">(shuffled_data.begin() + validation_size, shuffled_data.end())</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;training_data, validation_data&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">test_model</span><span class="params">(<span class="type">const</span> vector&lt;<span class="type">double</span>&gt;&amp; best_position, <span class="type">const</span> vector&lt;DataPoint&gt;&amp; test_data, <span class="type">int</span> hidden_nodes)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> input_dim = <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> hidden_dim = hidden_nodes;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//==================== Extract (W,b) from the trained weights ====================</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">double</span>&gt;&gt; <span class="built_in">input_to_hidden</span>(input_dim, <span class="built_in">vector</span>&lt;<span class="type">double</span>&gt;(hidden_dim));</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">hidden_to_output</span><span class="params">(hidden_dim)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">hidden_bias</span><span class="params">(hidden_dim)</span></span>;</span><br><span class="line">    <span class="type">double</span> output_bias;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 2*M: W (Input-&gt;Hidden)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; input_dim; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">            input_to_hidden[i][j] = best_position[idx++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1*M: W (Hidden-&gt;Output)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">        hidden_to_output[j] = best_position[idx++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1*M: b (Hidden)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">        hidden_bias[j] = best_position[idx++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1: b(Output)</span></span><br><span class="line">    output_bias = best_position[idx];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//==================== Forward-Propagate for Testing ====================</span></span><br><span class="line">    <span class="type">int</span> correct_predictions = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; sample : test_data) &#123;</span><br><span class="line">        <span class="type">const</span> vector&lt;<span class="type">double</span>&gt;&amp; input = sample.input;</span><br><span class="line">        <span class="type">double</span> true_output = sample.label;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Forward-Propagate: Hidden Layer </span></span><br><span class="line">        <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">hidden_output</span><span class="params">(hidden_dim, <span class="number">0.0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; input_dim; i++) &#123;</span><br><span class="line">                <span class="comment">//y = w1*x1 + w2*x2 + b</span></span><br><span class="line">                hidden_output[j] += input[i] * input_to_hidden[i][j];</span><br><span class="line">                <span class="comment">//y = w1*(x1^2+x2^2) + w2*(x1*x2) + b </span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                if(i == 1)</span></span><br><span class="line"><span class="comment">                    hidden_output[j] += input_to_hidden[i-1][j] * (pow(input[i-1],2) + pow(input[i],2)) </span></span><br><span class="line"><span class="comment">                                      + input_to_hidden[i][j] * (input[i-1] * input[i-1]);</span></span><br><span class="line"><span class="comment">                else</span></span><br><span class="line"><span class="comment">                    continue;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="comment">//y = w1*sinx1 + w2*cosx2 + b </span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                if(i == 1)</span></span><br><span class="line"><span class="comment">                    hidden_output[j] += sin(input[i-1]) * input_to_hidden[i-1][j] + cos(input[i]) * input_to_hidden[i][j];</span></span><br><span class="line"><span class="comment">                else</span></span><br><span class="line"><span class="comment">                    continue;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">            &#125;</span><br><span class="line">            hidden_output[j] += hidden_bias[j];</span><br><span class="line">            hidden_output[j] = <span class="built_in">Tanh_activation_function</span>(hidden_output[j]);</span><br><span class="line">            <span class="comment">//hidden_output[j] = ReLU_activation_function(hidden_output[j]);</span></span><br><span class="line">            <span class="comment">//hidden_output[j] = Sigmiod_activation_function(hidden_output[j]);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Forward-Propagate: Output Layer</span></span><br><span class="line">        <span class="type">double</span> output = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; hidden_dim; j++) &#123;</span><br><span class="line">            output += hidden_output[j] * hidden_to_output[j];</span><br><span class="line">        &#125;</span><br><span class="line">        output += output_bias;</span><br><span class="line">        output = <span class="built_in">Sigmiod_activation_function</span>(output); <span class="comment">// Sigmoid activation</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Classify and Count Correct Predictions</span></span><br><span class="line">        <span class="type">int</span> predicted_label = (output &gt;= <span class="number">0.5</span>) ? <span class="number">1</span> : <span class="number">0</span>; <span class="comment">// Sigmoid threshold at 0.5</span></span><br><span class="line">        <span class="keyword">if</span> (predicted_label == true_output) &#123;</span><br><span class="line">            correct_predictions++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//==================== Calculate Accuracy ====================</span></span><br><span class="line">    <span class="type">double</span> accuracy = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(correct_predictions) / test_data.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">return</span> accuracy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> num_points = <span class="number">100</span> * num_spiral_rounds;  </span><br><span class="line">    vector&lt;DataPoint&gt; data = <span class="built_in">generate_spiral_data</span>(num_points,num_spiral_rounds);</span><br><span class="line">    <span class="built_in">normalize_data</span>(data,<span class="number">30.0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> validation_ratio = <span class="number">0.2</span>;</span><br><span class="line">    pair&lt;vector&lt;DataPoint&gt;, vector&lt;DataPoint&gt;&gt; split_result = <span class="built_in">split_data_for_validation</span>(data, validation_ratio);</span><br><span class="line">    vector&lt;DataPoint&gt; train_data = split_result.first;</span><br><span class="line">    vector&lt;DataPoint&gt; validation_data = split_result.second;</span><br><span class="line"></span><br><span class="line">    GlobalBest best_solution = <span class="built_in">pso</span>(train_data, M_hidden_nodes, num_particles, max_iterations);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Best Fitness(Minimum-ErrorRate): &quot;</span> &lt;&lt; best_solution.fitness &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> validation_accuracy = <span class="built_in">test_model</span>(best_solution.position, validation_data, M_hidden_nodes);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Model Accuracy on Validation Data: &quot;</span> &lt;&lt; validation_accuracy * <span class="number">100</span> &lt;&lt; <span class="string">&quot;%&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Course Assignment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calculator的Verilog实现与上板验证：SystemLSI Project#1 留档</title>
      <link href="/2025/02/08/slsi-calculator-project/"/>
      <url>/2025/02/08/slsi-calculator-project/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="核心功能与创新功能-PPT"><a href="#核心功能与创新功能-PPT" class="headerlink" title="核心功能与创新功能(PPT)"></a>核心功能与创新功能(PPT)</h2><img src="https://s2.loli.net/2025/02/08/aR86g5AtWCwyTFh.png"><img src="https://s2.loli.net/2025/02/08/6NgzED9rR1wlPMC.png"><img src="https://s2.loli.net/2025/02/08/2PDuycVGMNBTEL5.png"><img src="https://s2.loli.net/2025/02/08/RcveMl6YkDxA4Xj.png"><img src="https://s2.loli.net/2025/02/08/zcvftHCeihZQVrw.png"><hr><h2 id="代码汇总"><a href="#代码汇总" class="headerlink" title="代码汇总"></a>代码汇总</h2><h3 id="板卡顶层模块AP600-v"><a href="#板卡顶层模块AP600-v" class="headerlink" title="板卡顶层模块AP600.v"></a>板卡顶层模块AP600.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AP600: Interface between top-moudule of calculator and FPGA board</span></span><br><span class="line"><span class="keyword">module</span> AP600 (clk, reset, pswA, pswB, pswC, pswD, dipA, dipB,</span><br><span class="line">      hexA, hexB, buzzer, ledA, ledB, ledC, ledD, </span><br><span class="line">             segA, segB, segC, segD, segE, segF, segG, segH) ;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">input</span>      clk, reset;             <span class="comment">// Clock, Reset</span></span><br><span class="line">  <span class="keyword">input</span>[<span class="number">4</span>:<span class="number">0</span>] pswA, pswB, pswC, pswD; <span class="comment">// Push switch</span></span><br><span class="line">  <span class="keyword">input</span>[<span class="number">7</span>:<span class="number">0</span>] dipA, dipB;             <span class="comment">// DIP switch</span></span><br><span class="line">  <span class="keyword">input</span>[<span class="number">3</span>:<span class="number">0</span>] hexA, hexB;             <span class="comment">// Rotary switch</span></span><br><span class="line">  <span class="keyword">output</span>     buzzer;     <span class="comment">// Buzzer</span></span><br><span class="line">  <span class="keyword">output</span>[<span class="number">7</span>:<span class="number">0</span>] ledA, ledB, ledC, ledD;<span class="comment">// LED</span></span><br><span class="line">  <span class="keyword">output</span>[<span class="number">7</span>:<span class="number">0</span>] segA, segB, segC, segD, segE, segF, segG, segH ; <span class="comment">// 7SEG LED</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] ledb,ledc,ledd,lede,ledf,ledg,ledh;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">9</span>:<span class="number">0</span>] push;</span><br><span class="line">  <span class="keyword">wire</span> overflow, sign, ce, plus, minus, equal;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for Debug</span></span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] state;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">24</span>:<span class="number">0</span>] regb;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">24</span>:<span class="number">0</span>] rega;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] count;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] opr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">0</span>] = pswD[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">1</span>] = pswC[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">2</span>] = pswC[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">3</span>] = pswC[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">4</span>] = pswB[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">5</span>] = pswB[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">6</span>] = pswB[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">7</span>] = pswA[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">8</span>] = pswA[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">assign</span> push[<span class="number">9</span>] = pswA[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">assign</span> plus    = pswD[<span class="number">3</span>];  <span class="comment">//nAk</span></span><br><span class="line">  <span class="keyword">assign</span> minus   = pswC[<span class="number">3</span>];  <span class="comment">//nCk</span></span><br><span class="line">  <span class="keyword">assign</span> mult    = pswB[<span class="number">3</span>];  <span class="comment">//x!</span></span><br><span class="line">  <span class="keyword">assign</span> div     = pswA[<span class="number">3</span>];  <span class="comment">//x^2</span></span><br><span class="line">  <span class="keyword">assign</span> ce      = pswA[<span class="number">4</span>];  </span><br><span class="line">  <span class="keyword">assign</span> equal   = pswD[<span class="number">4</span>];</span><br><span class="line">  <span class="keyword">assign</span> switch  = pswC[<span class="number">4</span>];</span><br><span class="line">  <span class="keyword">assign</span> inverse = pswD[<span class="number">2</span>];   <span class="comment">//±</span></span><br><span class="line">  <span class="keyword">assign</span> game    = pswD[<span class="number">1</span>];   <span class="comment">//进入井字棋游玩模式</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Output assignment</span></span><br><span class="line">  <span class="keyword">assign</span> buzzer = overflow;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">assign</span> ledA = &#123;overflow,<span class="number">2&#x27;b00</span>, count[<span class="number">0</span>],count[<span class="number">1</span>], </span><br><span class="line">                 opr, state[<span class="number">0</span>], state[<span class="number">1</span>]&#125;;</span><br><span class="line">  <span class="keyword">assign</span> ledB = &#123;regb[<span class="number">8</span>], <span class="number">7&#x27;b0000000</span>&#125;;</span><br><span class="line">  <span class="keyword">assign</span> ledC = &#123;regb[<span class="number">0</span>],regb[<span class="number">1</span>],regb[<span class="number">2</span>],regb[<span class="number">3</span>],</span><br><span class="line">                 regb[<span class="number">4</span>],regb[<span class="number">5</span>],regb[<span class="number">6</span>],regb[<span class="number">7</span>]&#125;;</span><br><span class="line">  <span class="keyword">assign</span> ledD = &#123;rega[<span class="number">0</span>],rega[<span class="number">1</span>],rega[<span class="number">2</span>],rega[<span class="number">3</span>],</span><br><span class="line">                 rega[<span class="number">4</span>],rega[<span class="number">5</span>],rega[<span class="number">6</span>],<span class="number">1&#x27;b0</span>&#125;;</span><br><span class="line">                 </span><br><span class="line">  <span class="comment">//H最低位，B最高位!!!  (A符号位)</span></span><br><span class="line">  <span class="keyword">assign</span> segA = &#123;<span class="number">6&#x27;b000000</span>,sign,<span class="number">1&#x27;b0</span>&#125;;</span><br><span class="line">  <span class="keyword">assign</span> segB = ledb;</span><br><span class="line">  <span class="keyword">assign</span> segC = ledc;</span><br><span class="line">  <span class="keyword">assign</span> segD = ledd;</span><br><span class="line">  <span class="keyword">assign</span> segE = lede;</span><br><span class="line">  <span class="keyword">assign</span> segF = ledf;</span><br><span class="line">  <span class="keyword">assign</span> segG = ledg;</span><br><span class="line">  <span class="keyword">assign</span> segH = ledh;</span><br><span class="line"></span><br><span class="line">  calctop calctop(clk, reset, push, ce, plus, minus, mult, div, equal, switch, inverse,</span><br><span class="line">               sign, ledh, ledg, ledf, lede, ledd, ledc, ledb, overflow, state, rega, regb,</span><br><span class="line">               count, opr, game);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="运算和显示顶层模块calctop-v"><a href="#运算和显示顶层模块calctop-v" class="headerlink" title="运算和显示顶层模块calctop.v"></a>运算和显示顶层模块calctop.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Calctop: Calculator top module</span></span><br><span class="line"><span class="keyword">module</span> calctop(clk, reset, push, ce, plus, minus, mult, div, equal, switch, inverse,</span><br><span class="line">               sign, ledh, ledg, ledf, lede, ledd, ledc, ledb, overflow, state, rega, regb,</span><br><span class="line">               count, opr, game);</span><br><span class="line">               </span><br><span class="line">  <span class="keyword">input</span> plus, minus, equal, ce, reset, clk;</span><br><span class="line">  <span class="comment">//新增按键</span></span><br><span class="line">  <span class="keyword">input</span> mult, div, switch, inverse;</span><br><span class="line">  <span class="keyword">input</span> game;</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">9</span>:<span class="number">0</span>] push;</span><br><span class="line">  <span class="keyword">output</span> overflow, sign;</span><br><span class="line">  <span class="comment">//output [7:0] ledh, ledl;</span></span><br><span class="line">  <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] ledh, ledg, ledf, lede, ledd, ledc, ledb;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for Debug</span></span><br><span class="line">  <span class="keyword">output</span> [<span class="number">1</span>:<span class="number">0</span>] state;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">24</span>:<span class="number">0</span>] regb;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">24</span>:<span class="number">0</span>] rega;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] count;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] opr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">wire</span> plusout, minusout, equalout, ceout;</span><br><span class="line">  <span class="comment">// 新增按键</span></span><br><span class="line">  <span class="keyword">wire</span> multout, divout;</span><br><span class="line">  <span class="keyword">wire</span> switchout, inverseout;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">9</span>:<span class="number">0</span>] pushout;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">24</span>:<span class="number">0</span>] wout;</span><br><span class="line"></span><br><span class="line">  calc calc(pushout, plusout, minusout, multout, divout, equalout, switchout, inverseout, clk, reset, ceout, </span><br><span class="line">            sign, overflow, wout, state, rega, regb, count, </span><br><span class="line">            opr, gameout);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//binled binled(wout, ledl, ledh);</span></span><br><span class="line">  binled binled(wout, ledh, ledg, ledf, lede, ledd, ledc, ledb);</span><br><span class="line"></span><br><span class="line">  syncro syncroce(ceout, ce, clk, reset);</span><br><span class="line">  syncro syncropuls(plusout, plus, clk, reset);</span><br><span class="line">  syncro syncrominus(minusout, minus, clk, reset);</span><br><span class="line">  syncro syncroequal(equalout, equal, clk, reset);</span><br><span class="line">  <span class="comment">//新增按键</span></span><br><span class="line">  syncro syncromult(multout, mult, clk, reset);</span><br><span class="line">  syncro syncrodiv(divout, div, clk, reset);</span><br><span class="line">  syncro syncroswitch(switchout, switch, clk, reset);</span><br><span class="line">  syncro syncroinverse(inverseout, inverse, clk, reset);</span><br><span class="line">  syncro syncrogame(gameout, game, clk, reset);</span><br><span class="line">  </span><br><span class="line">  syncro10 syncropush(pushout, push, clk, reset);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="核心模块calc-v"><a href="#核心模块calc-v" class="headerlink" title="核心模块calc.v"></a>核心模块calc.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">define</span> DECIMAL 0</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OPE 1</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> HALT 2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> XY 3         </span><span class="comment">//运算x^y</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> DOUBLEJC 4   </span><span class="comment">//运算x!!</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> GCD 5       </span><span class="comment">//最大公因数</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LCM 6       </span><span class="comment">//最小公倍数</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> MatPre 7    </span><span class="comment">//预处理</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> MatPlus 8  </span><span class="comment">//矩阵加</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> MatHLS 9   </span><span class="comment">//行列式的值</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> MatMult 10  </span><span class="comment">//矩阵乘</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> Cov1D 11 </span><span class="comment">//1维序列线性卷积</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> P1  12 </span><span class="comment">//玩家一按</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> P2  13 </span><span class="comment">//玩家二按</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> Judge 14 </span><span class="comment">//判断输赢</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Calc: Calculator main module</span></span><br><span class="line"><span class="keyword">module</span> calc(decimal, plus, minus, mult, div, equal, switch, inverse, clk, reset, </span><br><span class="line">            ce, sign, overflow, out, state, REGA, REGB, count, opr, game);</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">9</span>:<span class="number">0</span>] decimal;</span><br><span class="line">  <span class="keyword">input</span> clk, ce, reset, plus, minus, equal;</span><br><span class="line">  <span class="keyword">input</span> mult,div;</span><br><span class="line">  <span class="keyword">input</span> switch, inverse;</span><br><span class="line">  <span class="keyword">input</span> game;</span><br><span class="line">  <span class="keyword">output</span> sign, overflow;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">24</span>:<span class="number">0</span>] out;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for Debugging</span></span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] state;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">24</span>:<span class="number">0</span>] REGB;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">24</span>:<span class="number">0</span>] REGA;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] count;   <span class="comment">//0-7bit</span></span><br><span class="line">  <span class="comment">//output add_or_sub;</span></span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] opr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] d;</span><br><span class="line">  <span class="comment">//wire [8:0] alu_out;</span></span><br><span class="line">  <span class="keyword">reg</span>  [<span class="number">3</span>:<span class="number">0</span>] state;</span><br><span class="line">  <span class="comment">//七位数:-9999999~9999999//</span></span><br><span class="line">  <span class="keyword">reg</span>  [<span class="number">24</span>:<span class="number">0</span>] REGB;   <span class="comment">//七位数最多9999999=24bit ，开设25bit寄存器，最高位是负数指示位//</span></span><br><span class="line">  <span class="keyword">reg</span>  [<span class="number">24</span>:<span class="number">0</span>] REGA;   </span><br><span class="line">  <span class="keyword">reg</span>  [<span class="number">3</span>:<span class="number">0</span>] count;</span><br><span class="line">  <span class="comment">//reg        add_or_sub ;</span></span><br><span class="line">  <span class="keyword">reg</span>  [<span class="number">3</span>:<span class="number">0</span>] opr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> [<span class="number">3</span>:<span class="number">0</span>] dectobin;</span><br><span class="line">   <span class="keyword">input</span> [<span class="number">9</span>:<span class="number">0</span>] in;</span><br><span class="line">    <span class="keyword">if</span>(in[<span class="number">9</span>])</span><br><span class="line">     dectobin = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">8</span>])</span><br><span class="line">     dectobin = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">7</span>])</span><br><span class="line">     dectobin = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">6</span>])</span><br><span class="line">     dectobin = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">5</span>])</span><br><span class="line">     dectobin = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">4</span>])</span><br><span class="line">     dectobin = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">3</span>])</span><br><span class="line">     dectobin = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">2</span>])</span><br><span class="line">     dectobin = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">1</span>])</span><br><span class="line">     dectobin = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(in[<span class="number">0</span>])</span><br><span class="line">     dectobin = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">endfunction</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">assign</span> d=dectobin(decimal);</span><br><span class="line"></span><br><span class="line"><span class="comment">//阶乘表JC_MAP</span></span><br><span class="line"><span class="keyword">wire</span>[<span class="number">24</span>:<span class="number">0</span>] JC_MAP[<span class="number">10</span>:<span class="number">0</span>];</span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">0</span>] = <span class="number">25&#x27;d1</span>;          <span class="comment">// 0! = 1</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">1</span>] = <span class="number">25&#x27;d1</span>;          <span class="comment">// 1! = 1</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">2</span>] = <span class="number">25&#x27;d2</span>;          <span class="comment">// 2! = 2</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">3</span>] = <span class="number">25&#x27;d6</span>;          <span class="comment">// 3! = 6</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">4</span>] = <span class="number">25&#x27;d24</span>;         <span class="comment">// 4! = 24</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">5</span>] = <span class="number">25&#x27;d120</span>;        <span class="comment">// 5! = 120</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">6</span>] = <span class="number">25&#x27;d720</span>;        <span class="comment">// 6! = 720</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">7</span>] = <span class="number">25&#x27;d5040</span>;       <span class="comment">// 7! = 5040</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">8</span>] = <span class="number">25&#x27;d40320</span>;      <span class="comment">// 8! = 40320</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">9</span>] = <span class="number">25&#x27;d362880</span>;     <span class="comment">// 9! = 362880</span></span><br><span class="line"><span class="keyword">assign</span> JC_MAP[<span class="number">10</span>] = <span class="number">25&#x27;d3628800</span>;   <span class="comment">// 10! = 3628800</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] s_cnt;   <span class="comment">//switch按下计数</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">24</span>:<span class="number">0</span>] x,y;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">24</span>:<span class="number">0</span>] a,b;</span><br><span class="line"><span class="keyword">reg</span>  BranchFSM_running;   <span class="comment">//正在运算旁支FSM：XY</span></span><br><span class="line"><span class="keyword">integer</span> i;</span><br><span class="line"><span class="keyword">integer</span> DOUBLE_JC_MAX = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">integer</span> XY_MAX = <span class="number">10</span>;   <span class="comment">//x^y中y的最大值</span></span><br><span class="line"><span class="comment">//矩阵运算</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">2</span>:<span class="number">0</span>] Mat_weishu;</span><br><span class="line"><span class="keyword">reg</span>      over;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] Mnumber6A,Mnumber5A,Mnumber4A,Mnumber3A,Mnumber2A,Mnumber1A;   <span class="comment">//矩阵A</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] Mnumber6B,Mnumber5B,Mnumber4B,Mnumber3B,Mnumber2B,Mnumber1B;   <span class="comment">//矩阵B</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] Mnumber7R,Mnumber6R,Mnumber5R,Mnumber4R,Mnumber3R,Mnumber2R,Mnumber1R;   <span class="comment">//结果矩阵R</span></span><br><span class="line"><span class="comment">//井字棋</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">2</span>:<span class="number">0</span>] L_1,M_1,H_1;   <span class="comment">//玩家一的三行输入情况[H,M,L]</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">2</span>:<span class="number">0</span>] L_2,M_2,H_2;   <span class="comment">//玩家二的三行输入情况</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] Pcnt;      <span class="comment">//玩家步数计数</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">1</span>:<span class="number">0</span>] winner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span>(!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         REGA &lt;= <span class="number">0</span>; REGB &lt;= <span class="number">0</span>; count &lt;= <span class="number">0</span>;   </span><br><span class="line">         x &lt;= <span class="number">0</span>; y &lt;= <span class="number">0</span>; a &lt;= <span class="number">0</span>; b &lt;= <span class="number">0</span>;</span><br><span class="line">         BranchFSM_running &lt;= <span class="number">0</span>;</span><br><span class="line">         Mat_weishu &lt;= <span class="number">0</span>;  </span><br><span class="line">         over &lt;= <span class="number">0</span>;</span><br><span class="line">         Mnumber6A &lt;= <span class="number">0</span>; Mnumber5A&lt;= <span class="number">0</span>; Mnumber4A&lt;= <span class="number">0</span>; Mnumber3A&lt;= <span class="number">0</span>; Mnumber2A&lt;= <span class="number">0</span>; Mnumber1A&lt;= <span class="number">0</span>; </span><br><span class="line">         Mnumber6B &lt;= <span class="number">0</span>; Mnumber5B&lt;= <span class="number">0</span>; Mnumber4B&lt;= <span class="number">0</span>; Mnumber3B&lt;= <span class="number">0</span>; Mnumber2B&lt;= <span class="number">0</span>; Mnumber1B&lt;= <span class="number">0</span>; </span><br><span class="line">         Mnumber7R &lt;= <span class="number">0</span>; Mnumber6R &lt;= <span class="number">0</span>; Mnumber5R&lt;= <span class="number">0</span>; Mnumber4R&lt;= <span class="number">0</span>; Mnumber3R&lt;= <span class="number">0</span>; Mnumber2R&lt;= <span class="number">0</span>; Mnumber1R&lt;= <span class="number">0</span>;</span><br><span class="line">         L_1 &lt;= <span class="number">0</span>;  M_1 &lt;= <span class="number">0</span>;  H_1 &lt;= <span class="number">0</span>;</span><br><span class="line">         L_2 &lt;= <span class="number">0</span>;  M_2 &lt;= <span class="number">0</span>;  H_2 &lt;= <span class="number">0</span>;</span><br><span class="line">         Pcnt &lt;= <span class="number">0</span>;</span><br><span class="line">         winner &lt;= <span class="number">0</span>;</span><br><span class="line">         opr &lt;= <span class="number">0</span>;</span><br><span class="line">         s_cnt &lt;= <span class="number">0</span>;</span><br><span class="line">         state&lt;= `DECIMAL;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span> (state)</span><br><span class="line">         `DECIMAL :</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">             <span class="comment">//switch计数:0 -&gt; 1 -&gt; 2</span></span><br><span class="line">             s_cnt &lt;= (switch==<span class="number">1</span>) ? (s_cnt+<span class="number">1</span>) : s_cnt;</span><br><span class="line">                </span><br><span class="line">             <span class="keyword">if</span>((decimal != <span class="number">0</span>) &amp;&amp; (count &lt; <span class="number">7</span>))    <span class="comment">//修改位数</span></span><br><span class="line">               <span class="keyword">begin</span></span><br><span class="line">                 count &lt;= count + <span class="number">1</span>;</span><br><span class="line">                 REGA &lt;= REGA * <span class="number">10</span> + d;</span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span>(ce)</span><br><span class="line">               <span class="keyword">begin</span></span><br><span class="line">                 REGA &lt;= <span class="number">0</span>; </span><br><span class="line">                 count &lt;= <span class="number">0</span>;</span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span>(inverse)   <span class="comment">//±</span></span><br><span class="line">               <span class="keyword">begin</span></span><br><span class="line">                 REGA &lt;= ~REGA + <span class="number">1</span>;</span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span> (game)  <span class="keyword">begin</span>   <span class="comment">//按下game按键</span></span><br><span class="line">                 state &lt;= `P1;</span><br><span class="line">                 REGA &lt;= <span class="number">1234321</span>;</span><br><span class="line">                 REGB &lt;= <span class="number">1234321</span>;</span><br><span class="line">             <span class="keyword">end</span></span><br><span class="line">             <span class="comment">//A: 7  8  9  /   CE</span></span><br><span class="line">             <span class="comment">//B: 4  5  6  *   C</span></span><br><span class="line">             <span class="comment">//C: 1  2  3  -   S</span></span><br><span class="line">             <span class="comment">//D: 0    ±  +   =      switch=0  4  8</span></span><br><span class="line">             <span class="comment">//-----------------------------</span></span><br><span class="line">             <span class="comment">//A: 7  8  9  x^2   CE</span></span><br><span class="line">             <span class="comment">//B: 4  5  6  x!    C</span></span><br><span class="line">             <span class="comment">//C: 1  2  3  mCn   S</span></span><br><span class="line">             <span class="comment">//D: 0    ±  mAn   =    switch=1  5  9</span></span><br><span class="line">             <span class="comment">//-----------------------------</span></span><br><span class="line">             <span class="comment">//A: 7  8  9  x^y   CE</span></span><br><span class="line">             <span class="comment">//B: 4  5  6  x!!   C</span></span><br><span class="line">             <span class="comment">//C: 1  2  3  GCD   S</span></span><br><span class="line">             <span class="comment">//D: 0    ±  LCM   =    switch=2  6  10</span></span><br><span class="line">             <span class="comment">//-----------------------------</span></span><br><span class="line">             <span class="comment">//A: 7  8  9  Mat+   CE</span></span><br><span class="line">             <span class="comment">//B: 4  5  6  |Mat|  C</span></span><br><span class="line">             <span class="comment">//C: 1  2  3  Mat*   S</span></span><br><span class="line">             <span class="comment">//D: 0    ± 1D-cov  =   switch=3  7  11</span></span><br><span class="line">             <span class="comment">//-----------------------------                         </span></span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span>(plus || minus || mult || div || equal)  </span><br><span class="line">               <span class="keyword">begin</span> </span><br><span class="line">                   <span class="keyword">if</span>(s_cnt == <span class="number">0</span> || s_cnt % <span class="number">4</span> == <span class="number">0</span>) <span class="keyword">begin</span>  </span><br><span class="line">                        <span class="keyword">case</span>(opr)</span><br><span class="line">                        <span class="number">4&#x27;b0000</span>: REGB &lt;= REGB + REGA;</span><br><span class="line">                        <span class="number">4&#x27;b0001</span>: REGB &lt;= REGB - REGA;</span><br><span class="line">                        <span class="number">4&#x27;b0010</span>: REGB &lt;= REGB * REGA;</span><br><span class="line">                        <span class="number">4&#x27;b0011</span>: REGB &lt;= REGB / REGA;</span><br><span class="line">                        <span class="keyword">endcase</span></span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">if</span>(plus)         opr &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(minus)   opr &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(mult)    opr &lt;= <span class="number">4&#x27;b0010</span>;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(div)     opr &lt;= <span class="number">4&#x27;b0011</span>;</span><br><span class="line">                        <span class="keyword">else</span>             opr &lt;= opr;</span><br><span class="line">                   <span class="keyword">end</span>  <span class="comment">//</span></span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>(s_cnt % <span class="number">4</span> == <span class="number">1</span>) <span class="keyword">begin</span>  </span><br><span class="line">                        <span class="keyword">case</span>(opr)</span><br><span class="line">                        <span class="number">4&#x27;b0000</span>: REGB &lt;= REGB + REGA;</span><br><span class="line">                        <span class="number">4&#x27;b0001</span>: REGB &lt;= JC_MAP[REGB] / JC_MAP[REGB - REGA];                   <span class="comment">//nAk: n个里选择k个  n!/(n-k)!</span></span><br><span class="line">                        <span class="number">4&#x27;b0010</span>: REGB &lt;= JC_MAP[REGB] / (JC_MAP[REGA] * JC_MAP[REGB - REGA]);    <span class="comment">//nCk</span></span><br><span class="line">                        <span class="number">4&#x27;b0011</span>: REGB &lt;= JC_MAP[REGB];  </span><br><span class="line">                        <span class="number">4&#x27;b0100</span>: REGB &lt;= REGB * REGB;</span><br><span class="line">                        <span class="keyword">endcase</span></span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">if</span>(plus)         opr &lt;= <span class="number">4&#x27;b0001</span>;   <span class="comment">//nAk   </span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(minus)   opr &lt;= <span class="number">4&#x27;b0010</span>;   <span class="comment">//nCk </span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(mult)    opr &lt;= <span class="number">4&#x27;b0011</span>;   <span class="comment">//x!   </span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(div)     opr &lt;= <span class="number">4&#x27;b0100</span>;   <span class="comment">//x^2 </span></span><br><span class="line">                        <span class="keyword">else</span>             opr &lt;= opr;</span><br><span class="line">                   <span class="keyword">end</span>              </span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>(s_cnt % <span class="number">4</span> == <span class="number">2</span>) <span class="keyword">begin</span> </span><br><span class="line">                        <span class="keyword">case</span>(opr)</span><br><span class="line">                        <span class="number">4&#x27;b0000</span>: REGB &lt;= REGB + REGA;</span><br><span class="line">                        <span class="number">4&#x27;b0100</span>: <span class="keyword">begin</span>  <span class="comment">//x^y</span></span><br><span class="line">                                x &lt;= REGB;</span><br><span class="line">                                y &lt;= REGA;</span><br><span class="line">                                state &lt;= `XY;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="number">4&#x27;b0011</span>: <span class="keyword">begin</span>   <span class="comment">//x!!  输入必须按两次一样的数， 比如5!!就要按5!!5</span></span><br><span class="line">                                x &lt;= REGB; </span><br><span class="line">                                y &lt;= REGB; </span><br><span class="line">                                state &lt;= `DOUBLEJC;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="number">4&#x27;b0010</span>: <span class="keyword">begin</span>   <span class="comment">//GCD辗转相除法: x=max(REGA,REGB),y=min(REGA,REGB), (x,y)&lt;-(y,x % y)</span></span><br><span class="line">                                x &lt;= (REGA &gt; REGB) ? REGA : REGB;</span><br><span class="line">                                y &lt;= (REGA &lt; REGB) ? REGA : REGB;</span><br><span class="line">                                state &lt;= `GCD;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="number">4&#x27;b0001</span>: <span class="keyword">begin</span>  <span class="comment">//LCM = (a * b) /GCD</span></span><br><span class="line">                                x &lt;= (REGA &gt; REGB) ? REGA : REGB;</span><br><span class="line">                                y &lt;= (REGA &lt; REGB) ? REGA : REGB;</span><br><span class="line">                                state &lt;= `LCM;            </span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="keyword">endcase</span></span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">if</span>(plus)         opr &lt;= <span class="number">4&#x27;b0001</span>;    <span class="comment">//LCM</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(minus)   opr &lt;= <span class="number">4&#x27;b0010</span>;    <span class="comment">//GCD</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(mult)    opr &lt;= <span class="number">4&#x27;b0011</span>;    <span class="comment">//x!!</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(div)     opr &lt;= <span class="number">4&#x27;b0100</span>;    <span class="comment">//x^y</span></span><br><span class="line">                        <span class="keyword">else</span>             opr &lt;= opr;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>(s_cnt % <span class="number">4</span> == <span class="number">3</span>)  <span class="keyword">begin</span></span><br><span class="line">                        <span class="keyword">case</span>(opr)</span><br><span class="line">                        <span class="number">4&#x27;b0000</span>: REGB &lt;= REGB + REGA;</span><br><span class="line">                        <span class="comment">//支持的矩阵大小： 1*2  2*2  3*2</span></span><br><span class="line">                        <span class="comment">//逐行展平：比如矩阵[ [2,3,1] ; [1,4,8] ]即输入231148</span></span><br><span class="line">                        <span class="comment">//首先前往MatPre状态预处理，然后分别前往MatPlus,MatMult和hls</span></span><br><span class="line">                        <span class="number">4&#x27;b0001</span>: <span class="keyword">begin</span>  <span class="comment">//一维离散序列线性卷积</span></span><br><span class="line">                            <span class="comment">//state &lt;= `Cov1D;                 </span></span><br><span class="line">                            state &lt;= `MatPre;             </span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="number">4&#x27;b0010</span>: <span class="keyword">begin</span></span><br><span class="line">                            <span class="comment">//state &lt;= `MatMult;</span></span><br><span class="line">                            state &lt;= `MatPre;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="number">4&#x27;b0011</span>: <span class="keyword">begin</span></span><br><span class="line">                            <span class="comment">//state &lt;= `MatHLS;</span></span><br><span class="line">                            state &lt;= `MatPre;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="number">4&#x27;b0100</span>: <span class="keyword">begin</span></span><br><span class="line">                            <span class="comment">//state &lt;= `MatPlus;</span></span><br><span class="line">                            state &lt;= `MatPre;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="keyword">endcase</span></span><br><span class="line">                   </span><br><span class="line">                        <span class="keyword">if</span>(plus)         opr &lt;= <span class="number">4&#x27;b0001</span>;    <span class="comment">//1D-cov</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(minus)   opr &lt;= <span class="number">4&#x27;b0010</span>;    <span class="comment">//Mat*</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(mult)    opr &lt;= <span class="number">4&#x27;b0011</span>;    <span class="comment">//|Mat|</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(div)     opr &lt;= <span class="number">4&#x27;b0100</span>;    <span class="comment">//Mat+</span></span><br><span class="line">                        <span class="keyword">else</span>             opr &lt;= opr;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">                       </span><br><span class="line">                                   </span><br><span class="line">                   <span class="keyword">if</span>(BranchFSM_running == <span class="number">0</span>)  <span class="keyword">begin</span>  <span class="comment">//!!!!!!!!!!!!!!!!!!!!!!!!!</span></span><br><span class="line">                        state &lt;= `OPE;</span><br><span class="line">                        REGA &lt;= <span class="number">0</span>;</span><br><span class="line">                   <span class="keyword">end</span></span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            </span><br><span class="line">         `OPE:  <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (((REGB[<span class="number">24</span>]==<span class="number">1</span>)&amp;&amp;(REGB&lt;<span class="number">16777216</span>))    <span class="comment">//最大负数：1+ 24个0 是能表示的最大负数</span></span><br><span class="line">                || ((REGB[<span class="number">24</span>]==<span class="number">0</span>)&amp;&amp;(REGB&gt;<span class="number">9999999</span>)))</span><br><span class="line">               state&lt;=`HALT;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(inverse)</span><br><span class="line">                REGB &lt;= ~REGB + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(decimal) <span class="keyword">begin</span></span><br><span class="line">                REGA &lt;= d;   <span class="comment">//新输入</span></span><br><span class="line">                count &lt;= <span class="number">1</span>;</span><br><span class="line">                state &lt;= `DECIMAL;</span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">               </span><br><span class="line">            <span class="keyword">if</span>(s_cnt % <span class="number">4</span> == <span class="number">2</span> || s_cnt % <span class="number">4</span> == <span class="number">3</span>)    <span class="comment">//正在执行DECIMAL-&gt;XY/lcm/gcd/Mat的旁支FSM，运算未结束时暂时不要跳转到OPE!!!!!!!!!</span></span><br><span class="line">                BranchFSM_running &lt;= <span class="number">1</span>;  </span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">         `HALT:</span><br><span class="line">            <span class="keyword">if</span>(ce) <span class="keyword">begin</span></span><br><span class="line">                REGA &lt;= <span class="number">0</span>; </span><br><span class="line">                REGB &lt;= <span class="number">0</span>;</span><br><span class="line">                opr &lt;= <span class="number">0</span>;</span><br><span class="line">                count &lt;= <span class="number">0</span>;</span><br><span class="line">                state &lt;= `DECIMAL;</span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">          <span class="comment">//旁支FSM：负责运算X^Y,x!!,GCD,LCM ----------------------------------------------------------------------------------------------------</span></span><br><span class="line">          `XY: <span class="keyword">begin</span></span><br><span class="line">                y &lt;= y - <span class="number">1</span>;</span><br><span class="line">                REGB &lt;= (y == <span class="number">1</span>) ? REGB : REGB * x;               </span><br><span class="line">                state &lt;= (y == <span class="number">1</span>) ? `OPE : `XY;</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">          `DOUBLEJC: <span class="keyword">begin</span></span><br><span class="line">                y &lt;= y - <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(y == REGB) <span class="comment">//第一次</span></span><br><span class="line">                    REGB &lt;= REGB;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    REGB &lt;= (y &lt;= <span class="number">1</span>) ? REGB : REGB * y;</span><br><span class="line">       </span><br><span class="line">                state &lt;= (y &lt;= <span class="number">1</span>) ? `OPE : `DOUBLEJC;</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          `GCD:  <span class="keyword">begin</span>     <span class="comment">//GCD辗转相除法: x=max(REGA,REGB),y=min(REGA,REGB), (x,y)&lt;-(y,x % y)</span></span><br><span class="line">                <span class="keyword">if</span>(x % y == <span class="number">0</span>) <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= y;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    x &lt;= y;</span><br><span class="line">                    y &lt;= x % y;</span><br><span class="line">                    state &lt;= `GCD;</span><br><span class="line">                <span class="keyword">end</span>            </span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          `LCM: <span class="keyword">begin</span>    <span class="comment">//LCM = (a * b) /GCD</span></span><br><span class="line">                <span class="keyword">if</span>(x % y == <span class="number">0</span>) <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= (REGA * REGB) / y;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    x &lt;= y;</span><br><span class="line">                    y &lt;= x % y;</span><br><span class="line">                    state &lt;= `LCM;</span><br><span class="line">                <span class="keyword">end</span>            </span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          <span class="comment">//矩阵操作----------------------------------</span></span><br><span class="line">          `MatPre: <span class="keyword">begin</span></span><br><span class="line">                <span class="comment">//检测位数 </span></span><br><span class="line">                <span class="keyword">if</span>(REGB&gt; <span class="number">99999</span>) <span class="keyword">begin</span>    <span class="comment">//六位数：2*3</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">6</span>;                   </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(REGB &gt; <span class="number">9999</span> &amp;&amp; REGB &lt; <span class="number">100000</span>) <span class="keyword">begin</span> <span class="comment">//五位数：2*3，最高位补零</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">5</span>;                   </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(REGB &gt; <span class="number">999</span> &amp;&amp; REGB &lt; <span class="number">10000</span>) <span class="keyword">begin</span> <span class="comment">//四位数： 2*2</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">4</span>;                   </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(REGB &gt; <span class="number">99</span> &amp;&amp; REGB &lt; <span class="number">1000</span>)  <span class="keyword">begin</span>  <span class="comment">//三位数： 2*2, 最高位补零</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(REGB &gt;<span class="number">9</span> &amp;&amp; REGB &lt; <span class="number">100</span>) <span class="keyword">begin</span>  <span class="comment">//二位数：1*2</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">2</span>;                    </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(REGB &gt;=<span class="number">0</span> &amp;&amp; REGB &lt; <span class="number">10</span>) <span class="keyword">begin</span> <span class="comment">//一位数： 1*2 ，最高位补0</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">1</span>;                   </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    Mat_weishu &lt;= <span class="number">0</span>;    </span><br><span class="line">                <span class="keyword">end</span>  </span><br><span class="line">                <span class="comment">//分割数字</span></span><br><span class="line">                Mnumber6B &lt;= REGB / <span class="number">100000</span>;</span><br><span class="line">                Mnumber6A &lt;= REGA / <span class="number">100000</span>;</span><br><span class="line">                Mnumber5B &lt;= (REGB % <span class="number">100000</span>) / <span class="number">10000</span>;</span><br><span class="line">                Mnumber5A &lt;= (REGA % <span class="number">100000</span>) / <span class="number">10000</span>;</span><br><span class="line">                Mnumber4B &lt;= (REGB % <span class="number">10000</span>) / <span class="number">1000</span>;</span><br><span class="line">                Mnumber4A &lt;= (REGA % <span class="number">10000</span>) / <span class="number">1000</span>;</span><br><span class="line">                Mnumber3B &lt;= (REGB % <span class="number">1000</span>) / <span class="number">100</span>;</span><br><span class="line">                Mnumber3A &lt;= (REGA % <span class="number">1000</span>) / <span class="number">100</span>;</span><br><span class="line">                Mnumber2B &lt;= (REGB % <span class="number">100</span>) / <span class="number">10</span>;</span><br><span class="line">                Mnumber2A &lt;= (REGA % <span class="number">100</span>) / <span class="number">10</span>;</span><br><span class="line">                Mnumber1B &lt;= (REGB % <span class="number">10</span>) / <span class="number">1</span>;</span><br><span class="line">                Mnumber1A &lt;= (REGA % <span class="number">10</span>) / <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//预处理结束，进入对应运算FSM</span></span><br><span class="line">                <span class="keyword">case</span>(opr)</span><br><span class="line">                <span class="number">4&#x27;b0001</span>:   state &lt;= `Cov1D;</span><br><span class="line">                <span class="number">4&#x27;b0010</span>:   state &lt;= `MatMult;</span><br><span class="line">                <span class="number">4&#x27;b0011</span>:   state &lt;= `MatHLS;</span><br><span class="line">                <span class="number">4&#x27;b0100</span>:   state &lt;= `MatPlus;</span><br><span class="line">                <span class="keyword">endcase</span>      </span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">          `MatPlus: <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">case</span>(Mat_weishu)</span><br><span class="line">                <span class="number">6</span>: <span class="keyword">begin</span>    <span class="comment">//M2*3</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber1A + Mnumber1B;</span><br><span class="line">                    Mnumber2R &lt;= Mnumber2A + Mnumber2B;</span><br><span class="line">                    Mnumber3R &lt;= Mnumber3A + Mnumber3B;</span><br><span class="line">                    Mnumber4R &lt;= Mnumber4A + Mnumber4B;</span><br><span class="line">                    Mnumber5R &lt;= Mnumber5A + Mnumber5B;</span><br><span class="line">                    Mnumber6R &lt;= Mnumber6A + Mnumber6B;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="number">5</span>: <span class="keyword">begin</span></span><br><span class="line">                   <span class="comment">//最高位补0，但不用写</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber1A + Mnumber1B;</span><br><span class="line">                    Mnumber2R &lt;= Mnumber2A + Mnumber2B;</span><br><span class="line">                    Mnumber3R &lt;= Mnumber3A + Mnumber3B;</span><br><span class="line">                    Mnumber4R &lt;= Mnumber4A + Mnumber4B;</span><br><span class="line">                    Mnumber5R &lt;= Mnumber5A + Mnumber5B;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="number">4</span>: <span class="keyword">begin</span>   <span class="comment">//M2*2</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber1A + Mnumber1B;</span><br><span class="line">                    Mnumber2R &lt;= Mnumber2A + Mnumber2B;</span><br><span class="line">                    Mnumber3R &lt;= Mnumber3A + Mnumber3B;</span><br><span class="line">                    Mnumber4R &lt;= Mnumber4A + Mnumber4B;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="number">3</span>: <span class="keyword">begin</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber1A + Mnumber1B;</span><br><span class="line">                    Mnumber2R &lt;= Mnumber2A + Mnumber2B;</span><br><span class="line">                    Mnumber3R &lt;= Mnumber3A + Mnumber3B;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="number">2</span>: <span class="keyword">begin</span>   <span class="comment">//M1*2</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber1A + Mnumber1B;</span><br><span class="line">                    Mnumber2R &lt;= Mnumber2A + Mnumber2B;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="number">1</span>: <span class="keyword">begin</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber1A + Mnumber1B;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">endcase</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(over == <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= Mnumber6R * <span class="number">100000</span> + Mnumber5R * <span class="number">10000</span> + Mnumber4R * <span class="number">1000</span> + Mnumber3R * <span class="number">100</span> + Mnumber2R * <span class="number">10</span> + Mnumber1R * <span class="number">1</span>;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                    over &lt;= <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    state &lt;= `MatPlus;</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">           `MatHLS: <span class="keyword">begin</span></span><br><span class="line">           <span class="comment">//只有2*2方阵有行列式：|abcd| = ad - bc</span></span><br><span class="line">                <span class="keyword">if</span>(Mat_weishu != <span class="number">4</span> &amp;&amp; Mat_weishu != <span class="number">3</span>) <span class="keyword">begin</span>                    </span><br><span class="line">                    REGB &lt;= <span class="number">9999999</span>;  <span class="comment">//没有逆矩阵显示9999999</span></span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= Mnumber4B * Mnumber1B - Mnumber2B * Mnumber3B;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">          `MatMult: <span class="keyword">begin</span></span><br><span class="line">                <span class="comment">//运算</span></span><br><span class="line">                <span class="comment">//1*2-REGB[a,b] 与 2*1-REGA[c;d] 相乘为 1*1[ac+bd]</span></span><br><span class="line">                <span class="keyword">if</span>(Mat_weishu == <span class="number">2</span>) <span class="keyword">begin</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber2B * Mnumber2A + Mnumber1B * Mnumber1A;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//REGB &lt;= Mnumber1R;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="comment">//2*2-REGB[[a,b];[c,d]] 与 2*2-REGA[[e,f];[g,h]] 相乘为 2*2[[ae+bg],[af+bh];[ce+dg],[cf+dh]]</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(Mat_weishu == <span class="number">4</span> || Mat_weishu == <span class="number">3</span>) <span class="keyword">begin</span> </span><br><span class="line">                    Mnumber4R &lt;= Mnumber4B * Mnumber4A + Mnumber3B * Mnumber2A;  <span class="comment">//ae+bg</span></span><br><span class="line">                    Mnumber3R &lt;= Mnumber4B * Mnumber3A + Mnumber3B * Mnumber1A;  <span class="comment">//af+bh</span></span><br><span class="line">                    Mnumber2R &lt;= Mnumber2B * Mnumber4A + Mnumber1B * Mnumber2A;  <span class="comment">//ce+dg</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber2B * Mnumber3A + Mnumber1B * Mnumber1A;  <span class="comment">//cf+dh</span></span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//REGB &lt;= Mnumber4R * 1000 + Mnumber3R * 100 + Mnumber2R * 10 + Mnumber1R * 1;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="comment">//2*3-REGB[[a,b,c];[d,e,f]] 与 3*2-REGA[[g,h];[i,j];[k,l]] 相乘为 2*2[[ag+bi+ck,ah+bj+cl];[dg+ei+fk,dh+ej+fl]]</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(Mat_weishu == <span class="number">6</span> || Mat_weishu == <span class="number">5</span>) <span class="keyword">begin</span></span><br><span class="line">                    Mnumber4R &lt;= Mnumber6B * Mnumber6A + Mnumber5B * Mnumber4A + Mnumber4B * Mnumber2A;  <span class="comment">//ag+bi+ck</span></span><br><span class="line">                    Mnumber3R &lt;= Mnumber6B * Mnumber5A + Mnumber5B * Mnumber3A + Mnumber4B * Mnumber1A;  <span class="comment">//ah+bj+cl</span></span><br><span class="line">                    Mnumber2R &lt;= Mnumber3B * Mnumber6A + Mnumber2B * Mnumber4A + Mnumber1B * Mnumber2B;  <span class="comment">//dg+ei+fk</span></span><br><span class="line">                    Mnumber1R &lt;= Mnumber3B * Mnumber5A + Mnumber2B * Mnumber3A + Mnumber1B * Mnumber1B;  <span class="comment">//dh+ej+fl</span></span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//REGB &lt;= Mnumber4R * 1000 + Mnumber3R * 100 + Mnumber2R * 10 + Mnumber1R * 1;</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span>  <span class="comment">//不支持的运算</span></span><br><span class="line">                    REGB &lt;= <span class="number">9999999</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="comment">//结果赋予REGB</span></span><br><span class="line">                <span class="keyword">if</span>(over == <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= Mnumber4R * <span class="number">1000</span> + Mnumber3R * <span class="number">100</span> + Mnumber2R * <span class="number">10</span> + Mnumber1R * <span class="number">1</span>;</span><br><span class="line">                    over &lt;= <span class="number">0</span>;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    state &lt;= `MatMult;</span><br><span class="line">                <span class="keyword">end</span>               </span><br><span class="line">          <span class="keyword">end</span>         </span><br><span class="line">          </span><br><span class="line">          `Cov1D: <span class="keyword">begin</span></span><br><span class="line">                <span class="comment">//N长序列 和 M长序列 卷积结果是 M+N-1。最高不能超过7，否则无法显示</span></span><br><span class="line">                <span class="comment">//直接规定最大 N=4 * M=4</span></span><br><span class="line">                <span class="keyword">if</span>(Mat_weishu &gt; <span class="number">4</span>)  <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= <span class="number">9999999</span>;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    Mnumber7R &lt;= Mnumber4B * Mnumber1A;</span><br><span class="line">                    Mnumber6R &lt;= Mnumber3B * Mnumber1A + Mnumber4B * Mnumber2A;</span><br><span class="line">                    Mnumber5R &lt;= Mnumber2B * Mnumber1A + Mnumber3B * Mnumber2A + Mnumber4B * Mnumber3A;</span><br><span class="line">                    Mnumber4R &lt;= Mnumber1B * Mnumber1A + Mnumber2B * Mnumber2A + Mnumber3B * Mnumber3A + Mnumber4B * Mnumber4A;</span><br><span class="line">                    Mnumber3R &lt;= Mnumber3B * Mnumber4A + Mnumber2B * Mnumber3A + Mnumber1B * Mnumber2A;</span><br><span class="line">                    Mnumber2R &lt;= Mnumber2B * Mnumber4A + Mnumber1B * Mnumber3A;</span><br><span class="line">                    Mnumber1R &lt;= Mnumber1B * Mnumber4A;</span><br><span class="line">                    over &lt;= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(over == <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">                    REGB &lt;= Mnumber7R * <span class="number">1000000</span> + Mnumber6R * <span class="number">100000</span> + Mnumber5R * <span class="number">10000</span> + Mnumber4R * <span class="number">1000</span> + Mnumber3R * <span class="number">100</span> + Mnumber2R * <span class="number">10</span> + Mnumber1R * <span class="number">1</span>;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span>  <span class="keyword">begin</span></span><br><span class="line">                    state &lt;= `Cov1D;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">          <span class="comment">//井字棋--------------------------------------------------</span></span><br><span class="line">          `P1: <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>((decimal != <span class="number">0</span>))   <span class="keyword">begin</span> <span class="comment">//键入</span></span><br><span class="line">                    H_1[<span class="number">0</span>] &lt;= (d == <span class="number">7</span>) ? (H_1[<span class="number">0</span>]+ <span class="number">1</span>) : H_1[<span class="number">0</span>];</span><br><span class="line">                    H_1[<span class="number">1</span>] &lt;= (d == <span class="number">8</span>) ? (H_1[<span class="number">1</span>]+ <span class="number">1</span>) : H_1[<span class="number">1</span>];</span><br><span class="line">                    H_1[<span class="number">2</span>] &lt;= (d == <span class="number">9</span>) ? (H_1[<span class="number">2</span>]+ <span class="number">1</span>) : H_1[<span class="number">2</span>];</span><br><span class="line">                    M_1[<span class="number">0</span>] &lt;= (d == <span class="number">4</span>) ? (M_1[<span class="number">0</span>]+ <span class="number">1</span>) : M_1[<span class="number">0</span>];</span><br><span class="line">                    M_1[<span class="number">1</span>] &lt;= (d == <span class="number">5</span>) ? (M_1[<span class="number">1</span>]+ <span class="number">1</span>) : M_1[<span class="number">1</span>];</span><br><span class="line">                    M_1[<span class="number">2</span>] &lt;= (d == <span class="number">6</span>) ? (M_1[<span class="number">2</span>]+ <span class="number">1</span>) : M_1[<span class="number">2</span>];</span><br><span class="line">                    L_1[<span class="number">0</span>] &lt;= (d == <span class="number">1</span>) ? (L_1[<span class="number">0</span>]+ <span class="number">1</span>) : L_1[<span class="number">0</span>];</span><br><span class="line">                    L_1[<span class="number">1</span>] &lt;= (d == <span class="number">2</span>) ? (L_1[<span class="number">1</span>]+ <span class="number">1</span>) : L_1[<span class="number">1</span>];</span><br><span class="line">                    L_1[<span class="number">2</span>] &lt;= (d == <span class="number">3</span>) ? (L_1[<span class="number">2</span>]+ <span class="number">1</span>) : L_1[<span class="number">2</span>];</span><br><span class="line">                    Pcnt &lt;= Pcnt + <span class="number">1</span>;</span><br><span class="line">                    state &lt;= `Judge;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    state &lt;= `P1;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                REGB &lt;= <span class="number">1110000</span>;</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          `P2: <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>((decimal != <span class="number">0</span>))   <span class="keyword">begin</span> <span class="comment">//键入</span></span><br><span class="line">                    H_2[<span class="number">0</span>] &lt;= (d == <span class="number">7</span>) ? (H_2[<span class="number">0</span>]+<span class="number">1</span>) : H_2[<span class="number">0</span>];</span><br><span class="line">                    H_2[<span class="number">1</span>] &lt;= (d == <span class="number">8</span>) ? (H_2[<span class="number">1</span>]+<span class="number">1</span>) : H_2[<span class="number">1</span>];</span><br><span class="line">                    H_2[<span class="number">2</span>] &lt;= (d == <span class="number">9</span>) ? (H_2[<span class="number">2</span>]+<span class="number">1</span>) : H_2[<span class="number">2</span>];</span><br><span class="line">                    M_2[<span class="number">0</span>] &lt;= (d == <span class="number">4</span>) ? (M_2[<span class="number">0</span>]+<span class="number">1</span>) : M_2[<span class="number">0</span>];</span><br><span class="line">                    M_2[<span class="number">1</span>] &lt;= (d == <span class="number">5</span>) ? (M_2[<span class="number">1</span>]+<span class="number">1</span>) : M_2[<span class="number">1</span>];</span><br><span class="line">                    M_2[<span class="number">2</span>] &lt;= (d == <span class="number">6</span>) ? (M_2[<span class="number">2</span>]+<span class="number">1</span>) : M_2[<span class="number">2</span>];</span><br><span class="line">                    L_2[<span class="number">0</span>] &lt;= (d == <span class="number">1</span>) ? (L_2[<span class="number">0</span>]+<span class="number">1</span>) : L_2[<span class="number">0</span>];</span><br><span class="line">                    L_2[<span class="number">1</span>] &lt;= (d == <span class="number">2</span>) ? (L_2[<span class="number">1</span>]+<span class="number">1</span>) : L_2[<span class="number">1</span>];</span><br><span class="line">                    L_2[<span class="number">2</span>] &lt;= (d == <span class="number">3</span>) ? (L_2[<span class="number">2</span>]+<span class="number">1</span>) : L_2[<span class="number">2</span>];</span><br><span class="line">                    Pcnt &lt;= Pcnt + <span class="number">1</span>;</span><br><span class="line">                    state &lt;= `Judge;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                    state &lt;= `P2;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                REGB &lt;= <span class="number">111</span>;</span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          `Judge: <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span>( H_1 == <span class="number">3&#x27;b111</span> || M_1 == <span class="number">3&#x27;b111</span> || L_1 == <span class="number">3&#x27;b111</span> ||</span><br><span class="line">                   &#123;H_1[<span class="number">0</span>],M_1[<span class="number">0</span>],L_1[<span class="number">0</span>]&#125; == <span class="number">3&#x27;b111</span> || &#123;H_1[<span class="number">1</span>],M_1[<span class="number">1</span>],L_1[<span class="number">1</span>]&#125; == <span class="number">3&#x27;b111</span> || &#123;H_1[<span class="number">2</span>],M_1[<span class="number">2</span>],L_1[<span class="number">2</span>]&#125; == <span class="number">3&#x27;b111</span> || </span><br><span class="line">                   &#123;H_1[<span class="number">0</span>],M_1[<span class="number">1</span>],L_1[<span class="number">2</span>]&#125; == <span class="number">3&#x27;b111</span> || &#123;H_1[<span class="number">2</span>],M_1[<span class="number">1</span>],L_1[<span class="number">0</span>]&#125; == <span class="number">3&#x27;b111</span> )  <span class="keyword">begin</span></span><br><span class="line">                    winner &lt;= <span class="number">1</span>;   <span class="comment">//玩家一胜利       </span></span><br><span class="line">                    REGB &lt;= <span class="number">1111111</span>;</span><br><span class="line">                    state &lt;= `OPE;            </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>( H_2 == <span class="number">3&#x27;b111</span> || M_2 == <span class="number">3&#x27;b111</span> || L_2 == <span class="number">3&#x27;b111</span> ||</span><br><span class="line">                        &#123;H_2[<span class="number">0</span>],M_2[<span class="number">0</span>],L_2[<span class="number">0</span>]&#125; == <span class="number">3&#x27;b111</span> || &#123;H_2[<span class="number">1</span>],M_2[<span class="number">1</span>],L_2[<span class="number">1</span>]&#125; == <span class="number">3&#x27;b111</span> || &#123;H_2[<span class="number">2</span>],M_2[<span class="number">2</span>],L_2[<span class="number">2</span>]&#125; == <span class="number">3&#x27;b111</span> || </span><br><span class="line">                        &#123;H_2[<span class="number">0</span>],M_2[<span class="number">1</span>],L_2[<span class="number">2</span>]&#125; == <span class="number">3&#x27;b111</span> || &#123;H_2[<span class="number">2</span>],M_2[<span class="number">1</span>],L_2[<span class="number">0</span>]&#125; == <span class="number">3&#x27;b111</span> )  <span class="keyword">begin</span></span><br><span class="line">                    winner &lt;= <span class="number">2</span>;   <span class="comment">//玩家二胜利</span></span><br><span class="line">                    REGB &lt;= <span class="number">2222222</span>;</span><br><span class="line">                    state &lt;= `OPE;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span>  <span class="keyword">begin</span>   <span class="comment">//目前没决出胜负或者平</span></span><br><span class="line">                    <span class="keyword">if</span>(Pcnt == <span class="number">9</span>)  <span class="keyword">begin</span>  <span class="comment">//下完了但是平局</span></span><br><span class="line">                        winner &lt;= <span class="number">0</span>;</span><br><span class="line">                        REGB &lt;= <span class="number">5555555</span>;  </span><br><span class="line">                        state &lt;= `OPE;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">begin</span>   <span class="comment">//未决出胜负，继续下</span></span><br><span class="line">                        state &lt;= (Pcnt % <span class="number">2</span> == <span class="number">0</span>) ? `P1 : `P2;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">          </span><br><span class="line">          <span class="comment">//More States 》》》</span></span><br><span class="line">          </span><br><span class="line">         <span class="keyword">endcase</span></span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">assign</span> overflow=(state==`HALT)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//assign sign=(state==`DECIMAL)? 0: ((state==`OPE)?(REGB[24]) :0);</span></span><br><span class="line">  <span class="keyword">assign</span> sign=(state==`DECIMAL)? REGA[<span class="number">24</span>]: ((state==`OPE)?(REGB[<span class="number">24</span>]) :<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">assign</span> out=out_func (state, REGA, REGB);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> [<span class="number">24</span>:<span class="number">0</span>] out_func;</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">1</span>:<span class="number">0</span>] s; <span class="keyword">input</span> [<span class="number">24</span>:<span class="number">0</span>] a; <span class="keyword">input</span> [<span class="number">24</span>:<span class="number">0</span>] b;</span><br><span class="line">    <span class="keyword">case</span>(s)</span><br><span class="line">      `DECIMAL :</span><br><span class="line">        out_func = a;</span><br><span class="line"></span><br><span class="line">      `OPE :</span><br><span class="line">        <span class="keyword">if</span>(b[<span class="number">24</span>]==<span class="number">1</span>)    <span class="comment">//负数：检查最高位</span></span><br><span class="line">          out_func = ~b + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          out_func = b;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line">  <span class="keyword">endfunction</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="八段数码管显示顶层模块binled-v"><a href="#八段数码管显示顶层模块binled-v" class="headerlink" title="八段数码管显示顶层模块binled.v"></a>八段数码管显示顶层模块binled.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> binled(in, ledh, ledg, ledf, lede, ledd, ledc, ledb);</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">24</span>:<span class="number">0</span>] in;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] ledh,ledg,ledf,lede,ledd,ledc,ledb;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] outh,outg,outf,oute,outd,outc,outb;</span><br><span class="line"></span><br><span class="line">  bintobcd bintobcd(in,outh,outg,outf,oute,outd,outc,outb);</span><br><span class="line">  ledout ledouth(outh, ledh);</span><br><span class="line">  ledout ledoutg(outg, ledg);</span><br><span class="line">  ledout ledoutf(outf, ledf);</span><br><span class="line">  ledout ledoute(oute, lede);</span><br><span class="line">  ledout ledoutd(outd, ledd);</span><br><span class="line">  ledout ledoutc(outc, ledc);</span><br><span class="line">  ledout ledoutb(outb, ledb);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="二进制转BCD码模块bintobcd-v"><a href="#二进制转BCD码模块bintobcd-v" class="headerlink" title="二进制转BCD码模块bintobcd.v"></a>二进制转BCD码模块bintobcd.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> bintobcd(in,outh,outg,outf,oute,outd,outc,outb) ;</span><br><span class="line">  <span class="keyword">input</span> [<span class="number">24</span>:<span class="number">0</span>] in;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] outh,outg,outf,oute,outd,outc,outb;</span><br><span class="line">  <span class="keyword">wire</span> [<span class="number">24</span>:<span class="number">0</span>] temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10, temp11, temp12,</span><br><span class="line">              temp13, temp14, temp15, temp16, temp17, temp18, temp19, temp20, temp21, temp22, temp23, temp24;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//百万位b</span></span><br><span class="line">    <span class="keyword">assign</span> outb[<span class="number">3</span>] = (in &gt;= <span class="number">8000000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp1 = (in &gt;= <span class="number">8000000</span>) ? in - <span class="number">8000000</span> : in;</span><br><span class="line">    <span class="keyword">assign</span> outb[<span class="number">2</span>] = (temp1 &gt;= <span class="number">4000000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp2 = (temp1 &gt;= <span class="number">4000000</span>) ? temp1 - <span class="number">4000000</span> : temp1;</span><br><span class="line">    <span class="keyword">assign</span> outb[<span class="number">1</span>] = (temp2 &gt;= <span class="number">2000000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp3 = (temp2 &gt;= <span class="number">2000000</span>) ? temp2 - <span class="number">2000000</span> : temp2;</span><br><span class="line">    <span class="keyword">assign</span> outb[<span class="number">0</span>] = (temp3 &gt;= <span class="number">1000000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp4 = (temp3 &gt;= <span class="number">1000000</span>) ? temp3 - <span class="number">1000000</span> : temp3;</span><br><span class="line">    <span class="comment">//十万位c</span></span><br><span class="line">    <span class="keyword">assign</span> outc[<span class="number">3</span>] = (temp4 &gt;= <span class="number">800000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp5 = (temp4 &gt;= <span class="number">800000</span>) ? temp4 - <span class="number">800000</span> : temp4;</span><br><span class="line">    <span class="keyword">assign</span> outc[<span class="number">2</span>] = (temp5 &gt;= <span class="number">400000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp6 = (temp5 &gt;= <span class="number">400000</span>) ? temp5 - <span class="number">400000</span> : temp5;</span><br><span class="line">    <span class="keyword">assign</span> outc[<span class="number">1</span>] = (temp6 &gt;= <span class="number">200000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp7 = (temp6 &gt;= <span class="number">200000</span>) ? temp6 - <span class="number">200000</span> : temp6;</span><br><span class="line">    <span class="keyword">assign</span> outc[<span class="number">0</span>] = (temp7 &gt;= <span class="number">100000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp8 = (temp7 &gt;= <span class="number">100000</span>) ? temp7 - <span class="number">100000</span> : temp7;</span><br><span class="line">    <span class="comment">//万位计算d</span></span><br><span class="line">    <span class="keyword">assign</span> outd[<span class="number">3</span>] = (temp8 &gt;= <span class="number">80000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp9 = (temp8 &gt;= <span class="number">80000</span>) ? temp8 - <span class="number">80000</span> : temp8;</span><br><span class="line">    <span class="keyword">assign</span> outd[<span class="number">2</span>] = (temp9 &gt;= <span class="number">40000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp10 = (temp9 &gt;= <span class="number">40000</span>) ? temp9 - <span class="number">40000</span> : temp9;</span><br><span class="line">    <span class="keyword">assign</span> outd[<span class="number">1</span>] = (temp10 &gt;= <span class="number">20000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp11 = (temp10 &gt;= <span class="number">20000</span>) ? temp10 - <span class="number">20000</span> : temp10;</span><br><span class="line">    <span class="keyword">assign</span> outd[<span class="number">0</span>] = (temp11 &gt;= <span class="number">10000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp12 = (temp11 &gt;= <span class="number">10000</span>) ? temp11 - <span class="number">10000</span> : temp11;</span><br><span class="line">    <span class="comment">// 千位计算e</span></span><br><span class="line">    <span class="keyword">assign</span> oute[<span class="number">3</span>] = (temp12 &gt;= <span class="number">8000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp13 = (temp12 &gt;= <span class="number">8000</span>) ? temp12 - <span class="number">8000</span> : temp12;</span><br><span class="line">    <span class="keyword">assign</span> oute[<span class="number">2</span>] = (temp13 &gt;= <span class="number">4000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp14 = (temp13 &gt;= <span class="number">4000</span>) ? temp13 - <span class="number">4000</span> : temp13;</span><br><span class="line">    <span class="keyword">assign</span> oute[<span class="number">1</span>] = (temp14 &gt;= <span class="number">2000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp15 = (temp14 &gt;= <span class="number">2000</span>) ? temp14 - <span class="number">2000</span> : temp14;</span><br><span class="line">    <span class="keyword">assign</span> oute[<span class="number">0</span>] = (temp15 &gt;= <span class="number">1000</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp16 = (temp15 &gt;= <span class="number">1000</span>) ? temp15 - <span class="number">1000</span> : temp15;</span><br><span class="line">    <span class="comment">// 百位计算f</span></span><br><span class="line">    <span class="keyword">assign</span> outf[<span class="number">3</span>] = (temp16 &gt;= <span class="number">800</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp17 = (temp16 &gt;= <span class="number">800</span>) ? temp16 - <span class="number">800</span> : temp16;</span><br><span class="line">    <span class="keyword">assign</span> outf[<span class="number">2</span>] = (temp17 &gt;= <span class="number">400</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp18 = (temp17 &gt;= <span class="number">400</span>) ? temp17 - <span class="number">400</span> : temp17;</span><br><span class="line">    <span class="keyword">assign</span> outf[<span class="number">1</span>] = (temp18 &gt;= <span class="number">200</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp19 = (temp18 &gt;= <span class="number">200</span>) ? temp18 - <span class="number">200</span> : temp18;</span><br><span class="line">    <span class="keyword">assign</span> outf[<span class="number">0</span>] = (temp19 &gt;= <span class="number">100</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp20 = (temp19 &gt;= <span class="number">100</span>) ? temp19 - <span class="number">100</span> : temp19;</span><br><span class="line">    <span class="comment">// 十位计算g</span></span><br><span class="line">    <span class="keyword">assign</span> outg[<span class="number">3</span>] = (temp20 &gt;= <span class="number">80</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp21 = (temp20 &gt;= <span class="number">80</span>) ? temp20 - <span class="number">80</span> : temp20;</span><br><span class="line">    <span class="keyword">assign</span> outg[<span class="number">2</span>] = (temp21 &gt;= <span class="number">40</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp22 = (temp21 &gt;= <span class="number">40</span>) ? temp21 - <span class="number">40</span> : temp21;</span><br><span class="line">    <span class="keyword">assign</span> outg[<span class="number">1</span>] = (temp22 &gt;= <span class="number">20</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp23 = (temp22 &gt;= <span class="number">20</span>) ? temp22 - <span class="number">20</span> : temp22;</span><br><span class="line">    <span class="keyword">assign</span> outg[<span class="number">0</span>] = (temp23 &gt;= <span class="number">10</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">assign</span> temp24 = (temp23 &gt;= <span class="number">10</span>) ? temp23 - <span class="number">10</span> : temp23;</span><br><span class="line">    <span class="comment">// 个位计算h</span></span><br><span class="line">    <span class="keyword">assign</span> outh = (temp24 &gt;= <span class="number">10</span>) ? temp24 -<span class="number">10</span> : temp24;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="八段数码管显示模块ledout-v"><a href="#八段数码管显示模块ledout-v" class="headerlink" title="八段数码管显示模块ledout.v"></a>八段数码管显示模块ledout.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ledout: Translation from BCD to LED_out</span></span><br><span class="line"><span class="keyword">module</span> ledout(in, out);</span><br><span class="line">  <span class="keyword">input</span>  [<span class="number">3</span>:<span class="number">0</span>] in;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] out;</span><br><span class="line">  <span class="keyword">reg</span>    [<span class="number">7</span>:<span class="number">0</span>] out;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">always</span> @(in)</span><br><span class="line">   <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">case</span>(in)</span><br><span class="line">        <span class="number">0</span>: out = <span class="number">8&#x27;b11111100</span>;</span><br><span class="line">        <span class="number">1</span>: out = <span class="number">8&#x27;b01100000</span>;</span><br><span class="line">        <span class="number">2</span>: out = <span class="number">8&#x27;b11011010</span>;</span><br><span class="line">        <span class="number">3</span>: out = <span class="number">8&#x27;b11110010</span>;</span><br><span class="line">        <span class="number">4</span>: out = <span class="number">8&#x27;b01100110</span>;</span><br><span class="line">        <span class="number">5</span>: out = <span class="number">8&#x27;b10110110</span>;</span><br><span class="line">        <span class="number">6</span>: out = <span class="number">8&#x27;b10111110</span>;</span><br><span class="line">        <span class="number">7</span>: out = <span class="number">8&#x27;b11100000</span>;</span><br><span class="line">        <span class="number">8</span>: out = <span class="number">8&#x27;b11111110</span>;</span><br><span class="line">        <span class="number">9</span>: out = <span class="number">8&#x27;b11110110</span>;</span><br><span class="line">        <span class="keyword">default</span>: out = <span class="number">8&#x27;bXXXXXXXX</span>;</span><br><span class="line">      <span class="keyword">endcase</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="跨时钟域同步模块-1bit按键交互-syncro-v"><a href="#跨时钟域同步模块-1bit按键交互-syncro-v" class="headerlink" title="跨时钟域同步模块(1bit按键交互)syncro.v"></a>跨时钟域同步模块(1bit按键交互)syncro.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Syncro: Asyncronous to Syncronous (1-bit width)</span></span><br><span class="line"><span class="keyword">module</span> syncro(out, in, clk, reset);</span><br><span class="line">  <span class="keyword">parameter</span> WIDTH = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">input</span>    [WIDTH-<span class="number">1</span>:<span class="number">0</span>] in ;</span><br><span class="line">  <span class="keyword">output</span>   [WIDTH-<span class="number">1</span>:<span class="number">0</span>] out;</span><br><span class="line">  <span class="keyword">input</span>     clk,reset;</span><br><span class="line">  <span class="keyword">reg</span>      [WIDTH-<span class="number">1</span>:<span class="number">0</span>] qO,q1,q2;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">   <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!reset)</span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">       qO &lt;= <span class="number">0</span>;</span><br><span class="line">       q1 &lt;= <span class="number">0</span>;</span><br><span class="line">       q2 &lt;= <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">       qO &lt;= ~in;</span><br><span class="line">       q1 &lt;= qO;</span><br><span class="line">       q2 &lt;= q1;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">assign</span> out=q1 &amp; (~q2) ;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="跨时钟域同步模块-10bit按键交互-syncro10-v"><a href="#跨时钟域同步模块-10bit按键交互-syncro10-v" class="headerlink" title="跨时钟域同步模块(10bit按键交互)syncro10.v"></a>跨时钟域同步模块(10bit按键交互)syncro10.v</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Syncro10: Asyncronous to Syncrnous (10-bit width)</span></span><br><span class="line"><span class="keyword">module</span> syncro10(out, in, clk, reset) ;</span><br><span class="line">  <span class="keyword">parameter</span> WIDTH = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">input</span>    [WIDTH-<span class="number">1</span>:<span class="number">0</span>] in;</span><br><span class="line">  <span class="keyword">output</span>   [WIDTH-<span class="number">1</span>:<span class="number">0</span>] out;</span><br><span class="line">  <span class="keyword">input</span>    clk,reset;</span><br><span class="line">  <span class="keyword">reg</span>      [WIDTH-<span class="number">1</span>:<span class="number">0</span>] qO,q1,q2;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">   <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!reset)</span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">       qO &lt;= <span class="number">0</span>;</span><br><span class="line">       q1 &lt;= <span class="number">0</span>;</span><br><span class="line">       q2 &lt;= <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">       qO &lt;= ~in;</span><br><span class="line">       q1 &lt;= qO;</span><br><span class="line">       q2 &lt;= q1;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">assign</span> out=q1 &amp; (~q2) ;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><hr><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>虽然这个项目中我只是完成了较为简单的运算设计，创新点也较为简单（矩阵和井字棋），没有像有些同学写了小数和负数的运算。但是在上板验证阶段，我的代码一次性通过了所有的测试，准确无误；在课上进行presentation时思路也较为清晰，得到了三位学长助教的一致好评，最终也是拿到了30分满分的好成绩。</p>]]></content>
      
      
      <categories>
          
          <category> Course Assignment </category>
          
          <category> System LSI Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Verilog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pipline-CPU的Verilog实现与仿真：SystemLSI Project#2 留档</title>
      <link href="/2025/02/08/slsi-pcpu-project/"/>
      <url>/2025/02/08/slsi-pcpu-project/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="教授的6个基础test-pattern仿真测试"><a href="#教授的6个基础test-pattern仿真测试" class="headerlink" title="教授的6个基础test pattern仿真测试"></a>教授的6个基础test pattern仿真测试</h2><ul><li>首先，电脑中必须安装iverilog并配置用户的环境变量。</li><li>将文件夹下的pcpu.v粘贴修改为自己写好的pcpu.v，然后直接运行run.bat即可在cmd终端查看测试结果。</li></ul><p>测试结果如下，测试通过的项目会打上○，未通过则是×。本代码经过测试AC：</p><img src="https://s2.loli.net/2025/02/08/YLmS7u48kRtECi6.png"><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>自己书写的pcpu模块，其管教的顺序必须和测试代码中的保持一致，如果不保持一致必然报错。我之前因为要添加新功能，因此在原有的pcpu模块中添加了一个管教，这导致了所有的测试样例全部不通过！我们打开测试代码，可以看到实例化pcpu的部分如下：</li></ul><img src="https://s2.loli.net/2025/02/08/LxlP7WvJVUeiHst.png"><ul><li>其他注意事项写在代码注释中。</li></ul><hr><h2 id="代码（基础版：能够通过教授所有的test-pattern）"><a href="#代码（基础版：能够通过教授所有的test-pattern）" class="headerlink" title="代码（基础版：能够通过教授所有的test pattern）"></a>代码（基础版：能够通过教授所有的test pattern）</h2><p>基础版，能够通过教授所有的test pattern。但是相对应的，为了满足测试要求，我关闭了特色功能LWC_INTERRUPT和LWC_CALLBACK：代码中本应该作为输入管教的 i_datain_interrupt 被替代为一个恒为0的reg变量，因此状态机也不会跳转到interrupt中，只会在最基础的idle和exe之间跳转，实现最基础的27条指令。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">define</span> NOP   5&#x27;b00000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> HALT  5&#x27;b00001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LOAD  5&#x27;b00010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> STORE 5&#x27;b00011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADD   5&#x27;b01000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> CMP   5&#x27;b01100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BZ    5&#x27;b11010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BN    5&#x27;b11100</span></span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"><span class="comment">// Basic operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB   5&#x27;b01010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUBC  5&#x27;b10010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADDC  5&#x27;b10001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADDI  5&#x27;b01001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUBI  5&#x27;b01011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LDIH  5&#x27;b10000</span></span><br><span class="line"><span class="comment">// Logical/Shift operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> AND   5&#x27;b01101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OR    5&#x27;b01110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> XOR   5&#x27;b01111</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL   5&#x27;b00100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL   5&#x27;b00101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLA   5&#x27;b00110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRA   5&#x27;b00111</span></span><br><span class="line"><span class="comment">// Control operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JUMP  5&#x27;b11000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JMPR  5&#x27;b11001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BNZ   5&#x27;b11011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BNN   5&#x27;b11101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BC    5&#x27;b11110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BNC   5&#x27;b11111 </span></span><br><span class="line"><span class="comment">//** LWC original operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_CLEAR       5&#x27;b10011   </span><span class="comment">//clear: clear one data in rg[val3] 【CLEAR null null val3】</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_CA          5&#x27;b10100   </span><span class="comment">//CA: celete all data in rg  【no op1op2op3, like NOP &amp; HALT】</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_ENCRYPT     5&#x27;b10101   </span><span class="comment">//encrypt: 数据加密  【LWC_ENCRYPT r1 r2 r3】  秘钥：r3; 源码：r2；加密结果存放在r1，秘钥存放在r1+1.</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_INTERRUPT   5&#x27;b10110   </span><span class="comment">//Interrupt: 中断 (Control operation)  </span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_CALLBACK    5&#x27;b10111   </span><span class="comment">//CallBack: 中断回调</span></span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// FSM for CPU controler</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> idle 2&#x27;b00</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> exec 2&#x27;b01</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> interrupt 2&#x27;b10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> pcpu (reset, clock, enable, start, i_addr, i_datain, d_addr,</span><br><span class="line">             d_datain, d_dataout, d_we, select_y, y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> reset, enable, start, clock;   <span class="comment">//由顶层于外部连接，由外部(仿真时)控制</span></span><br><span class="line"><span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] i_datain;</span><br><span class="line"><span class="comment">//input  [15:0] i_datain_interrupt;   //仅做基础test pattern测试时，需要关闭interrupt功能。</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>]  i_addr;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>]  d_addr;</span><br><span class="line"><span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] d_datain;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">15</span>:<span class="number">0</span>] d_dataout;</span><br><span class="line"><span class="keyword">output</span> d_we;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for Debug ------------ 只是用y看一下内部各个线上的数据</span></span><br><span class="line"><span class="keyword">input</span>  [<span class="number">3</span>:<span class="number">0</span>] select_y;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">15</span>:<span class="number">0</span>] y; </span><br><span class="line"></span><br><span class="line"><span class="comment">//--2025.2.5:For Basic Tests--//</span></span><br><span class="line"><span class="keyword">reg</span> i_datain_interrupt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Definition of F/Fs</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>]  pc ;                              <span class="comment">//pc:  取指令的指针，指向imem内下一条要执行的指令。</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] id_ir, ex_ir, mem_ir, wb_ir;      <span class="comment">//xx_ir: 指令链，不同阶段对指令instruction进行流水线式的存储。</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] gr [<span class="number">0</span>:<span class="number">7</span>];                         <span class="comment">//gr: General Register。它是CPU内部的存储器(寄存器堆)。</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] reg_A, reg_B, reg_C, reg_C1;      <span class="comment">//reg_X: 数据寄存器，用于CPU内部运算数据的暂存。 [reg_A,reg_B] --&gt; ALU --&gt; [reg_C]</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] smdr, smdr1;                      <span class="comment">//smdr: 直接存储数据</span></span><br><span class="line"><span class="keyword">reg</span> zf, nf, dw;       <span class="comment">//flags:  zf(zero flag);  nf(negative flag);  dw(data write):与d_we相连，是CPU-&gt;dmem写使能。</span></span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"><span class="keyword">reg</span> cf;                  <span class="comment">//carry flag: 进位信号</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">7</span>:<span class="number">0</span>] pc_interrupt;   <span class="comment">//记录中断前的pc值，中断回调后pc置为 pc_interrupt+1</span></span><br><span class="line"><span class="keyword">reg</span> inter_flag;</span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">1</span>:<span class="number">0</span>] state;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Definition of temporary variables</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] ALUo;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] y;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">1</span>:<span class="number">0</span>] next_state;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> i_addr = pc;  <span class="comment">//pc给到i_addr，i_addr输出到imem，取出一条指令</span></span><br><span class="line"><span class="keyword">assign</span> d_we  = dw;</span><br><span class="line"><span class="keyword">assign</span> d_addr = reg_C[<span class="number">7</span>:<span class="number">0</span>];   <span class="comment">//从dmem中取data的地址，地址始终存在reg_C中</span></span><br><span class="line"><span class="keyword">assign</span> d_dataout = smdr1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CPU Control (FSM)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (!reset)</span><br><span class="line">         state &lt;= `idle;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">         state &lt;= next_state;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(state <span class="keyword">or</span> enable <span class="keyword">or</span> start <span class="keyword">or</span> wb_ir[<span class="number">15</span>:<span class="number">11</span>])</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">       <span class="keyword">case</span> (state)</span><br><span class="line">        `idle : <span class="keyword">if</span> ((enable == <span class="number">1&#x27;b1</span>) &amp;&amp; (start == <span class="number">1&#x27;b1</span>))</span><br><span class="line">                   next_state &lt;= `exec;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                   next_state &lt;= `idle;</span><br><span class="line">        `exec : <span class="keyword">if</span> ((enable == <span class="number">1&#x27;b0</span>) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `HALT))</span><br><span class="line">                   next_state &lt;= `idle;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((enable == <span class="number">1&#x27;b0</span>) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_INTERRUPT))</span><br><span class="line">                   next_state &lt;= `interrupt;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                   next_state &lt;= `exec;</span><br><span class="line">        `interrupt: <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CALLBACK)</span><br><span class="line">                        next_state &lt;= `exec;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        next_state &lt;= `interrupt;</span><br><span class="line">      <span class="keyword">endcase</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// IF Block (1st Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         id_ir &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         pc    &lt;= <span class="number">8&#x27;b00000000</span>;</span><br><span class="line">         pc_interrupt &lt;= <span class="number">8&#x27;b00000000</span>;</span><br><span class="line">         inter_flag &lt;= <span class="number">0</span>;</span><br><span class="line"> i_datain_interrupt &lt;= <span class="number">0</span>;   <span class="comment">//for professor&#x27;s test pattern, close INTERRUPT using ‘i_datain_interrupt===0’</span></span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         <span class="comment">// id_ir &lt;= i_datain;     //从imem取指令</span></span><br><span class="line">         id_ir &lt;= (state == `interrupt) ? i_datain_interrupt : i_datain;</span><br><span class="line">        <span class="comment">//主要任务：pc指针控制</span></span><br><span class="line">         <span class="keyword">if</span> ( ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) &amp;&amp; (zf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) &amp;&amp; (nf == <span class="number">1&#x27;b1</span>)) ||</span><br><span class="line">              (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) ||</span><br><span class="line">              ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) &amp;&amp; (zf == <span class="number">1&#x27;b0</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) &amp;&amp; (nf == <span class="number">1&#x27;b0</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) &amp;&amp; (cf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC) &amp;&amp; (cf == <span class="number">1&#x27;b0</span>)) )      </span><br><span class="line">            <span class="comment">//特殊指令跳转： jump to reg_C[7:0]，跳转到ALU运算出来的指令地址。因此必须要根据mem阶段的指令mem_ir判断，否则还没有运算出跳转结果reg_C</span></span><br><span class="line">            pc &lt;= reg_C[<span class="number">7</span>:<span class="number">0</span>];  </span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JUMP)    </span><br><span class="line">            <span class="comment">//JUMP指令跳转: jump to &#123;val2,val3&#125;, 中括号的意思是[7:4]与[3:0]组合为[7:0]</span></span><br><span class="line">            pc &lt;= id_ir[<span class="number">7</span>:<span class="number">0</span>];  </span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------]   </span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">         //LOAD需要等一拍： 等待运算完成，ALUo值存入rg后，再取值</span></span><br><span class="line"><span class="comment">         else if ((id_ir[15:11] == `LOAD) &amp;&amp; (i_datain[15:11]!=`JUMP) &amp;&amp; (i_datain[15:11]!=`NOP) &amp;&amp; (i_datain[15:11]!=`HALT) &amp;&amp; (i_datain[15:11]!=`LOAD))</span></span><br><span class="line"><span class="comment">         begin</span></span><br><span class="line"><span class="comment">            if ( (id_ir[10:8] == i_datain[2:0]) &amp;&amp; </span></span><br><span class="line"><span class="comment">                 ((i_datain[15:11]==`ADD) || (i_datain[15:11]==`ADDC) || (i_datain[15:11]==`SUB) || (i_datain[15:11]==`SUBC) || (i_datain[15:11]==`CMP) || </span></span><br><span class="line"><span class="comment">                  (i_datain[15:11]==`AND) || (i_datain[15:11]==`OR) || (i_datain[15:11]==`XOR)) )</span></span><br><span class="line"><span class="comment">            begin   pc &lt;= pc;   id_ir &lt;= 16&#x27;bXXXXXXXXXXXXXXXX;  end</span></span><br><span class="line"><span class="comment">            else if ( (id_ir[10:8] == i_datain[6:4]) &amp;&amp;</span></span><br><span class="line"><span class="comment">                     ((i_datain[15:11]==`STORE)|| </span></span><br><span class="line"><span class="comment">                     (i_datain[15:11]==`CMP)|| (i_datain[15:11]==`ADD) || (i_datain[15:11]==`ADDC) || (i_datain[15:11]==`SUB) || (i_datain[15:11]==`SUBC) ||</span></span><br><span class="line"><span class="comment">                     (i_datain[15:11]==`AND)|| (i_datain[15:11]==`OR) || (i_datain[15:11]==`XOR) ||</span></span><br><span class="line"><span class="comment">                     (i_datain[15:11]==`SLL)|| (i_datain[15:11]==`SRL) || (i_datain[15:11]==`SLA)|| (i_datain[15:11]==`SRA)) )</span></span><br><span class="line"><span class="comment">            begin   pc &lt;= pc;   id_ir &lt;= 16&#x27;bXXXXXXXXXXXXXXXX;  end</span></span><br><span class="line"><span class="comment">            else if ( (id_ir[10:8] == i_datain[10:8]) &amp;&amp; </span></span><br><span class="line"><span class="comment">                      ((i_datain[15:11]==`STORE) || </span></span><br><span class="line"><span class="comment">                      (i_datain[15:11]==`LDIH) || (i_datain[15:11]==`SUBI) || </span></span><br><span class="line"><span class="comment">                      (i_datain[15:11]==`JMPR) || (i_datain[15:11]==`BZ) || (i_datain[15:11]==`BNZ) || (i_datain[15:11]==`BN) || (i_datain[15:11]==`BNN) || (i_datain[15:11]==`BC) || (i_datain[15:11]==`BNC)))</span></span><br><span class="line"><span class="comment">            begin   pc &lt;= pc;   id_ir &lt;= 16&#x27;bXXXXXXXXXXXXXXXX;  end</span></span><br><span class="line"><span class="comment">            else    ;</span></span><br><span class="line"><span class="comment">         end</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         </span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------] </span></span><br><span class="line">         <span class="comment">//interrupt &amp; callback</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_INTERRUPT)  <span class="keyword">begin</span></span><br><span class="line">            pc &lt;= <span class="number">0</span>;                                         <span class="comment">//转到imem_interrupt,从0开始</span></span><br><span class="line">            <span class="keyword">if</span>(inter_flag == <span class="number">0</span>) <span class="keyword">begin</span></span><br><span class="line">                pc_interrupt &lt;= pc;                           <span class="comment">//记录中断前的pc值</span></span><br><span class="line">                inter_flag &lt;= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CALLBACK)  <span class="keyword">begin</span></span><br><span class="line">            pc &lt;= pc_interrupt;                                <span class="comment">//回到imem</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">          <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            pc &lt;= pc + <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`idle)   <span class="comment">//pc停止</span></span><br><span class="line">        pc &lt;= pc;</span><br><span class="line">     <span class="keyword">else</span> ;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// ID Block (2nd Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         ex_ir &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_A &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_B &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         smdr  &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">         ex_ir &lt;= id_ir;   <span class="comment">//ir传递（id -&gt; ex）</span></span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="comment">//The general register clearing operations LWC_CLEAR and LWC_CA are executed </span></span><br><span class="line">         <span class="comment">//directly in the ID stage, no need to wait until the WB</span></span><br><span class="line">         <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CA)   <span class="keyword">begin</span></span><br><span class="line">            gr[<span class="number">0</span>] = <span class="number">16&#x27;b0000000000000000</span>;   </span><br><span class="line">            gr[<span class="number">1</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">2</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">3</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">4</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">5</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">6</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">7</span>] = <span class="number">16&#x27;b0000000000000000</span>;           </span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CLEAR) <span class="keyword">begin</span>  <span class="comment">//clear: clear one data in rg[val3] 【CLEAR null null val3】</span></span><br><span class="line">            gr[id_ir[<span class="number">3</span>:<span class="number">0</span>]] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span>   ;</span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="comment">/******************** </span></span><br><span class="line"><span class="comment">            reg_A 赋予：第一个操作数  ***************************************************************************************************************</span></span><br><span class="line"><span class="comment">         *********************/</span></span><br><span class="line">         <span class="comment">//↓[type:I]  r1  val2  val3 形 </span></span><br><span class="line">         <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH) ||</span><br><span class="line">             (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) ||</span><br><span class="line">             (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC)) </span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">           <span class="comment">// hazard 避免</span></span><br><span class="line">                <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))   <span class="comment">//无目的寄存器(operand1 = null)</span></span><br><span class="line">                    reg_A &lt;= ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC)) ? </span><br><span class="line">                              gr[(id_ir[<span class="number">10</span>:<span class="number">8</span>])] : </span><br><span class="line">                              ALUo;</span><br><span class="line"><span class="comment">//reg_A &lt;= ALUo;</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))  </span><br><span class="line">                    reg_A &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))  </span><br><span class="line">                    reg_A &lt;= reg_C1;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    reg_A &lt;= gr[(id_ir[<span class="number">10</span>:<span class="number">8</span>])];   <span class="comment">//取出r1 #############</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">               </span><br><span class="line">          <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="comment">//↓[type:R]  r1  r2  r3 形 </span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `STORE) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_ENCRYPT))</span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">           <span class="comment">// hazard 避免</span></span><br><span class="line">                <span class="keyword">if</span> ((id_ir[<span class="number">6</span>:<span class="number">4</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_A &lt;= ALUo;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">6</span>:<span class="number">4</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_A &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">6</span>:<span class="number">4</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_A &lt;= reg_C1;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">                    reg_A &lt;= gr[(id_ir[<span class="number">6</span>:<span class="number">4</span>])];   <span class="comment">//取出r2 #############</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) &amp;&amp; (zf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) &amp;&amp; (nf == <span class="number">1&#x27;b1</span>)) ||  </span><br><span class="line">                  ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) &amp;&amp; (zf == <span class="number">1&#x27;b0</span>))|| ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) &amp;&amp; (nf == <span class="number">1&#x27;b0</span>))||  </span><br><span class="line">                  ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) &amp;&amp; (cf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC) &amp;&amp; (cf == <span class="number">1&#x27;b0</span>))||   </span><br><span class="line">                    mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR)  </span><br><span class="line">            reg_A &lt;= <span class="number">16&#x27;b0000_0000_0000_0000</span>;  </span><br><span class="line">         <span class="keyword">else</span>   ; </span><br><span class="line">        </span><br><span class="line">         <span class="comment">/********************* </span></span><br><span class="line"><span class="comment">            reg_B赋予：第二个操作数***************************************************************************************************************</span></span><br><span class="line"><span class="comment">         ******************** */</span></span><br><span class="line">         <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD)</span><br><span class="line">             reg_B &lt;= &#123;<span class="number">12&#x27;b000000000000</span>, id_ir[<span class="number">3</span>:<span class="number">0</span>]&#125;;   <span class="comment">//r1,r2,val3形：只取val3,需要在前面补12位0 ###########</span></span><br><span class="line">             </span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `STORE)</span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">   reg_B &lt;= &#123;<span class="number">12&#x27;b000000000000</span>, id_ir[<span class="number">3</span>:<span class="number">0</span>]&#125;;   <span class="comment">//r1,r2,val3形：只取val3,需要在前面补12位0 ###########</span></span><br><span class="line">   <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">   <span class="comment">//smdr的赋值也需要：hazard 避免</span></span><br><span class="line">   <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">smdr &lt;= ALUo;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">smdr &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">smdr &lt;= reg_C1;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">smdr  &lt;= gr[id_ir[<span class="number">10</span>:<span class="number">8</span>]];   <span class="comment">//STORE #############</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA))</span><br><span class="line"> reg_B &lt;= &#123;<span class="number">12&#x27;b000000000000</span>, id_ir[<span class="number">3</span>:<span class="number">0</span>]&#125;;   <span class="comment">//r1,r2,val3形：只取val3,需要在前面补12位0 ###########</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC))              </span><br><span class="line">             reg_B &lt;= &#123;<span class="number">8&#x27;b00000000</span>, id_ir[<span class="number">7</span>:<span class="number">0</span>]&#125;;     <span class="comment">// r1 val2 val3, 取出&#123;val2,val3&#125;的组合,需要在前面补8位0 ###########</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH))   </span><br><span class="line"> reg_B &lt;= &#123;id_ir[<span class="number">7</span>:<span class="number">0</span>], <span class="number">8&#x27;b00000000</span>&#125;;</span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_ENCRYPT))   </span><br><span class="line">               <span class="keyword">begin</span></span><br><span class="line">               <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">               <span class="comment">// hazard 避免</span></span><br><span class="line">               <span class="keyword">if</span> ((id_ir[<span class="number">2</span>:<span class="number">0</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_B &lt;= ALUo;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">2</span>:<span class="number">0</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_B &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">2</span>:<span class="number">0</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_B &lt;= reg_C1;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                    <span class="comment">// r1 r2 r3，取出r3； #############</span></span><br><span class="line">                    reg_B &lt;= gr[id_ir[<span class="number">2</span>:<span class="number">0</span>]];   </span><br><span class="line">               <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) &amp;&amp; (zf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) &amp;&amp; (nf == <span class="number">1&#x27;b1</span>))||  </span><br><span class="line">      ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) &amp;&amp; (zf == <span class="number">1&#x27;b0</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) &amp;&amp; (nf == <span class="number">1&#x27;b0</span>))||  </span><br><span class="line">      ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) &amp;&amp; (cf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC) &amp;&amp; (cf == <span class="number">1&#x27;b0</span>))||   </span><br><span class="line">    mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR)  </span><br><span class="line">            reg_B &lt;= <span class="number">16&#x27;b0000_0000_0000_0000</span>;  </span><br><span class="line">         <span class="keyword">else</span>   ;</span><br><span class="line">         </span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// EX Block (3rd Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         mem_ir &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_C &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         smdr1 &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         zf &lt;= <span class="number">1&#x27;b0</span> ; </span><br><span class="line">         nf &lt;= <span class="number">1&#x27;b0</span> ; </span><br><span class="line">         dw &lt;= <span class="number">1&#x27;b0</span> ;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         mem_ir &lt;= ex_ir;</span><br><span class="line">         reg_C  &lt;= ALUo;    <span class="comment">//reg_C转存ALUo运算结果</span></span><br><span class="line"> smdr1 &lt;= smdr;</span><br><span class="line">         </span><br><span class="line">         <span class="comment">//flag更新</span></span><br><span class="line">         <span class="keyword">if</span> ((ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH) ||</span><br><span class="line">             (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC))  <span class="comment">// || (ex_ir[15:11] == `AND) || (ex_ir[15:11] == `OR) || (ex_ir[15:11] == `XOR) || (ex_ir[15:11] == `SLL) || (ex_ir[15:11] == `SRL) || (ex_ir[15:11] == `SLA) || (ex_ir[15:11] == `SRA)</span></span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">             <span class="keyword">if</span> (ALUo == <span class="number">16&#x27;b0000000000000000</span>)</span><br><span class="line">                zf &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                zf &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">             <span class="keyword">if</span> (ALUo [<span class="number">15</span>] == <span class="number">1&#x27;b1</span>)</span><br><span class="line">                nf &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                nf &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">zf &lt;= zf;</span><br><span class="line">nf &lt;= nf;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `STORE)</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">              dw &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">              <span class="comment">//smdr1 &lt;= smdr;</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            dw &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// MEM Block (4th Stege)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         wb_ir  &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_C1 &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state == `interrupt)</span><br><span class="line">       <span class="keyword">begin</span>     </span><br><span class="line">         wb_ir  &lt;= mem_ir;</span><br><span class="line">         <span class="keyword">if</span> (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD)</span><br><span class="line">            <span class="comment">//**** `LOAD回路：从dmem取得的数据在d_datain中，先给到reg_C1,然后转存到cpu内部存储gr。程序运行其他操作时，时再从gr取数据。</span></span><br><span class="line">            <span class="comment">//其实reg_C一直作为dmem的地址索引，但只有LOAD指令时，cpu才会从dmem中取出数据存入regC_1；其余时候reg_C1转存运算结果reg_C。</span></span><br><span class="line">            reg_C1 &lt;= d_datain;      </span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">            reg_C1 &lt;= reg_C;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// WB Block (5th Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         gr[<span class="number">0</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">1</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">2</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">3</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">4</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">5</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">6</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">7</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         <span class="keyword">if</span> (wb_ir[<span class="number">10</span>:<span class="number">8</span>] != <span class="number">3&#x27;b000</span>)</span><br><span class="line">            <span class="keyword">if</span> ((wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ||</span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH) ||</span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA) ||</span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_ENCRYPT))</span><br><span class="line">                    gr[wb_ir[<span class="number">10</span>:<span class="number">8</span>]] &lt;= reg_C1;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">gr[wb_ir[<span class="number">10</span>:<span class="number">8</span>]] &lt;= gr[wb_ir[<span class="number">10</span>:<span class="number">8</span>]];  </span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ALU module</span></span><br><span class="line"><span class="keyword">always</span> @(reg_A <span class="keyword">or</span> reg_B <span class="keyword">or</span> ex_ir[<span class="number">15</span>:<span class="number">11</span>])</span><br><span class="line">    <span class="keyword">case</span> (ex_ir[<span class="number">15</span>:<span class="number">11</span>])</span><br><span class="line">     `LOAD   : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `STORE  : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `ADD    : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B;</span><br><span class="line">     `CMP    : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B;</span><br><span class="line">     `BZ     : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BN     : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">     <span class="comment">// Basic operations</span></span><br><span class="line">     `ADDC   : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B + cf;</span><br><span class="line">     `SUB    : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B;</span><br><span class="line">     `SUBC   : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B - cf;</span><br><span class="line">     `ADDI   : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B;</span><br><span class="line">     `SUBI   : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B;</span><br><span class="line">     `LDIH   : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B;</span><br><span class="line">     <span class="comment">// Logical/Shift operations</span></span><br><span class="line">     `AND    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A &amp; reg_B;  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `OR     :  <span class="keyword">begin</span>   ALUo &lt;= reg_A | reg_B;  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `XOR    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A ^ reg_B;  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `SLL    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A &lt;&lt; reg_B[<span class="number">3</span>:<span class="number">0</span>];  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span>  </span><br><span class="line">     `SRL    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A &gt;&gt; reg_B[<span class="number">3</span>:<span class="number">0</span>];  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line"> <span class="comment">//[注]老版本iverilog编译器不认识&gt;&gt;&gt;和&lt;&lt;&lt;运算符，必须手动实现算数左右移。 2025.2.7</span></span><br><span class="line">     <span class="comment">//`SLA    :  begin  ALUo &lt;= reg_A &lt;&lt;&lt; reg_B[3:0];  cf &lt;= 1&#x27;b0;  end</span></span><br><span class="line">     <span class="comment">//`SRA    :  begin   ALUo &lt;= reg_A &gt;&gt;&gt; reg_B[3:0];  cf &lt;= 1&#x27;b0;  end</span></span><br><span class="line"> `SLA    :  <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b1</span>)</span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;h8000</span> | (reg_A &lt;&lt; reg_B[<span class="number">3</span>:<span class="number">0</span>]);  <span class="comment">//8000 = 1000_0000_0000_0000 </span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b0</span>)</span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;h7FFF</span> &amp; (reg_A &lt;&lt; reg_B[<span class="number">3</span>:<span class="number">0</span>]);  <span class="comment">//7FFF = 0111_1111_1111_1111</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;bx</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> `SRA   :   <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b1</span>)</span><br><span class="line">ALUo &lt;= (&#123;<span class="number">16</span>&#123;<span class="number">1&#x27;b1</span>&#125;&#125; &lt;&lt; (<span class="number">16</span> - reg_B[<span class="number">3</span>:<span class="number">0</span>])) | (reg_A &gt;&gt; reg_B[<span class="number">3</span>:<span class="number">0</span>]);   <span class="comment">//(&#123;16&#123;1&#x27;b1&#125;&#125; &lt;&lt; (16 - reg_B[3:0]))生成高位全1的掩码</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b0</span>)</span><br><span class="line">ALUo &lt;= reg_A &gt;&gt; reg_B[<span class="number">3</span>:<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;bx</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">     `LWC_ENCRYPT:  ALUo &lt;= &#123;reg_A[<span class="number">15</span>:<span class="number">8</span>]^reg_B[<span class="number">7</span>:<span class="number">0</span>], reg_A[<span class="number">7</span>:<span class="number">4</span>]^reg_B[<span class="number">11</span>:<span class="number">8</span>], reg_A[<span class="number">3</span>:<span class="number">0</span>]^reg_B[<span class="number">15</span>:<span class="number">12</span>]&#125;;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// Control operations</span></span><br><span class="line">     `JMPR   :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BNZ    :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BNN    :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BC     :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BNC    :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">     <span class="keyword">default</span> : <span class="keyword">begin</span></span><br><span class="line">            ALUo &lt;= ALUo;</span><br><span class="line">            cf &lt;= cf;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">endcase</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Debug</span></span><br><span class="line"><span class="keyword">always</span> @(select_y <span class="keyword">or</span> gr[<span class="number">1</span>] <span class="keyword">or</span> gr[<span class="number">2</span>] <span class="keyword">or</span> gr[<span class="number">3</span>] <span class="keyword">or</span> gr[<span class="number">4</span>] <span class="keyword">or</span> gr[<span class="number">5</span>] <span class="keyword">or</span> gr[<span class="number">6</span>]</span><br><span class="line">         <span class="keyword">or</span> gr[<span class="number">7</span>] <span class="keyword">or</span> reg_A <span class="keyword">or</span> reg_B <span class="keyword">or</span> reg_C <span class="keyword">or</span> reg_C1 <span class="keyword">or</span> smdr <span class="keyword">or</span> id_ir</span><br><span class="line">         <span class="keyword">or</span> dw <span class="keyword">or</span> zf <span class="keyword">or</span> nf <span class="keyword">or</span> pc)</span><br><span class="line">   <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">case</span> (select_y)</span><br><span class="line">       <span class="number">4&#x27;b0000</span> : y = &#123;<span class="number">3&#x27;b000</span>, dw, <span class="number">2&#x27;b00</span>, zf, nf, pc&#125;;</span><br><span class="line">       <span class="number">4&#x27;b0001</span> : y = gr[<span class="number">1</span>];</span><br><span class="line">       <span class="number">4&#x27;b0010</span> : y = gr[<span class="number">2</span>];</span><br><span class="line">       <span class="number">4&#x27;b0011</span> : y = gr[<span class="number">3</span>];</span><br><span class="line">       <span class="number">4&#x27;b0100</span> : y = gr[<span class="number">4</span>];</span><br><span class="line">       <span class="number">4&#x27;b0101</span> : y = gr[<span class="number">5</span>];</span><br><span class="line">       <span class="number">4&#x27;b0110</span> : y = gr[<span class="number">6</span>];</span><br><span class="line">       <span class="number">4&#x27;b0111</span> : y = gr[<span class="number">7</span>];</span><br><span class="line">       <span class="number">4&#x27;b1000</span> : y = reg_A;</span><br><span class="line">       <span class="number">4&#x27;b1001</span> : y = reg_B;</span><br><span class="line">       <span class="number">4&#x27;b1011</span> : y = reg_C;</span><br><span class="line">       <span class="number">4&#x27;b1100</span> : y = reg_C1;</span><br><span class="line">       <span class="number">4&#x27;b1101</span> : y = smdr;</span><br><span class="line">       <span class="number">4&#x27;b1110</span> : y = id_ir;</span><br><span class="line">       <span class="keyword">default</span> : y = <span class="number">16&#x27;bXXXXXXXXXXXXXXXX</span> ;</span><br><span class="line">     <span class="keyword">endcase</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><hr><h2 id="代码（创新版：可以实现中断和回调）"><a href="#代码（创新版：可以实现中断和回调）" class="headerlink" title="代码（创新版：可以实现中断和回调）"></a>代码（创新版：可以实现中断和回调）</h2><p>中断和回调的实现方法在报告中已经详细说明，这里直接粘贴报告中的文字描述和图片进行解释。</p><img src="https://s2.loli.net/2025/02/08/RBPqUnTdNI4Mzbj.png"><img src="https://s2.loli.net/2025/02/08/Vxslntjry7BGapz.png"><img src="https://s2.loli.net/2025/02/08/K8flRSgxsWIuwNG.png"><img src="https://s2.loli.net/2025/02/08/LbjfucnRyEiJwZ4.png"><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">define</span> NOP   5&#x27;b00000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> HALT  5&#x27;b00001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LOAD  5&#x27;b00010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> STORE 5&#x27;b00011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADD   5&#x27;b01000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> CMP   5&#x27;b01100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BZ    5&#x27;b11010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BN    5&#x27;b11100</span></span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"><span class="comment">// Basic operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB   5&#x27;b01010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUBC  5&#x27;b10010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADDC  5&#x27;b10001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADDI  5&#x27;b01001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUBI  5&#x27;b01011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LDIH  5&#x27;b10000</span></span><br><span class="line"><span class="comment">// Logical/Shift operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> AND   5&#x27;b01101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OR    5&#x27;b01110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> XOR   5&#x27;b01111</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL   5&#x27;b00100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL   5&#x27;b00101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLA   5&#x27;b00110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRA   5&#x27;b00111</span></span><br><span class="line"><span class="comment">// Control operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JUMP  5&#x27;b11000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JMPR  5&#x27;b11001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BNZ   5&#x27;b11011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BNN   5&#x27;b11101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BC    5&#x27;b11110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BNC   5&#x27;b11111 </span></span><br><span class="line"><span class="comment">//** LWC original operations</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_CLEAR       5&#x27;b10011   </span><span class="comment">//clear: clear one data in rg[val3] 【CLEAR null null val3】</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_CA          5&#x27;b10100   </span><span class="comment">//CA: celete all data in rg  【no op1op2op3, like NOP &amp; HALT】</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_ENCRYPT     5&#x27;b10101   </span><span class="comment">//encrypt: 数据加密  【LWC_ENCRYPT r1 r2 r3】  秘钥：r3; 源码：r2；加密结果存放在r1，秘钥存放在r1+1.</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_INTERRUPT   5&#x27;b10110   </span><span class="comment">//Interrupt: 中断 (Control operation)  </span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LWC_CALLBACK    5&#x27;b10111   </span><span class="comment">//CallBack: 中断回调</span></span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// FSM for CPU controler</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> idle 2&#x27;b00</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> exec 2&#x27;b01</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> interrupt 2&#x27;b10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> pcpu (reset, clock, enable, start, i_addr, i_datain, i_datain_interrupt, d_addr,</span><br><span class="line">             d_datain, d_dataout, d_we, select_y, y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> reset, clock, enable, start;   <span class="comment">//由顶层于外部连接，由外部(仿真时)控制</span></span><br><span class="line"><span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] i_datain;</span><br><span class="line"><span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] i_datain_interrupt;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>]  i_addr;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>]  d_addr;</span><br><span class="line"><span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] d_datain;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">15</span>:<span class="number">0</span>] d_dataout;</span><br><span class="line"><span class="keyword">output</span> d_we;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for Debug ------------ 只是用y看一下内部各个线上的数据</span></span><br><span class="line"><span class="keyword">input</span>  [<span class="number">3</span>:<span class="number">0</span>] select_y;</span><br><span class="line"><span class="keyword">output</span> [<span class="number">15</span>:<span class="number">0</span>] y; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Definition of F/Fs</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>]  pc ;                              <span class="comment">//pc:  取指令的指针，指向imem内下一条要执行的指令。</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] id_ir, ex_ir, mem_ir, wb_ir;      <span class="comment">//xx_ir: 指令链，不同阶段对指令instruction进行流水线式的存储。</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] gr [<span class="number">0</span>:<span class="number">7</span>];                         <span class="comment">//gr: General Register。它是CPU内部的存储器(寄存器堆)。</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] reg_A, reg_B, reg_C, reg_C1;      <span class="comment">//reg_X: 数据寄存器，用于CPU内部运算数据的暂存。 [reg_A,reg_B] --&gt; ALU --&gt; [reg_C]</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] smdr, smdr1;                      <span class="comment">//smdr: 直接存储数据</span></span><br><span class="line"><span class="keyword">reg</span> zf, nf, dw;       <span class="comment">//flags:  zf(zero flag);  nf(negative flag);  dw(data write):与d_we相连，是CPU-&gt;dmem写使能。</span></span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"><span class="keyword">reg</span> cf;                  <span class="comment">//carry flag: 进位信号</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">7</span>:<span class="number">0</span>] pc_interrupt;   <span class="comment">//记录中断前的pc值，中断回调后pc置为 pc_interrupt+1</span></span><br><span class="line"><span class="keyword">reg</span> inter_flag;</span><br><span class="line"><span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">1</span>:<span class="number">0</span>] state;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Definition of temporary variables</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] ALUo;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>] y;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">1</span>:<span class="number">0</span>] next_state;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> i_addr = pc;  <span class="comment">//pc给到i_addr，i_addr输出到imem，取出一条指令</span></span><br><span class="line"><span class="keyword">assign</span> d_we  = dw;</span><br><span class="line"><span class="keyword">assign</span> d_addr = reg_C[<span class="number">7</span>:<span class="number">0</span>];   <span class="comment">//从dmem中取data的地址，地址始终存在reg_C中</span></span><br><span class="line"><span class="keyword">assign</span> d_dataout = smdr1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CPU Control (FSM)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">if</span> (!reset)</span><br><span class="line">         state &lt;= `idle;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">         state &lt;= next_state;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(state <span class="keyword">or</span> enable <span class="keyword">or</span> start <span class="keyword">or</span> wb_ir[<span class="number">15</span>:<span class="number">11</span>])</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">       <span class="keyword">case</span> (state)</span><br><span class="line">        `idle : <span class="keyword">if</span> ((enable == <span class="number">1&#x27;b1</span>) &amp;&amp; (start == <span class="number">1&#x27;b1</span>))</span><br><span class="line">                   next_state &lt;= `exec;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                   next_state &lt;= `idle;</span><br><span class="line">        `exec : <span class="keyword">if</span> ((enable == <span class="number">1&#x27;b0</span>) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `HALT))</span><br><span class="line">                   next_state &lt;= `idle;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((enable == <span class="number">1&#x27;b0</span>) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_INTERRUPT))</span><br><span class="line">                   next_state &lt;= `interrupt;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                   next_state &lt;= `exec;</span><br><span class="line">         `interrupt: <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CALLBACK)</span><br><span class="line">                        next_state &lt;= `exec;</span><br><span class="line">                     <span class="keyword">else</span></span><br><span class="line">                        next_state &lt;= `interrupt;</span><br><span class="line">      <span class="keyword">endcase</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// IF Block (1st Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         id_ir &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         pc    &lt;= <span class="number">8&#x27;b00000000</span>;</span><br><span class="line">         pc_interrupt &lt;= <span class="number">8&#x27;b00000000</span>;</span><br><span class="line">         inter_flag &lt;= <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         <span class="comment">// id_ir &lt;= i_datain;     //从imem取指令</span></span><br><span class="line">         id_ir &lt;= (state == `interrupt) ? i_datain_interrupt : i_datain;</span><br><span class="line">        <span class="comment">//主要任务：pc指针控制</span></span><br><span class="line">         <span class="keyword">if</span> ( ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) &amp;&amp; (zf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) &amp;&amp; (nf == <span class="number">1&#x27;b1</span>)) ||</span><br><span class="line">              (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) ||</span><br><span class="line">              ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) &amp;&amp; (zf == <span class="number">1&#x27;b0</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) &amp;&amp; (nf == <span class="number">1&#x27;b0</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) &amp;&amp; (cf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC) &amp;&amp; (cf == <span class="number">1&#x27;b0</span>)) )      </span><br><span class="line">            <span class="comment">//特殊指令跳转： jump to reg_C[7:0]，跳转到ALU运算出来的指令地址。</span></span><br><span class="line">            pc &lt;= reg_C[<span class="number">7</span>:<span class="number">0</span>];</span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JUMP)    </span><br><span class="line">            <span class="comment">//JUMP指令跳转: jump to &#123;val2,val3&#125;, 中括号的意思是[7:4]与[3:0]组合为[7:0]</span></span><br><span class="line">            pc &lt;= id_ir[<span class="number">7</span>:<span class="number">0</span>];          </span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------] </span></span><br><span class="line">         <span class="comment">//interrupt &amp; callback</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_INTERRUPT)  <span class="keyword">begin</span></span><br><span class="line">            pc &lt;= <span class="number">0</span>;                                         <span class="comment">//转到imem_interrupt,从0开始</span></span><br><span class="line">            <span class="keyword">if</span>(inter_flag == <span class="number">0</span>) <span class="keyword">begin</span></span><br><span class="line">                pc_interrupt &lt;= pc;                           <span class="comment">//记录中断前的pc值</span></span><br><span class="line">                inter_flag &lt;= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CALLBACK)  <span class="keyword">begin</span></span><br><span class="line">            pc &lt;= pc_interrupt;                                <span class="comment">//回到imem</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">          <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            pc &lt;= pc + <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`idle)   <span class="comment">//pc停止</span></span><br><span class="line">        pc &lt;= pc;</span><br><span class="line">     <span class="keyword">else</span> ;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// ID Block (2nd Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         ex_ir &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_A &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_B &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         smdr  &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">     <span class="keyword">begin</span></span><br><span class="line">         ex_ir &lt;= id_ir;   <span class="comment">//ir传递（id -&gt; ex）</span></span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="comment">//The general register clearing operations LWC_CLEAR and LWC_CA are executed </span></span><br><span class="line">         <span class="comment">//directly in the ID stage, no need to wait until the WB</span></span><br><span class="line">         <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CA)   <span class="keyword">begin</span></span><br><span class="line">            gr[<span class="number">0</span>] = <span class="number">16&#x27;b0000000000000000</span>;   </span><br><span class="line">            gr[<span class="number">1</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">2</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">3</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">4</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">5</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">6</span>] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">            gr[<span class="number">7</span>] = <span class="number">16&#x27;b0000000000000000</span>;           </span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_CLEAR) <span class="keyword">begin</span>  <span class="comment">//clear: clear one data in rg[val3] 【CLEAR null null val3】</span></span><br><span class="line">            gr[id_ir[<span class="number">3</span>:<span class="number">0</span>]] = <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span>   ;</span><br><span class="line">         <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="comment">/******************** </span></span><br><span class="line"><span class="comment">            reg_A 赋予：第一个操作数  ***************************************************************************************************************</span></span><br><span class="line"><span class="comment">         *********************/</span></span><br><span class="line">         <span class="comment">//↓[type:I]  r1  val2  val3 形 </span></span><br><span class="line">         <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH) ||</span><br><span class="line">             (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) ||</span><br><span class="line">             (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC)) </span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">           <span class="comment">// hazard 避免</span></span><br><span class="line">                <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))   <span class="comment">//无目的寄存器(operand1 = null)</span></span><br><span class="line">                    reg_A &lt;= ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC)) ? </span><br><span class="line">                              gr[(id_ir[<span class="number">10</span>:<span class="number">8</span>])]: </span><br><span class="line">                              ALUo;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))  </span><br><span class="line">                    reg_A &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))  </span><br><span class="line">                    reg_A &lt;= reg_C1;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    reg_A &lt;= gr[(id_ir[<span class="number">10</span>:<span class="number">8</span>])];   <span class="comment">//取出r1 #############</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">               </span><br><span class="line">          <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">         <span class="comment">//↓[type:R]  r1  r2  r3 形 </span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `STORE) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_ENCRYPT))</span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">           <span class="comment">// hazard 避免</span></span><br><span class="line">                <span class="keyword">if</span> ((id_ir[<span class="number">6</span>:<span class="number">4</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_A &lt;= ALUo;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">6</span>:<span class="number">4</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_A &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">6</span>:<span class="number">4</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_A &lt;= reg_C1;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">                    reg_A &lt;= gr[(id_ir[<span class="number">6</span>:<span class="number">4</span>])];   <span class="comment">//取出r2 #############</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) &amp;&amp; (zf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) &amp;&amp; (nf == <span class="number">1&#x27;b1</span>)) ||  </span><br><span class="line">                  ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) &amp;&amp; (zf == <span class="number">1&#x27;b0</span>))|| ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) &amp;&amp; (nf == <span class="number">1&#x27;b0</span>))||  </span><br><span class="line">                  ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) &amp;&amp; (cf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC) &amp;&amp; (cf == <span class="number">1&#x27;b0</span>))||   </span><br><span class="line">                    mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR)  </span><br><span class="line">            reg_A &lt;= <span class="number">16&#x27;b0000_0000_0000_0000</span>;  </span><br><span class="line">         <span class="keyword">else</span>   ; </span><br><span class="line">        </span><br><span class="line">         <span class="comment">/********************* </span></span><br><span class="line"><span class="comment">            reg_B赋予：第二个操作数***************************************************************************************************************</span></span><br><span class="line"><span class="comment">         ******************** */</span></span><br><span class="line">         <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD)</span><br><span class="line">             reg_B &lt;= &#123;<span class="number">12&#x27;b000000000000</span>, id_ir[<span class="number">3</span>:<span class="number">0</span>]&#125;;   <span class="comment">//val3 #############</span></span><br><span class="line">             </span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `STORE)</span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">             reg_B &lt;= &#123;<span class="number">12&#x27;b000000000000</span>, id_ir[<span class="number">3</span>:<span class="number">0</span>]&#125;;  </span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">           <span class="comment">//smdr的赋值也需要：hazard 避免</span></span><br><span class="line">           <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                smdr &lt;= ALUo;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                smdr &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">10</span>:<span class="number">8</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                smdr &lt;= reg_C1;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">                smdr  &lt;= gr[id_ir[<span class="number">10</span>:<span class="number">8</span>]];   <span class="comment">//STORE #############</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA))</span><br><span class="line"> reg_B &lt;= &#123;<span class="number">12&#x27;b000000000000</span>, id_ir[<span class="number">3</span>:<span class="number">0</span>]&#125;;   <span class="comment">//r1,r2,val3形：只取val3,需要在前面补12位0 ###########  </span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) ||</span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC))   </span><br><span class="line">             reg_B &lt;= &#123;<span class="number">8&#x27;b00000000</span>, id_ir[<span class="number">7</span>:<span class="number">0</span>]&#125;;   <span class="comment">// r1 val2 val3, 取出&#123;val2,val3&#125;的组合,需要在前面补8位0 ###########</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH)</span><br><span class="line">             reg_B &lt;= &#123;id_ir[<span class="number">7</span>:<span class="number">0</span>], <span class="number">8&#x27;b00000000</span>&#125;;   <span class="comment">//LDIH较为特殊，取出&#123;val2,val3&#125;的组合后，在后面补8个0 ###########</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || </span><br><span class="line">                  (id_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_ENCRYPT))   </span><br><span class="line">               <span class="keyword">begin</span></span><br><span class="line">               <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">               <span class="comment">// hazard 避免</span></span><br><span class="line">               <span class="keyword">if</span> ((id_ir[<span class="number">2</span>:<span class="number">0</span>] == ex_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`LOAD) &amp;&amp; (ex_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_B &lt;= ALUo;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">2</span>:<span class="number">0</span>] == mem_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (mem_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_B &lt;= (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ? d_datain : reg_C;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> ((id_ir[<span class="number">2</span>:<span class="number">0</span>] == wb_ir[<span class="number">10</span>:<span class="number">8</span>]) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`NOP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`CMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`JUMP) &amp;&amp; (wb_ir[<span class="number">15</span>:<span class="number">11</span>]!=`HALT))</span><br><span class="line">                    reg_B &lt;= reg_C1;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                    <span class="comment">// r1 r2 r3，取出r3； #############</span></span><br><span class="line">                    reg_B &lt;= gr[id_ir[<span class="number">2</span>:<span class="number">0</span>]];   </span><br><span class="line">               <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BZ) &amp;&amp; (zf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BN) &amp;&amp; (nf == <span class="number">1&#x27;b1</span>))||  </span><br><span class="line">      ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNZ) &amp;&amp; (zf == <span class="number">1&#x27;b0</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNN) &amp;&amp; (nf == <span class="number">1&#x27;b0</span>))||  </span><br><span class="line">      ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BC) &amp;&amp; (cf == <span class="number">1&#x27;b1</span>)) || ((mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `BNC) &amp;&amp; (cf == <span class="number">1&#x27;b0</span>))||   </span><br><span class="line">    mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `JMPR)  </span><br><span class="line">            reg_B &lt;= <span class="number">16&#x27;b0000_0000_0000_0000</span>;  </span><br><span class="line">         <span class="keyword">else</span>   ;</span><br><span class="line">         </span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// EX Block (3rd Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         mem_ir &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_C &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         smdr1 &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         zf &lt;= <span class="number">1&#x27;b0</span> ; </span><br><span class="line">         nf &lt;= <span class="number">1&#x27;b0</span> ; </span><br><span class="line">         dw &lt;= <span class="number">1&#x27;b0</span> ;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         mem_ir &lt;= ex_ir;</span><br><span class="line">         reg_C  &lt;= ALUo;    <span class="comment">//reg_C转存ALUo运算结果</span></span><br><span class="line">         smdr1 &lt;= smdr;</span><br><span class="line">         <span class="comment">//flag更新</span></span><br><span class="line">         <span class="keyword">if</span> ((ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH) ||</span><br><span class="line">             (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">             (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA))</span><br><span class="line">           <span class="keyword">begin</span></span><br><span class="line">             <span class="keyword">if</span> (ALUo == <span class="number">16&#x27;b0000000000000000</span>)</span><br><span class="line">                zf &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                zf &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">             <span class="keyword">if</span> (ALUo [<span class="number">15</span>] == <span class="number">1&#x27;b1</span>)</span><br><span class="line">                nf &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                nf &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (ex_ir[<span class="number">15</span>:<span class="number">11</span>] == `STORE)</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">              dw &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">              <span class="comment">//smdr1 &lt;= smdr;</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            dw &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// MEM Block (4th Stege)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         wb_ir  &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         reg_C1 &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state == `interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         wb_ir  &lt;= mem_ir;</span><br><span class="line">         <span class="keyword">if</span> (mem_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD)</span><br><span class="line">            <span class="comment">//**** `LOAD回路：从dmem取得的数据在d_datain中，先给到reg_C1,然后转存到cpu内部存储gr。程序运行其他操作时，时再从gr取数据。</span></span><br><span class="line">            <span class="comment">//其实reg_C一直作为dmem的地址索引，但只有LOAD指令时，cpu才会从dmem中取出数据存入regC_1；其余时候reg_C1转存运算结果reg_C。</span></span><br><span class="line">            reg_C1 &lt;= d_datain;      </span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">            reg_C1 &lt;= reg_C;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// WB Block (5th Stage)</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clock <span class="keyword">or</span> <span class="keyword">negedge</span> reset)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">if</span> (!reset)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         gr[<span class="number">0</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">1</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">2</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">3</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">4</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">5</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">6</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">         gr[<span class="number">7</span>] &lt;= <span class="number">16&#x27;b0000000000000000</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(state==`exec||state==`interrupt)</span><br><span class="line">       <span class="keyword">begin</span></span><br><span class="line">         <span class="keyword">if</span> (wb_ir[<span class="number">10</span>:<span class="number">8</span>] != <span class="number">3&#x27;b000</span>)</span><br><span class="line">            <span class="keyword">if</span> ((wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `LOAD) ||</span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDI) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBI) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `LDIH) ||</span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADD) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `CMP) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `ADDC) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUB) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SUBC) || </span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `AND) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `OR) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `XOR) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLL) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRL) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SLA) || (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `SRA) ||</span><br><span class="line">                (wb_ir[<span class="number">15</span>:<span class="number">11</span>] == `LWC_ENCRYPT))</span><br><span class="line">                    gr[wb_ir[<span class="number">10</span>:<span class="number">8</span>]] &lt;= reg_C1;</span><br><span class="line">            <span class="keyword">else</span>  </span><br><span class="line">gr[wb_ir[<span class="number">10</span>:<span class="number">8</span>]] &lt;= gr[wb_ir[<span class="number">10</span>:<span class="number">8</span>]];  </span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ALU module</span></span><br><span class="line"><span class="keyword">always</span> @(reg_A <span class="keyword">or</span> reg_B <span class="keyword">or</span> ex_ir[<span class="number">15</span>:<span class="number">11</span>])</span><br><span class="line">    <span class="keyword">case</span> (ex_ir[<span class="number">15</span>:<span class="number">11</span>])</span><br><span class="line">     `LOAD   : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `STORE  : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `ADD    : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B;</span><br><span class="line">     `CMP    : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B;</span><br><span class="line">     `BZ     : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BN     : ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">     <span class="comment">// Basic operations</span></span><br><span class="line">     `ADDC   : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B + cf;</span><br><span class="line">     `SUB    : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B;</span><br><span class="line">     `SUBC   : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B - cf;</span><br><span class="line">     `ADDI   : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B;</span><br><span class="line">     `SUBI   : &#123;cf,ALUo&#125; &lt;= reg_A - reg_B;</span><br><span class="line">     `LDIH   : &#123;cf,ALUo&#125; &lt;= reg_A + reg_B;</span><br><span class="line">     <span class="comment">// Logical/Shift operations</span></span><br><span class="line">     `AND    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A &amp; reg_B;  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `OR     :  <span class="keyword">begin</span>   ALUo &lt;= reg_A | reg_B;  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `XOR    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A ^ reg_B;  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `SLL    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A &lt;&lt; reg_B[<span class="number">3</span>:<span class="number">0</span>];  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span>  <span class="comment">//reg_B[3:0]存放的是val3，也就是ir[3:0]</span></span><br><span class="line">     `SRL    :  <span class="keyword">begin</span>   ALUo &lt;= reg_A &gt;&gt; reg_B[<span class="number">3</span>:<span class="number">0</span>];  cf &lt;= <span class="number">1&#x27;b0</span>;     <span class="keyword">end</span></span><br><span class="line">     `SLA    :  <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b1</span>)</span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;h8000</span> | (reg_A &lt;&lt; reg_B[<span class="number">3</span>:<span class="number">0</span>]);  <span class="comment">//8000 = 1000_0000_0000_0000 </span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b0</span>)</span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;h7FFF</span> &amp; (reg_A &lt;&lt; reg_B[<span class="number">3</span>:<span class="number">0</span>]);  <span class="comment">//7FFF = 0111_1111_1111_1111</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;bx</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> `SRA   :   <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b1</span>)</span><br><span class="line">ALUo &lt;= (&#123;<span class="number">16</span>&#123;<span class="number">1&#x27;b1</span>&#125;&#125; &lt;&lt; (<span class="number">16</span> - reg_B[<span class="number">3</span>:<span class="number">0</span>])) | (reg_A &gt;&gt; reg_B[<span class="number">3</span>:<span class="number">0</span>]);   <span class="comment">//(&#123;16&#123;1&#x27;b1&#125;&#125; &lt;&lt; (16 - reg_B[3:0]))生成高位全1的掩码</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(reg_A[<span class="number">15</span>] == <span class="number">1&#x27;b0</span>)</span><br><span class="line">ALUo &lt;= reg_A &gt;&gt; reg_B[<span class="number">3</span>:<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ALUo &lt;= <span class="number">16&#x27;bx</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">     `LWC_ENCRYPT:  ALUo &lt;= &#123;reg_A[<span class="number">15</span>:<span class="number">8</span>]^reg_B[<span class="number">7</span>:<span class="number">0</span>], reg_A[<span class="number">7</span>:<span class="number">4</span>]^reg_B[<span class="number">11</span>:<span class="number">8</span>], reg_A[<span class="number">3</span>:<span class="number">0</span>]^reg_B[<span class="number">15</span>:<span class="number">12</span>]&#125;;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// Control operations</span></span><br><span class="line">     `JMPR   :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BNZ    :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BNN    :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BC     :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     `BNC    :  ALUo &lt;= reg_A + reg_B;</span><br><span class="line">     <span class="comment">//[------------- LUWEICHENG -------------]</span></span><br><span class="line">     <span class="keyword">default</span> : <span class="keyword">begin</span></span><br><span class="line">            ALUo &lt;= ALUo;</span><br><span class="line">            cf &lt;= cf;</span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">endcase</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Debug</span></span><br><span class="line"><span class="keyword">always</span> @(select_y <span class="keyword">or</span> gr[<span class="number">1</span>] <span class="keyword">or</span> gr[<span class="number">2</span>] <span class="keyword">or</span> gr[<span class="number">3</span>] <span class="keyword">or</span> gr[<span class="number">4</span>] <span class="keyword">or</span> gr[<span class="number">5</span>] <span class="keyword">or</span> gr[<span class="number">6</span>]</span><br><span class="line">         <span class="keyword">or</span> gr[<span class="number">7</span>] <span class="keyword">or</span> reg_A <span class="keyword">or</span> reg_B <span class="keyword">or</span> reg_C <span class="keyword">or</span> reg_C1 <span class="keyword">or</span> smdr <span class="keyword">or</span> id_ir</span><br><span class="line">         <span class="keyword">or</span> dw <span class="keyword">or</span> zf <span class="keyword">or</span> nf <span class="keyword">or</span> pc)</span><br><span class="line">   <span class="keyword">begin</span></span><br><span class="line">      <span class="keyword">case</span> (select_y)</span><br><span class="line">       <span class="number">4&#x27;b0000</span> : y = &#123;<span class="number">3&#x27;b000</span>, dw, <span class="number">2&#x27;b00</span>, zf, nf, pc&#125;;</span><br><span class="line">       <span class="number">4&#x27;b0001</span> : y = gr[<span class="number">1</span>];</span><br><span class="line">       <span class="number">4&#x27;b0010</span> : y = gr[<span class="number">2</span>];</span><br><span class="line">       <span class="number">4&#x27;b0011</span> : y = gr[<span class="number">3</span>];</span><br><span class="line">       <span class="number">4&#x27;b0100</span> : y = gr[<span class="number">4</span>];</span><br><span class="line">       <span class="number">4&#x27;b0101</span> : y = gr[<span class="number">5</span>];</span><br><span class="line">       <span class="number">4&#x27;b0110</span> : y = gr[<span class="number">6</span>];</span><br><span class="line">       <span class="number">4&#x27;b0111</span> : y = gr[<span class="number">7</span>];</span><br><span class="line">       <span class="number">4&#x27;b1000</span> : y = reg_A;</span><br><span class="line">       <span class="number">4&#x27;b1001</span> : y = reg_B;</span><br><span class="line">       <span class="number">4&#x27;b1011</span> : y = reg_C;</span><br><span class="line">       <span class="number">4&#x27;b1100</span> : y = reg_C1;</span><br><span class="line">       <span class="number">4&#x27;b1101</span> : y = smdr;</span><br><span class="line">       <span class="number">4&#x27;b1110</span> : y = id_ir;</span><br><span class="line">       <span class="keyword">default</span> : y = <span class="number">16&#x27;bXXXXXXXXXXXXXXXX</span> ;</span><br><span class="line">     <span class="keyword">endcase</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Course Assignment </category>
          
          <category> System LSI Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Verilog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四国跨年之旅：2024.12.27~2025.1.3</title>
      <link href="/2025/01/03/2025travel/"/>
      <url>/2025/01/03/2025travel/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2024-2025是我来日本留学后的第一个新年(跨年)，正好这会儿学校放冬假，我便计划想去哪里玩一下。一开始本来打算和实验室的其他几位同学去东京跨年，但是我们酒店订太晚了，东京12.31-1.1的跨年夜酒店最便宜的一晚上都要一千五六百RMB,实在是无法接受，于是大家就散了<del>他们去长崎看芙莉莲了</del>……后来舍友曹桑提议去宫岛上玩儿，说是学姐推荐，但找了半天也不知道在哪儿，后来也不知道什么原因我突然说可以去“四国”看看，后来就这么拍定了。</p><img src="https://s2.loli.net/2025/01/03/GVco2yPNCpMe3Dd.png"/><hr><h2 id="启程：新門司-→-徳島-東九フェーリ"><a href="#启程：新門司-→-徳島-東九フェーリ" class="headerlink" title="启程：新門司 → 徳島 (東九フェーリ)"></a>启程：新門司 → 徳島 (東九フェーリ)</h2><p>我和舍友两人一人各背一个双肩包，轻装上阵，12.27从宿舍出发一路赶到北九州市的最北边“新门司港”，乘坐轮渡前往四国，12.28计划到达四国最东边城市“德岛市”。</p><p>门司港是连通九州和中国地区的繁忙港口，而我们要去的新门司港则是稍靠东南方向的一个港口，主要通行九州到四国、东京和北海道的船。当我们坐了一路电车到达新门司港后，发现这里的风景还算不错。</p><img src="https://s2.loli.net/2025/01/03/7EmhlWr5q2TpOPi.jpg" width="600" height="350"/><p>我们乘坐的轮渡虽然叫“東九フェーリ”，但其实是北九州-德岛-东京三个港口之间的航线，因此会在德岛的港口停靠。这样，我们12.28日就能从德岛出发，沿着“土赞线”一路西行，然后北上前往高松市和再北边的几个岛屿（丰岛、直岛和小豆岛）。我们本来还打算从小仓乘坐轮渡前往四国西边的松山市，因为松山离北九州更近一些，这样的话我们可以从松山出发一路北上游玩整个四国北部，但可惜的是年前的二等和一等席全都满席了……我们还考虑过坐新干线，但坐JR并不比轮渡便宜，而且坐电车已经做腻了，坐轮船对于我们而言还是个全新的体验。因此，最后我们还是选择了東九フェーリ。</p><img src="https://s2.loli.net/2025/01/03/y83kT2wWUhCmtYP.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/03/e8L1yaZ2cdsN3QR.jpg" width="600" height="350"/><p>事实证明，我们的选择是正确的，東九フェーリ给我们乘坐的体验相当好。我们订的房间是8人间二等洋式，但因为人少所以我和舍友直接包场！船在航行的过程中能感受到发动机连同整个船体在震动，而且能感受到船的左右晃动，但不影响基本的吃饭和睡觉。東九フェーリ甚至还配备了一个温泉，泡澡的同时可以通过舷窗欣赏海景（虽然晚上看不到什么只能看到远处陆地上的灯光orz）。</p><img src="https://s2.loli.net/2025/01/03/Tbf8DPUVYQW6IJC.jpg" width="600" height="350"/><p>船的露天甲板也是可以上的。我和舍友特意在6:00早起，然后到甲板上去看海上的日出了。虽然甲板上风大了一点，但是这样美妙的日出景色还是让我们在寒风中站了许久。<del>当然也可以在温暖的船舱内一边吃早饭一边看</del></p><img src="https://s2.loli.net/2025/01/03/exBYyW7F5VrNCmA.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/03/BjazSuLbO5yHUcR.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/VbYJ6Am1QtMXB4E.png" width="600" height="350"/><hr><h2 id="12-28：徳島市和美马市"><a href="#12-28：徳島市和美马市" class="headerlink" title="12.28：徳島市和美马市"></a>12.28：徳島市和美马市</h2><p>由于轮渡在早上九点就抵达了，距离我们下午三点check in美马市的民宿还有一段时间，我们就先在JR德岛站边上的德岛公园转了转。</p><img src="https://s2.loli.net/2025/01/04/IH3SoFTsc9itbMP.jpg" width="600" height="350"/><p>这里似乎是德岛市民的健身圣地，公园里有很多在跑步的男女老少（<del>绕公园一圈貌似是5公里，我上能跑两圈</del>）。德岛公园是一个完全开放的公园，严格意义讲也算不上是一个旅游景点，但这里面风景倒是很棒。池塘里有小鸭子，繁茂的花草树木间还有很多鸽子，它们一点也不怕人，除非你要踩到它们它们才肯飞走；虽然已经是冬天了，公园里仍有几棵红叶点缀在翠绿的松树之间，显得格外的好看。</p><img src="https://s2.loli.net/2025/01/04/EvARhjMrN1WkUnQ.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/y2CivXQgjqLNB8G.jpg" width="600" height="350"/><p>随后我们就直接前往美马市的民宿了，我们乘坐的是德岛线前往四国中央的山区里。JR四国非常原始，电车比我想象中的还要老式，站台内居然没有自动检票的改札口，必须人工检票，而且下车时需要在前门给车长检票，和公交车一样！而且听这电车的发动机声音貌似不是电驱动的，而且和公交车一样是常规的柴油发动机！</p><img src="https://s2.loli.net/2025/01/04/A4Rqskluh6ZSnOD.png" width="350" height="150"/><p>四国山脉的壮丽程度远远超过我的预想。电车穿行在山岭里，山间随处可见小小的村落；电车靠近城市后眼界逐渐开阔，此时便能看到远处连绵的山脉了。云雾缭绕在半山腰，靠近山顶的部分便都是积雪了。由于是阴天的缘故，整座山仿佛笼罩着一层薄薄的雾气，加之山间时而显现的村落，便显得格外神秘。</p><img src="https://s2.loli.net/2025/01/04/xVK1lg4ZyaLtCrY.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/8E7lxejAC9QLkDb.jpg" width="600" height="350"/><p>美马市座落在山脉里，这里的居民很少，街道上显得有些破败或者说有点凄凉，<del>但是竟然有麦当劳和帕青哥</del>。街道上虽然有很多来往的车辆，但也大都只是从德岛前往松山途径这里而已，不会停留。吉野川横穿了这座城市。我们的民宿在山上，爬山的时候要经过一个小神社。</p><img src="https://s2.loli.net/2025/01/04/LEfgajRNnwTIzeO.png" width="600" height="350"/><hr><h2 id="12-29-大小步危"><a href="#12-29-大小步危" class="headerlink" title="12.29 大小步危"></a>12.29 大小步危</h2><p>从美马市前往大小步危则需要向西南方向更加深入山脉。首先还是坐JR德岛线到终点站“阿波池田”，这里也是一个小镇，但让人感觉比美马市繁华多了。从站台眺望的风景能同时看到电车和山脉，很美；站台边上还有一个小公园，有种梦核的感觉？</p><img src="https://s2.loli.net/2025/01/04/9IwJthDMP3zG78c.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/mJ7RlzD9i4PT6Zg.jpg" width="600" height="350"/><p>大小步危是大步危和小步危。我们先在大步危坐了游览船，游船行驶在碧清的河道上，两侧则是几千年来冲刷而成的山谷峭壁；两座山之间是不是会出现一座大桥连通，左边山崖上是是盘山公路，右边则是JR山藏线。</p><img src="https://s2.loli.net/2025/01/04/UXo1QSyTih9f5Vt.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/fqXxEobkewP7ISC.png" width="350" height="150"/><br/><img src="https://s2.loli.net/2025/01/04/qKOibJC9cgr2a48.png" width="600" height="350"/><p>后来我们北上徒步到小步危，中途还去吃了个大步危特色そば。我们在大步危泡了温泉，700日元一个人的价格实在是太实惠了。温泉水温暖了早已被寒风冻僵的四肢，在泡温泉的同时还能够欣赏雪山的美景，山间时不时还有电车穿行而过，这样的场景简直美得让人窒息！这样的机会恐怕很难再有了吧……直到天色渐黑，我们才做JR山藏线和琴電（ことでん）从小步危返回阿波池田，随后前往高松市。</p><p>走在昏暗的山间，身边雾气缭绕，我感到整个世界都不真实了，仿佛置身于梦境中，下一秒随时可能会醒来……</p><img src="https://s2.loli.net/2025/01/04/AJTdy1MstvQOkZD.jpg" width="600" height="350"/><hr><h2 id="12-30-高松市"><a href="#12-30-高松市" class="headerlink" title="12.30 高松市"></a>12.30 高松市</h2><p>高松市本来只是作为我们前往小豆岛的一个中继点，但事实上高松给了我很好的印象<del>住了两晚</del>。在休息了一夜后，我们花了一个上午在栗林公園闲逛，栗林公園是高松古代君主模仿苏州园林建造的一个园林，里面的景色非常优美。</p><img src="https://s2.loli.net/2025/01/04/mwz9eHRv42qDXsI.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/RF8iqPSKECtWO6x.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/sbi87yojVrqxJGk.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/Y6PqZkyfueXQmh7.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/ZzhSpl9XPJBt3rk.jpg" width="600" height="350"/><p>高松还有全日本最长的商业街<del>名字忘了</del>，里面非常热闹繁华<del>在里面打了舞萌</del>。我在里面连续吃了两天的松屋猪排饭，便宜量大！</p><img src="https://s2.loli.net/2025/01/04/IGMEy1os9QNTZcr.png" width="350" height="150"/><p>在傍晚时分，我们前往高松港提前打探轮渡的消息，却正巧碰到了港口绝美的夕阳景色！远处的海平线上群山起伏，山后则氤氲着艳丽的红色晚霞，晚霞的红和天空的蓝交融在了一起。港口有正在缓缓驶来的轮船，天空中时不时飞过成群的海鸥……这样的景色是只有通过双眼才能感受到的真实。</p><img src="https://s2.loli.net/2025/01/04/rON1uET3yXbcKqG.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/dlXwZOFCz4RIHyJ.png" width="600" height="350"/><p>在天色完全黑下来之后，我们登上高松的标志性建筑，在顶楼观赏了高松市城区和高松港美丽的夜景。</p><img src="https://s2.loli.net/2025/01/04/AOMCUZYxfqIcTuo.png" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/lNVXD59PAEBHpia.png" width="600" height="350"/><hr><h2 id="12-31-1-1-在小豆岛的跨年之夜"><a href="#12-31-1-1-在小豆岛的跨年之夜" class="headerlink" title="12.31~1.1 在小豆岛的跨年之夜"></a>12.31~1.1 在小豆岛的跨年之夜</h2><p>我们从昨晚的高松港坐高速艇，半小时就到了小豆岛的土庄港。映入眼帘的就是“高木同学”的海报！酒店check in之前我们先在岛上随便逛了逛，去了妖怪博物馆<del>票价2900日元非常昂贵</del>，还去了著名景点天使的散步路。</p><img src="https://s2.loli.net/2025/01/04/STgLfpEnzBekXlH.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/HEh3GsY9bWRpOni.jpg" width="600" height="350"/><p>在跨年的夜晚，岛上几乎所有店全都休业了，即便是还开着的店也需要提前预约。饥肠辘辘的我和舍友在寒风中走了许久，最后还是决定吃便利店了……于是，我们在日本的第一个跨年夜晚餐，便是711大餐orz。虽然有些囧，但这种体验非常奇妙。我们还把电视机打开看了NHK的红白歌会，也算是看日本春晚入乡随俗了。</p><img src="https://s2.loli.net/2025/01/04/zuBnlcNqIat9fkx.png" width="600" height="350"/><p>1.1新年一大早我们便起床去附近的八幡神社，完成新年的第一次参拜（初詣：はつもうで）。奉纳完之后去抽了おみくじ，我只抽到了末吉，神签上告诉我这一年会遇到诸多不顺，但如果努力去做的话仍然可以挽回。它告诫我需要通过自身的努力去达成目标，也算是给了我一些告诫和鼓励。当然这个结果并不是很好<del>但至少不是凶</del>，所以我把这个签系在了神社的树上，希望神明能够助我一臂之力；舍友的运气很好，又一次抽到了大吉。</p><img src="https://s2.loli.net/2025/01/04/te7B5kmIALMFjPX.jpg" width="600" height="350"/><p>后来我们二人租了一个电助力自行车<del>带电的哈啰共享单车</del>沿着海岸线环游了小豆岛。途中正好发现了一座可以攀爬的山，误打误撞地也是完成了新年的第一次登高<del>不知道日本有没有新年登高的习俗</del>。山顶上有一个用木头搭起来的鸟居，里面的巨石叫做“重岩”。从山顶可以俯瞰小豆岛的海景，还能看到海平线远处连绵起伏的山脉，令人心旷神怡。</p><img src="https://s2.loli.net/2025/01/04/UwNGlLHO98MeqKv.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/2eSXYL18oBMigOa.jpg" width="600" height="350"/><p>后来，我们还骑到了一个种着很多棕榈树的沙滩边。这是一个地图上没有标出来的沙滩，几乎没有人造访这里，但是这里的景色意外的好，我们也是在这里停留了许久。</p><img src="https://s2.loli.net/2025/01/04/XPjMwvyEhuBI6eb.jpg" width="600" height="350"/><p>再后来我们路过了“鹿岛明神社”，里面都是来圣地巡礼高木同学的人！这让我决定回家补一补这一部番。</p><img src="https://s2.loli.net/2025/01/04/5WoH6EDjwYirXJC.png" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/x5froYcgQmu6hX9.png" width="600" height="350"/><p>在这之后就没干啥了，吃了个饭继续骑行环游小豆岛，然后回到土庄港坐轮船回到高松。在离开小豆岛之前，我们稍微逛了一下土庄港，发现了著名地标“太阳的礼物”<del>我记得高木同学有一季的海报就是这儿?</del>。</p><img src="https://s2.loli.net/2025/01/04/TN9V8hJOHBYwlAs.jpg" width="600" height="350"/><hr><h2 id="1-2-松山市"><a href="#1-2-松山市" class="headerlink" title="1.2 松山市"></a>1.2 松山市</h2><p>其实一开始我们并没有打算来松山，准备直接从高松飞回北九州。但最后我们还是预定了松山到小仓的フェーリ，打算最后再坐一次船，因此不得不前往四国最西端的松山市了。从高松到松山横跨整个四国，路途极为遥远，但好在我们赶上了两市之间直通的高速巴士。</p><p>在松山休息了一晚后，我们去了最著名景点的松山城，里面是古代四国君主建造的天守阁，地势非常的高，可以俯瞰整个管辖地区。前往松山城可以做单人缆车，我们也体验了一把。由于是新年，这一天松山城里还举办了日本传统的“打年糕”活动，我也是第一次近距离观看，非常热闹有意思。</p><img src="https://s2.loli.net/2025/01/04/gLxsdBzPhtSNTR8.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/W5eqsaucyY7mOf4.jpg" width="600" height="350"/><p>由于松山-小仓フェーリ晚上十一点才发船，为了消磨时间我们还去了很多地方。比如顺路参拜了一下东云神社<del>这里的御朱印免费！</del>，一路向着港口方向暴走，然后顺路逛了逛book-off买了几本漫画，还去了趟电影院<del>最后没看成电影</del>。我们还去了爱媛大学和松山大学，它们是挨在一起的两所大学，不过貌似爱媛大学要比松山大学好得多。</p><img src="https://s2.loli.net/2025/01/04/e2gav9f5Y6oIzDR.jpg" width="600" height="350"/><br/><img src="https://s2.loli.net/2025/01/04/jv3YyVKnU94tGsg.jpg" width="600" height="350"/><hr><h2 id="返程：松山-→-小倉"><a href="#返程：松山-→-小倉" class="headerlink" title="返程：松山 → 小倉"></a>返程：松山 → 小倉</h2><p>返程的フェーリ次日5点就抵达了，因此在船上停留的时间不长，船内体验也完全不如启程时的東九フェーリ<del>船票反而贵了一倍！</del>。</p><hr><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2>]]></content>
      
      
      <categories>
          
          <category> Life in Japan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> travel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Opencv图像骨干提取算法的实现和优化 Thinning Algorithm (VSP Project)</title>
      <link href="/2024/12/13/opencv-VSP-thinning/"/>
      <url>/2024/12/13/opencv-VSP-thinning/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是骨干提取（教案）"><a href="#什么是骨干提取（教案）" class="headerlink" title="什么是骨干提取（教案）"></a>什么是骨干提取（教案）</h2><hr><h2 id="代码总体框架"><a href="#代码总体框架" class="headerlink" title="代码总体框架"></a>代码总体框架</h2><ul><li>骨干提取Thinning：<ul><li>骨干提取主函数：SequentialThinning。</li><li>自研骨干提取算法：solve，配合三个检查函数“CheckEdge,CheckConnectivity和CheckEndPoint”。</li><li>Zhang-suen骨干提取算法：zhangsuen_solve，配合两个检查函数“UpDownCheck和LeftRightCheck”。</li></ul></li><li>特征点提取Feature Extraction：<ul><li>FeatureExtraction：配合四个检查函数。新增Check_3BranchPoint和Check_4BranchPoint。</li></ul></li><li>提取后图像优化Optimization：<ul><li>removeLinesUseFeatureExtraction: 利用特征点进行优化，配合ColorPixelDetect。</li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LWCThinning</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function">Mat <span class="title">SequentialThinning</span><span class="params">(Mat&amp; Image, <span class="type">int</span> num_iterations)</span></span>;</span><br><span class="line">        <span class="function">Mat <span class="title">FeatureExtraction</span><span class="params">(Mat&amp; Image)</span></span>;</span><br><span class="line">        <span class="comment">//Optimization</span></span><br><span class="line">        <span class="function">Mat <span class="title">removeLinesUseFeatureExtraction</span><span class="params">(Mat&amp; Image)</span></span>;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="comment">//VSP-slice based thinning</span></span><br><span class="line">        <span class="function">Mat <span class="title">solve</span><span class="params">(Mat&amp; Image, <span class="type">int</span> iter_time)</span></span>;        </span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">CheckEdge</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">CheckConnectivity</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">CheckEndPoint</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="comment">//zhang-suen algorithm</span></span><br><span class="line">        <span class="function">Mat <span class="title">zhangsuen_solve</span><span class="params">(Mat&amp; Image, <span class="type">int</span> iter_time)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">UpDownCheck</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">LeftRightCheck</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="comment">//Optimization functions</span></span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">ColorPixelDetect</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="comment">//Pixel Analyze</span></span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">Check_3BranchPoint</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">Check_4BranchPoint</span><span class="params">(Mat&amp; image3x3)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="时间复杂度上的考虑"><a href="#时间复杂度上的考虑" class="headerlink" title="时间复杂度上的考虑"></a>时间复杂度上的考虑</h2><p>本代码中除了对原始图像的遍历使用了双重for循环，在其他方法中<strong>对3x3的卷积核进行处理时，均没有使用for循环。</strong>这是出于时间复杂度上的考量。3x3的卷积核很小，一共也才9个元素，如果再用一个常规的双重for循环进行处理，时间复杂度将会增加O(n^2)，与外部遍历结合起来就是O(n^4),处理大图片将会非常缓慢；但相对地，如果将其展开书写，将时间复杂度降低为O(1)的情况下代码也不会变得过于冗杂。</p><hr><h2 id="三次判断"><a href="#三次判断" class="headerlink" title="三次判断"></a>三次判断</h2><p>总体思路：三个check方法返回0或1。在solve()中调用这些check，三次判断全1才会执行像素的删除。</p><ul><li>return 0: 该项check不通过，不可以删除。</li><li>return 1: 该项check通过，可以删除。</li></ul><h3 id="连续性判断-CheckConnectivity"><a href="#连续性判断-CheckConnectivity" class="headerlink" title="连续性判断 CheckConnectivity"></a>连续性判断 CheckConnectivity</h3><p>先说结论：判断中心注目像素周围一圈的八个像素，从一个节点开始顺时针旋转遍历。<strong>如果像素值“从黑转变为白”的次数超过1次，那么就是不连续的。</strong>（另外，前提是周围一圈有两个及以上的黑色像素。如果只有一个黑像素，那么这个中心像素就是端点end-point）</p><p>我们可以通过画图来探索这个规律：</p><img src="https://s2.loli.net/2024/12/13/bJP8qNYZ6Wp4d92.jpg" width="500" height="500"/><img src="https://s2.loli.net/2024/12/13/x9mpz4YWS7hyeJQ.jpg" width="500" height="500"/><ul><li>①很好地展示了斜线连续性被破坏的情况。</li><li>③很好地展示了直线连续性被破坏的情况。</li><li>⑤展示了两条直线交点处连续性被破坏的情况。</li><li>②中即便删除了中心像素，其连续性没有被破坏。</li></ul><p>观察上述所有破快连续性的情况，我们发现他们周围一圈像素从黑变白的转变次数都大于一。(图中红色箭头和数字)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::CheckConnectivity</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="comment">//======== iff time which around 8-pixel transfer from B to W is only 1, then it will have connectivity. ========</span></span><br><span class="line">    <span class="type">int</span> B = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="type">int</span> T = <span class="number">0</span>;   <span class="comment">//transfer from B to W </span></span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) == <span class="number">255</span>)    T++;    </span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) == <span class="number">255</span>)    T++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) == <span class="number">255</span>)    T++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) == <span class="number">255</span>)    T++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) == <span class="number">255</span>)    T++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) == <span class="number">255</span>)    T++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) == <span class="number">255</span>)    T++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) == <span class="number">255</span>)    T++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(B &gt;= <span class="number">2</span> &amp;&amp; T == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;   <span class="comment">//preserve connectivity</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="端点判断-CheckEndPoint"><a href="#端点判断-CheckEndPoint" class="headerlink" title="端点判断 CheckEndPoint"></a>端点判断 CheckEndPoint</h3><p>不难发现，如果<strong>中心注目像素的周围只存在一个黑色像素，那么它就是端点end-point。</strong>我们不能删除端点像素。</p><img src="https://s2.loli.net/2024/12/13/od4ypr5Fci2E97f.jpg" width="500" height="500"/><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::CheckEndPoint</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="comment">//======== iff around 8-pixel only have one B, then this center pixel is endpoint.========</span></span><br><span class="line">    <span class="type">int</span> B = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) == <span class="number">0</span>)  B++;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) == <span class="number">0</span>)  B++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(B == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//not end point</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="孤立点判断-CheckEdge"><a href="#孤立点判断-CheckEdge" class="headerlink" title="孤立点判断 CheckEdge"></a>孤立点判断 CheckEdge</h3><p>这个是最简单的，只需要查看周围一圈是否有黑色像素即可。它的深层含义是：<strong>画面上孤立的黑色像素点不能删去，因为他完整地表征着一部分的画面信息。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::CheckEdge</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) == <span class="number">0</span> || image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) == <span class="number">0</span> || image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) == <span class="number">0</span> ||   </span><br><span class="line">       image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) == <span class="number">0</span> ||                                 image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) == <span class="number">0</span> ||</span><br><span class="line">       image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) == <span class="number">0</span> || image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) == <span class="number">0</span> || image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) == <span class="number">0</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//boundary have B-pixel</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="slove-主方法-和-SequentialThinning-接口方法"><a href="#slove-主方法-和-SequentialThinning-接口方法" class="headerlink" title="slove()主方法 和 SequentialThinning()接口方法"></a>slove()主方法 和 SequentialThinning()接口方法</h2><ul><li>使用3x3的卷积核遍历原始图像。具体而言，当检测到3x3的中心是黑色像素时，从原图中抽取这个3x3的正方形像素区域构成一个新图像kernel_nowscanning，然后进行三次check。如果check通过，则将中心的黑色像素删除（即变为白色）。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">LWCThinning::solve</span><span class="params">(Mat&amp; Image, <span class="type">int</span> iter_time)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">1</span>; y &lt; img_height<span class="number">-1</span>; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span>; x &lt; img_width<span class="number">-1</span>; x++)&#123;</span><br><span class="line">            Mat kernel_nowscanning = Mat::<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">3</span>,CV_8UC1);   </span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x);     <span class="comment">//center-pixel</span></span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">+1</span>);</span><br><span class="line">            <span class="comment">//if center-pixel is black, go to &#x27;mittsu no check&#x27;, find out whether it can be change to white.</span></span><br><span class="line">            <span class="type">int</span> check1 = <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> check2 = <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> check3 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                check1 = <span class="built_in">CheckEdge</span>(kernel_nowscanning);</span><br><span class="line">                check2 = <span class="built_in">CheckConnectivity</span>(kernel_nowscanning);</span><br><span class="line">                check3 = <span class="built_in">CheckEndPoint</span>(kernel_nowscanning);</span><br><span class="line">                <span class="comment">//change center-pixel from B to W (in original-image)</span></span><br><span class="line">                <span class="keyword">if</span>(check1 == <span class="number">1</span> &amp;&amp; check2 == <span class="number">1</span> &amp;&amp; check3 == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="comment">//kernel_nowscanning.at&lt;uchar&gt;(1,1) = 255;</span></span><br><span class="line">                    Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x) = <span class="number">255</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string file_dic = <span class="string">&quot;result/process_time&quot;</span> + <span class="built_in">to_string</span>(iter_time) + <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">    <span class="built_in">imwrite</span>(file_dic, Image);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Image saved to &quot;</span> &lt;&lt; file_dic &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>SequentialThinning()接口方法可以被用户(主函数)调用，对给定的图样进行N次骨干提取，将结果保存在result路径下。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">LWCThinning::SequentialThinning</span><span class="params">(Mat&amp; Image, <span class="type">int</span> num_iterations)</span></span>&#123;</span><br><span class="line">    Mat processedImage = Image.<span class="built_in">clone</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; num_iterations; i++)&#123;</span><br><span class="line">        processedImage = <span class="built_in">solve</span>(processedImage, i);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;||||&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;||||&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Final Processed Image&quot;</span>, processedImage);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Processing Completed.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="初步测试结果"><a href="#初步测试结果" class="headerlink" title="初步测试结果"></a>初步测试结果</h2><h3 id="ABCD英文字符"><a href="#ABCD英文字符" class="headerlink" title="ABCD英文字符"></a>ABCD英文字符</h3><ul><li>字母A：</li></ul><img src="https://s2.loli.net/2024/12/13/8BQLTIqYRg5ou96.png"/><ul><li>字母C：</li></ul><img src="https://s2.loli.net/2024/12/14/sft7ARd8QXDYIoy.png"/><ul><li>字母E：</li></ul><img src="https://s2.loli.net/2024/12/14/Uw3ELfY9BrkQ8qt.png"/><h3 id="复杂的彩色图样"><a href="#复杂的彩色图样" class="headerlink" title="复杂的彩色图样"></a>复杂的彩色图样</h3><p>首先将彩色图片读取为灰度图，然后进行二值化处理，最后再调用SequentialThinning。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//Complex image</span></span><br><span class="line">    Mat image_ena = <span class="built_in">imread</span>(<span class="string">&quot;source/ENANA.png&quot;</span>, IMREAD_GRAYSCALE);</span><br><span class="line">    Mat binary_image;</span><br><span class="line">    <span class="type">double</span> threshold_value = <span class="number">128</span>;</span><br><span class="line">    <span class="built_in">threshold</span>(image_ena, binary_image, threshold_value, <span class="number">255</span>, THRESH_BINARY);</span><br><span class="line"></span><br><span class="line">    LWCThinning handle;</span><br><span class="line">    handle.<span class="built_in">SequentialThinning</span>(binary_image,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试原图与处理后图像如下：</p><img src="https://s2.loli.net/2024/12/13/pfNk4bBd7oHOeLZ.png"/><ul><li>原图：</li></ul><img src="https://s2.loli.net/2024/12/13/Ft5Z6h7RecyMBqs.jpg"/><ul><li>转化为二值化图像：</li></ul><img src="https://s2.loli.net/2024/12/13/Zvs3K4j7XpMnmTB.png"/><ul><li>我们把处理后的图像放大观察，可以看到骨干提取的一些细节。比如衣服的领带和眼睛等等：</li></ul><img src="https://s2.loli.net/2024/12/13/r8QuoaHwyXfC2li.png"/><hr><h2 id="问题：对于复杂图像，处理后的图像中存在很多垂直水平面的直线（噪声），如何去除？"><a href="#问题：对于复杂图像，处理后的图像中存在很多垂直水平面的直线（噪声），如何去除？" class="headerlink" title="问题：对于复杂图像，处理后的图像中存在很多垂直水平面的直线（噪声），如何去除？"></a>问题：对于复杂图像，处理后的图像中存在很多垂直水平面的直线（噪声），如何去除？</h2><h2 id="优化一：“Zhang-Suen算法”"><a href="#优化一：“Zhang-Suen算法”" class="headerlink" title="优化一：“Zhang-Suen算法”"></a>优化一：“Zhang-Suen算法”</h2><p>问题就出在我们对原始图像的处理顺序上。<strong>我们总是从上往下、从左往右地进行逐行扫描，这种顺序性可能导致水平或垂直方向的像素被优先移除或保留，从而产生水平或垂直的直线。</strong>这直接导致了很多倾斜的骨干被强制地转化为了垂直的直线。</p><p>从上方测试图“字母A”可以看出这种状况，并且在彩色测试图中也很明显能发现许多垂直直线。</p><h3 id="Zhang-Suen算法"><a href="#Zhang-Suen算法" class="headerlink" title="Zhang-Suen算法"></a>Zhang-Suen算法</h3><p>与先前自己实现的算法相比，其实就是check部分的逻辑不同。Zhang-Suen算法会先后进行两次遍历，一次是UpDown一次是LeftRight。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//zhangsuen -----------------------------------------------------</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::UpDownCheck</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* ---- */</span></span><br><span class="line">    <span class="keyword">if</span>((B &gt;= <span class="number">2</span> &amp;&amp; B &lt;= <span class="number">6</span>) &amp;&amp; T == <span class="number">1</span> &amp;&amp; ((P2*P4*P6 == <span class="number">0</span>) || (P4*P6*P8 == <span class="number">0</span>)))     </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::LeftRightCheck</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* ---- */</span></span><br><span class="line">    <span class="keyword">if</span>((B &gt;= <span class="number">2</span> &amp;&amp; B &lt;= <span class="number">6</span>) &amp;&amp; T == <span class="number">1</span> &amp;&amp; ((P2*P4*P8 == <span class="number">0</span>) || (P2*P6*P8 == <span class="number">0</span>)))     </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Mat <span class="title">LWCThinning::zhangsuen_solve</span><span class="params">(Mat&amp; Image, <span class="type">int</span> iter_time)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">1</span>; y &lt; img_height<span class="number">-1</span>; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span>; x &lt; img_width<span class="number">-1</span>; x++)&#123;</span><br><span class="line">            Mat kernel_nowscanning = Mat::<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">3</span>,CV_8UC1);   </span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x);     <span class="comment">//center-pixel</span></span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">+1</span>);</span><br><span class="line">            <span class="keyword">if</span>(kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">int</span> firstcheck = <span class="built_in">UpDownCheck</span>(kernel_nowscanning);</span><br><span class="line">                <span class="keyword">if</span>(firstcheck == <span class="number">1</span>)&#123;</span><br><span class="line">                    Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x) = <span class="number">255</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">1</span>; y &lt; img_height<span class="number">-1</span>; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span>; x &lt; img_width<span class="number">-1</span>; x++)&#123;</span><br><span class="line">            Mat kernel_nowscanning = Mat::<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">3</span>,CV_8UC1);   </span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x);     <span class="comment">//center-pixel</span></span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">+1</span>);</span><br><span class="line">            <span class="keyword">if</span>(kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">int</span> secondcheck = <span class="built_in">LeftRightCheck</span>(kernel_nowscanning);</span><br><span class="line">                <span class="keyword">if</span>(secondcheck == <span class="number">1</span>)&#123;</span><br><span class="line">                    Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x) = <span class="number">255</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string file_dic = <span class="string">&quot;result/process_time&quot;</span> + <span class="built_in">to_string</span>(iter_time<span class="number">+1</span>) + <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">    <span class="built_in">imwrite</span>(file_dic, Image);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Image saved to &quot;</span> &lt;&lt; file_dic &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="优化结果"><a href="#优化结果" class="headerlink" title="优化结果"></a>优化结果</h3><p>貌似没有解决垂直直线较多的问题…</p><hr><h2 id="优化二：利用“特性点提取”消除直线"><a href="#优化二：利用“特性点提取”消除直线" class="headerlink" title="优化二：利用“特性点提取”消除直线"></a>优化二：利用“特性点提取”消除直线</h2><p>刚刚在做“特征点提取”的工作时，突然来了灵感：<strong>我发现这些多余的直线都是由非特征点组成的，亦或是原理特征点的。</strong>换言之，<strong>我们只要提取了骨架图的特征点，然后去除远离特征点的点即可！</strong></p><h3 id="特征点提取"><a href="#特征点提取" class="headerlink" title="特征点提取"></a>特征点提取</h3><img src="https://s2.loli.net/2024/12/16/dkJEzB2IpyxLZrH.jpg" width="500" height="500"/><p>这是特征点提取后的图片，不同的特征点标上了不同的颜色：</p><ul><li>孤立点 isolated point：红色。</li><li>端点 end point：绿色。</li><li>3分歧点：蓝色。图片中的阶梯状斜线属于这一类。</li><li>4分歧点：黄色。十字路口。</li></ul><img src="https://s2.loli.net/2024/12/16/2x3kpPmacTdHe8E.png"/><p>我们可以放大图片观察一下细节：（由于4分歧点的黄色标注看的不明显，我在边上放了一双眼睛。）</p><img src="https://s2.loli.net/2024/12/16/W7dcQkhTnKeVHqC.png"/><p>特征点提取的核心代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::Check_3BranchPoint</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* ----- */</span></span><br><span class="line">    <span class="keyword">if</span>(B &gt;= <span class="number">3</span> &amp;&amp; (T == <span class="number">2</span> || T == <span class="number">3</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::Check_4BranchPoint</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* ----- */</span></span><br><span class="line">    <span class="keyword">if</span>(T == <span class="number">4</span> || </span><br><span class="line">      (image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) == <span class="number">0</span> &amp;&amp; image3x<span class="number">3.</span><span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) == <span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Mat <span class="title">LWCThinning::FeatureExtraction</span><span class="params">(Mat&amp; Image)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Mat rgbImage;   <span class="comment">//After PixelAnalyzing</span></span><br><span class="line">    <span class="built_in">cvtColor</span>(Image, rgbImage, COLOR_GRAY2BGR);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">1</span>; y &lt; img_height<span class="number">-1</span>; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span>; x &lt; img_width<span class="number">-1</span>; x++)&#123;</span><br><span class="line">            Mat kernel_nowscanning = Mat::<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">3</span>,CV_8UC1);   </span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">0</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">-1</span>,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x);     <span class="comment">//center-pixel</span></span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">2</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;uchar&gt;(y<span class="number">+1</span>,x<span class="number">+1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> check_iso = <span class="number">0</span>;       <span class="comment">//isolated point</span></span><br><span class="line">            <span class="type">int</span> check_endpoint = <span class="number">0</span>;  <span class="comment">//end point</span></span><br><span class="line">            <span class="type">int</span> check_3branchpoint = <span class="number">0</span>;  <span class="comment">//3branchpoint</span></span><br><span class="line">            <span class="type">int</span> check_4branchpoint = <span class="number">0</span>;  <span class="comment">//4branchpoint</span></span><br><span class="line">            <span class="keyword">if</span>(kernel_nowscanning.<span class="built_in">at</span>&lt;uchar&gt;(<span class="number">1</span>,<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                check_iso = <span class="built_in">CheckEdge</span>(kernel_nowscanning);</span><br><span class="line">                check_endpoint = <span class="built_in">CheckEndPoint</span>(kernel_nowscanning);</span><br><span class="line">                check_3branchpoint = <span class="built_in">Check_3BranchPoint</span>(kernel_nowscanning);</span><br><span class="line">                check_4branchpoint = <span class="built_in">Check_4BranchPoint</span>(kernel_nowscanning);</span><br><span class="line">                <span class="keyword">if</span>(check_iso == <span class="number">0</span>)&#123;</span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">0</span>] = <span class="number">0</span>;    </span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">1</span>] = <span class="number">0</span>;  </span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">2</span>] = <span class="number">255</span>;  <span class="comment">//Red</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(check_endpoint == <span class="number">0</span>)&#123;</span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">0</span>] = <span class="number">0</span>;    </span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">1</span>] = <span class="number">255</span>;  <span class="comment">//Green</span></span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">2</span>] = <span class="number">0</span>;  </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(check_3branchpoint == <span class="number">1</span>)&#123;</span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">0</span>] = <span class="number">255</span>;  <span class="comment">//Blue</span></span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">1</span>] = <span class="number">0</span>;  </span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">2</span>] = <span class="number">0</span>;  </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(check_4branchpoint == <span class="number">1</span>)&#123;</span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">0</span>] = <span class="number">0</span>;  </span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">1</span>] = <span class="number">255</span>;  </span><br><span class="line">                    rgbImage.<span class="built_in">at</span>&lt;Vec3b&gt;(y, x)[<span class="number">2</span>] = <span class="number">255</span>;  </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rgbImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="利用“特性点提取”消除直线"><a href="#利用“特性点提取”消除直线" class="headerlink" title="利用“特性点提取”消除直线"></a>利用“特性点提取”消除直线</h3><p>仍然使用3x3的扫描核kernel（中心像素为注目像素），如果kernel内不存在彩色像素，即不存在特征点，那么就删去这个中心像素。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">LWCThinning::removeLinesUseFeatureExtraction</span><span class="params">(Mat&amp; Image)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">1</span>; y &lt; img_height<span class="number">-1</span>; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span>; x &lt; img_width<span class="number">-1</span>; x++)&#123;</span><br><span class="line">            Mat kernel_nowscanning = Mat::<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">3</span>,CV_8UC3);   </span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">0</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y<span class="number">-1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">0</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y<span class="number">-1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">0</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y<span class="number">-1</span>,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">1</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">1</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x);     <span class="comment">//center-pixel</span></span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">1</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x<span class="number">+1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">2</span>,<span class="number">0</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y<span class="number">+1</span>,x<span class="number">-1</span>);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">2</span>,<span class="number">1</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y<span class="number">+1</span>,x);</span><br><span class="line">            kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">2</span>,<span class="number">2</span>) = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y<span class="number">+1</span>,x<span class="number">+1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">1</span>,<span class="number">1</span>)[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">1</span>,<span class="number">1</span>)[<span class="number">1</span>] == <span class="number">0</span> &amp;&amp; kernel_nowscanning.<span class="built_in">at</span>&lt;Vec3b&gt;(<span class="number">1</span>,<span class="number">1</span>)[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">int</span> is_coloured = <span class="built_in">ColorPixelDetect</span>(kernel_nowscanning);</span><br><span class="line">                <span class="keyword">if</span>(!is_coloured)&#123;</span><br><span class="line">                    <span class="comment">//remove(change to W)</span></span><br><span class="line">                    Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">0</span>] = <span class="number">255</span>;</span><br><span class="line">                    Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">1</span>] = <span class="number">255</span>;</span><br><span class="line">                    Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">2</span>] = <span class="number">255</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Image;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LWCThinning::ColorPixelDetect</span><span class="params">(Mat&amp; image3x3)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;  </span><br><span class="line">            Vec3b pixel = image3x<span class="number">3.</span><span class="built_in">at</span>&lt;Vec3b&gt;(i, j);</span><br><span class="line">            <span class="type">int</span> B = pixel[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> G = pixel[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> R = pixel[<span class="number">2</span>];</span><br><span class="line">            <span class="comment">//have colour</span></span><br><span class="line">            <span class="keyword">if</span> (!((B == <span class="number">255</span> &amp;&amp; G == <span class="number">255</span> &amp;&amp; R == <span class="number">255</span>) || (B == <span class="number">0</span> &amp;&amp; G == <span class="number">0</span> &amp;&amp; R == <span class="number">0</span>))) &#123;  </span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="优化结果-1"><a href="#优化结果-1" class="headerlink" title="优化结果"></a>优化结果</h3><h4 id="动漫人物图片：ShinonomeEnana"><a href="#动漫人物图片：ShinonomeEnana" class="headerlink" title="动漫人物图片：ShinonomeEnana"></a>动漫人物图片：ShinonomeEnana</h4><ul><li>原图：</li></ul><img src="https://s2.loli.net/2024/12/18/XNl32ypMYd9gP7s.jpg"/><ul><li>初步骨架提取：</li></ul><img src="https://s2.loli.net/2024/12/18/F9CB5bufxeZYcNI.png"/><ul><li>特征点提取：</li></ul><img src="https://s2.loli.net/2024/12/18/sT7AdPFawf8m4ro.png"/><ul><li>利用特征点去直线：</li></ul><img src="https://s2.loli.net/2024/12/18/i9fBzcWmwqEebhO.png"/><h4 id="环境景色图片：ひびきの南"><a href="#环境景色图片：ひびきの南" class="headerlink" title="环境景色图片：ひびきの南"></a>环境景色图片：ひびきの南</h4><ul><li>原图：</li></ul><img src="https://s2.loli.net/2024/12/18/TRED91LvNKAZwWh.jpg"/><ul><li>初步骨架提取：</li></ul><img src="https://s2.loli.net/2024/12/18/wFKiSWHX79nQNtG.png"/><ul><li>特征点提取：</li></ul><img src="https://s2.loli.net/2024/12/18/oFV19ucJZSjyK8R.png"/><ul><li>利用特征点去直线：</li></ul><img src="https://s2.loli.net/2024/12/18/7iYMDKBCyeFuQ6R.png"/><h4 id="包含大量文字的图片：日本年号对照表"><a href="#包含大量文字的图片：日本年号对照表" class="headerlink" title="包含大量文字的图片：日本年号对照表"></a>包含大量文字的图片：日本年号对照表</h4><ul><li>原图：</li></ul><img src="https://s2.loli.net/2024/12/18/THtpLUYydkmP5oE.jpg"/><ul><li>初步骨架提取：</li></ul><img src="https://s2.loli.net/2024/12/18/6ayND9HbGQCIAtg.png"/><ul><li>特征点提取：</li></ul><img src="https://s2.loli.net/2024/12/18/nCmiPc8FYEzSafL.png"/><p>我们发现对文字进行处理后效果已经很好了，因此无需再继续优化。</p>]]></content>
      
      
      <categories>
          
          <category> LAB EXERCISE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPP </tag>
            
            <tag> Tough-Transform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何区分使用「ないで」和「なくて」</title>
      <link href="/2024/11/15/nihongo-nakutenaide/"/>
      <url>/2024/11/15/nihongo-nakutenaide/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题思考"><a href="#问题思考" class="headerlink" title="问题思考"></a>问题思考</h2><p>当我们学习日语接触到“接续”这个概念时，我们会用到<strong>各种词性的テ形</strong>，比如：</p><ul><li>形容词接续形容词(即…又…)： 寂<strong>しくて</strong>辛い &#x2F; きれい<strong>で</strong>明るい</li><li>动词接续动词（先做…后做…）： 学校から帰って(から)勉強します。</li><li>名词接续名词(是…又是…)： 彼は会社員<strong>で</strong>、３人の子供の父親です。</li></ul><p>但不难发现，上述例子中均是正向表达。如果使用“否定”那又将如何表达呢？如果与此同时使用原形，对于初学者来说非常难以在第一时间想到如何表达。前几天，我在和日本人日常交流时，突然遇到了以下几个问题：</p><ul><li><strong>动词否定接续时到底用「ないで」还是「なくて」？</strong></li><li><strong>一类形容词“过去否定”「なかった」如何接续？</strong></li></ul><p>经过我的学习和查阅，现在我可以来解释我提出的这些疑问。</p><hr><h2 id="否定「ない」接续时到底变「ないで」还是「なくて」？"><a href="#否定「ない」接续时到底变「ないで」还是「なくて」？" class="headerlink" title="否定「ない」接续时到底变「ないで」还是「なくて」？"></a>否定「ない」接续时到底变「ないで」还是「なくて」？</h2><p>其实早在N5时期，我们就接触到了很多使用到「ないで」和「なくて」的文法，诸如：</p><ul><li>～しないでください！   请不要做….。</li><li>～しなくてもいいです。　  不做….也可以。</li></ul><p>只不过我们当时没有多去考虑这两个句型中为什么前者用「ないで」后者用「なくて」。</p><h3 id="「ないで」只能动词接，而「なくて」动词名词形容词均可"><a href="#「ないで」只能动词接，而「なくて」动词名词形容词均可" class="headerlink" title="「ないで」只能动词接，而「なくて」动词名词形容词均可"></a>「ないで」只能动词接，而「なくて」动词名词形容词均可</h3><p><strong>在表达否定「ない」的接续(テ形)时，日语中存在「ないで」和「なくて」两种表达。</strong></p><ul><li><p><strong>对于形容词和名词而言，一定有「ない」-&gt; 「なくて」。</strong>如：</p><blockquote><p>暑くない -&gt; 暑くなくて：　この部屋が暑くなくてきれいだと思う。<br>有名じゃない -&gt; 有名じゃなくて：　この町が有名じゃなくて、景色も他の町に比べ物にならない。<br>学生じゃない -&gt; 学生じゃなくて：　彼は学生じゃなくて会社員じゃない。</p></blockquote></li><li><p><strong>对于动词而言，「ない」-&gt; 「なくて」&#x2F;「ないで」均可。</strong>如：</p><blockquote><p>食べない -&gt; 食べなくて：　朝ご飯を食べなくて学校へ行きます。<br>食べない -&gt; 食べないで：　朝ご飯を食べないで学校へ行きます。</p></blockquote></li></ul><p>显然，上面两个句子表达的含义是不一样的，光光是读出来给人的感觉就不一样了。因此，动词「ない」-&gt; 「なくて」或者「ない」-&gt; 「ないで」的含义不同。</p><h3 id="动词「ないで」-「なくて」接续动词的区别：前者状态，后者因果。"><a href="#动词「ないで」-「なくて」接续动词的区别：前者状态，后者因果。" class="headerlink" title="动词「ないで」&#x2F;「なくて」接续动词的区别：前者状态，后者因果。"></a>动词「ないで」&#x2F;「なくて」接续动词的区别：前者状态，后者因果。</h3><ul><li>「ないで」</li></ul><p>从语感上或者说从文法上，<strong>助词「で」给人一种“基于…状态”，“在…状态下”的感觉。</strong>比如我在超市里付钱时，我会说「現金で」表示我要用现金支付，这里的「で」是手段；又比如每次打舞萌都做公交车出勤，我会说「バスで行く」，这里的「で」是交通工具。</p><p>我们迁移到「ないで」上：<strong>我们可以认为「ないで」其实就是简单的「ない」加了一个助词「で」，表示“在没有(做)….的情况下,….”，“在…状态下…”。</strong>我们还可以顺水推舟地发现，「ないで」严格意义上并不是「ない」的テ形，表义的功劳都在助词「で」上。</p><p>在网络上看到一个评论感觉说的相当有道理：<strong>で就是 with, ないで就是without。</strong> 意思和我上面长篇大论表述的如出一辙。</p><blockquote><p>　朝ご飯を食べ<strong>ないで</strong>学校へ行きます。<br>　在没有吃早饭的情况下就直接去了学校。</p></blockquote><p>这个句子里的「朝ご飯を食べないで」就是表达了：其后「学校へ行きます」动作发生的条件&#x2F;状态是「朝ご飯を食べないで」。下面有更多的例句，可以自行体会语感。</p><blockquote><p>　シートベルトをつけないで運転することが危ないです！<br>　在不系安全带的状态下开车是危险的</p></blockquote><blockquote><p>　教科書を見ないで答えてみます。<br>　在不看课本的状态下试着回答一下。</p></blockquote><blockquote><p>　毎日ゲームばっかり勉強しないで、試験に合格するわけがないだろう！<br>　每天只顾玩游戏不学习，不可能通过考试吧！</p></blockquote><ul><li>「なくて」</li></ul><p>前面说「ないで」严格意义上并不是「ない」的テ形，那么「なくて」就是严格意义上「ない」的テ形了。<strong>当前后有因果关系时，会使用到「なくて」。</strong>比如下面这个例句，出自番剧《间谍过家家》里可爱的阿尼亚：</p><blockquote><p>　アニヤ、母いなくて寂しい～<br>　阿尼亚没有妈妈好寂寞~</p></blockquote><p>这里阿尼亚感到寂寞是因为没有妈妈，所以这里有因果关系。如果用「ないで」就变成阿尼亚说自己在没有妈妈的状态下寂寞了，让人感觉怪怪的。还有一些例句：</p><blockquote><p>　お金がなくて旅行できない。<br>　(因为)没钱(所以)没法出去旅游。</p></blockquote><h3 id="「ないで」-「ずに」"><a href="#「ないで」-「ずに」" class="headerlink" title="「ないで」&#x3D;「ずに」"></a>「ないで」&#x3D;「ずに」</h3><p>在N3的语法中我们还学过，<strong>动词否定还有一种形式是以「ず」结尾，即「ないで」&#x3D;「ずに」</strong>。这里的「ずに」明显是与其后接续的另外一个动词有关联性，如：</p><blockquote><p>　遠慮しないでいきましょう！　＝　遠慮せずに行きましょう！<br>　遠慮しなくていきましょう！　×<br>　不用担心，就这样上吧！（碧蓝幻想relink中夏洛特的副本出发语音。）　</p></blockquote><hr><h2 id="一类形容词“过去否定”「なかった」如何接续？"><a href="#一类形容词“过去否定”「なかった」如何接续？" class="headerlink" title="一类形容词“过去否定”「なかった」如何接续？"></a>一类形容词“过去否定”「なかった」如何接续？</h2><p>以「面白い」为例：「面白い」接续变テ形「面白くて」，其一般否定形式「面白くない」接续变テ形「面白くなくて」。那么问题来了，其过去否定形式「面白くなかった」接续怎么变テ形呢？<strong>我想破了脑袋也没想出来「なかった」怎么变テ形，因为「なかった」准确来说已经是一个タ形了。</strong></p><p>其实，<strong>如果真想在「なかった」后面接续，直接分成两个句子并用「が」&#x2F;「けれど」等助词连接即可，不用テ形。</strong> 比如：</p><blockquote><p>　この映画は面白くなかったけど、映像は綺麗だった。<br>　(昨天看的)这部电影不有趣，但画面很漂亮。</p></blockquote><blockquote><p>　昨日のプレゼンは緊張感がなく、あまり印象的ではなかったが、今日のプレゼンはとても説得力があって素晴らしかった。<br>　昨天的演讲没有紧张感，也不是很有印象深刻，但今天的演讲非常有说服力，非常出色。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于「させていただきます」的几点理解</title>
      <link href="/2024/11/14/nihongo-itadaku/"/>
      <url>/2024/11/14/nihongo-itadaku/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题引发"><a href="#问题引发" class="headerlink" title="问题引发"></a>问题引发</h2><p>今天上日语中级会话课的时候，看到了几个用到了敬语「いただく」的句子。</p><blockquote><p>（お店の張り紙）本日は定休日につき、<strong>休ませていただきます。</strong></p></blockquote><blockquote><p>　ー　ぜひ鈴木さんの下でプロジェクトを<strong>担当させていただきたい</strong>と思っておいます。</p></blockquote><p>从一开始学习日语我就比较头疼敬语，尤其是「いただく」这种与其他语法亦有繁多组合的敬语文法（比如可以组合成「させていただいてもいいですか」、「いただきたい」等等），这让我有一丝的畏惧，因此我一直没有理解这一部分。今天正好有兴致研究这一部分，趁此机会或许可以透析一下这个文法。</p><hr><h2 id="「いただきます」是「もらう」的自谦语"><a href="#「いただきます」是「もらう」的自谦语" class="headerlink" title="「いただきます」是「もらう」的自谦语"></a>「いただきます」是「もらう」的自谦语</h2><p>在N4学习“授受关系”时，书上或者老师肯定会提到三个“授受关系”动词的敬语形态。</p><ul><li>あげる：我给别人。　　—&gt;　差し上げます（さしあげます）</li><li>もらう：我&#x2F;别人收到。   —&gt;　頂きます（いただきます）</li><li>くれる：我收到。(私にくれる)   —&gt; くださいます</li></ul><p>虽然是简单的N4语法，也有必要重新说明一下： <strong>「いただきます」是「もらう」的自谦语，表示主语是动作的接收方。</strong> 比如：「彼に手伝ってもらう」表示接收到了他的帮助；「母にパソコンを買ってもらう」表示妈妈帮我买了电脑(我接受到了妈妈买电脑的动作)。</p><p>当然，对于二次元来说「いただきます」可谓是再熟悉不过了，因为日本人吃饭前都会说一句：“いただきます！”，字幕通常把他翻译成：“我开动了！”。<strong>这是因为「いただきます」还是「食べる」和「飲む」的自谦形式。</strong> 我自己说我自己要吃&#x2F;喝了，那按道理就要用谦让语了。至于为什么要在开饭前对着家人或者朋友说敬语，这只能解释为日本人几百年来养成的语言习惯了。不过，「させていただきます」中的「いただきます」是「もらう」的自谦语，并不是「食べる」或者「飲む」的自谦语，因此本博客主要还是讨论前者。</p><hr><h2 id="「させてもらう」-「させていただきます」：请允许我做"><a href="#「させてもらう」-「させていただきます」：请允许我做" class="headerlink" title="「させてもらう」-&gt;「させていただきます」：请允许我做"></a>「させてもらう」-&gt;「させていただきます」：请允许我做</h2><ul><li><strong>「させていただきます」表达一种“征求对方同意”的语义，可以翻译成“请允许我(做)……”，是一个自谦语表达。他的原形是「させてもらう」。</strong></li><li><strong>过去式「させていただきました」并不是为了表示时间上的过去，而是出于礼貌，表示自己已经领受或得到了对方的许可，从而更加尊重对方的心意。</strong>日语中，尤其是敬语表达时，过去式并不一定是指时间上的过去，而更多是表达一种「完了」的状态，以传达谦逊和礼貌。</li></ul><p>如果从文法的角度思考，「させる」是使役形（让…做），其テ形后续接动词 「いただく」。从文法上的理解，「させていただきます」的意思是”让我获得…”，或者说”让我得到做…（的允许）”。如果使用过去式「させていただきした」，难道要理解成过去已经允许我做过某些事？这样理解起来还是有些别扭。</p><p>其实我们没有必要一味追求语法的思考，我认为首先我们需要记住他的意思并记忆一些例句，积累语感。我们从「させてもらう」开始，转变到「させていただきます」。</p><blockquote><p>　紹介させてもらいます。<br>　電話させてもらいました。<br>　食べさせてもらった。</p></blockquote><blockquote><p>　紹介させていただきます。<br>　電話させていただきました。<br>　食べさせていただきました。</p></blockquote><blockquote><p>　请允许我介绍一下。<br>　承蒙您的允许，我给您打电话了。  —&gt;  我给您打电话，打扰您了。<br>　承蒙您的允许，我吃了。   —&gt;  多谢您的款待。</p></blockquote><p>理解了上面几个例句，这时候我们再看第一节中的第一个句子，就非常清晰明了了。</p><blockquote><p>（お店の張り紙）本日は定休日につき、<strong>休ませていただきます。</strong><br>（商店门口的贴纸）今天是休息日，请允许我们今天停业。</p></blockquote><hr><h2 id="诸如「させていただいてもいいですか」的引申"><a href="#诸如「させていただいてもいいですか」的引申" class="headerlink" title="诸如「させていただいてもいいですか」的引申"></a>诸如「させていただいてもいいですか」的引申</h2><p>下面介绍几组基于「させていただきます」的几个引申文法，理解起来也并不困难。但这里肯定不可能总结所有的引申文法，也没有这个必要，只需要理解常见的即可，积累预感。</p><h3 id="第一组：-いいですか"><a href="#第一组：-いいですか" class="headerlink" title="第一组：+いいですか"></a>第一组：+いいですか</h3><p>-　させてもらってもいいですか<br>-　させていただいてもいいですか<br>-　させていただいてもよろしいでしょうか</p><p>上述三个文法在「させていただきます」的基础上接续了「てもいいですか」。<strong>增加「てもいいですか」本质上是表达更加礼貌的一种请求，意思仍然是“请允许我…”</strong>，无需过多揣测其文法逻辑。另外，上述三个文法礼貌程度逐渐增加，这是因为「もらう」变「いただく」、「いいですか」变「よろしいでしょうか」都是更加尊敬的表达。</p><h3 id="第二组：-たい"><a href="#第二组：-たい" class="headerlink" title="第二组：-たい"></a>第二组：-たい</h3><p>-　させていただきたい</p><p>由于文法主体仍然是「させていただきます」，因此「させていただきたい」表达的仍然是一种请求，只不过最后的「たい」表达了 <strong>“我想要做某事”的愿望</strong>。我们甚至可以更加<strong>简单地认为「させていただきたい」就是「～したい」&#x2F;「～することがほしいです」的礼貌自谦形式。</strong></p><p>我们回到问题引发中的句子，发现已经可以理解了。在这里，「担当させていただきたい」表达了说话人对担任项目负责人的强烈愿望，同时使用了非常礼貌和谦逊的语气。通过使用「させていただく」，说话人显得既尊重对方，也表达了对机会的渴望。整体上，这种表达方式在正式场合或职场中非常合适，特别是向上司或领导表达希望得到某项任务或责任的请求时。</p><blockquote><p>ー　ぜひ鈴木さんの下でプロジェクトを<strong>担当させていただきたい</strong>と思っておいます。<br>  —— 我非常希望能够在铃木先生的领导下负责这个项目。</p></blockquote><h3 id="第三组：可能形"><a href="#第三组：可能形" class="headerlink" title="第三组：可能形"></a>第三组：可能形</h3><p>-　させていただけませんか<br>-　させていただけないでょうか</p><p>文法上，「いただけます」是「いただく」的可能形。但 <strong>「させていただけませんか」其实也表示“能不能让我做……”的请求，可以视为「させていただきます」的另一种说法。</strong></p><p><strong>「させていただけないでしょうか」是「させていただけませんか」的稍微更正式或更委婉的说法，意思是几乎相同。</strong>语感上「ないでしょうか」带有更强的请求语气，通常用于非常正式或需要特别委婉表达的场合。</p><hr><h2 id="很好的视频"><a href="#很好的视频" class="headerlink" title="很好的视频"></a>很好的视频</h2><iframe     src="//player.bilibili.com/player.html?isOutside=true&aid=512275586&bvid=BV1Ng41197SN&cid=742559217&p=1"     width="900"     height="550"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     allowfullscreen="true"></iframe>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用原生opencv代码实现霍夫变换(Tough-Transform)</title>
      <link href="/2024/11/10/opencv/"/>
      <url>/2024/11/10/opencv/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h2><blockquote><p>Hough transform is a very classic and useful method for the detection of curves or lines. It uses the transformation of two coordinate spaces (the image space and the Hough space) to map curves or straight lines to points in another coordinate space to vote and form peaks, thus transforming the problem of detecting arbitrary shapes into a statistical peak problem.<br>In this task, you can draw some lines or circles by yourself and use Hough Transform to detect the figure you drew (you can try for lines firstly and then for circles). MUST implement it yourself!</p></blockquote><h2 id="代码框架"><a href="#代码框架" class="headerlink" title="代码框架"></a>代码框架</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ToughTransform</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">LineDetection</span><span class="params">(Mat&amp; Image)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">CircleDetection</span><span class="params">(Mat&amp; Image)</span></span>;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">ShowParameterSpace</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">DrawLineDetectedImage</span><span class="params">(Mat&amp; Image, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> row_max, <span class="type">int</span> theta_max , <span class="type">int</span> second_filter_threshold)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">ShowParameterSpace_Circle</span><span class="params">(vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">DrawCircleDetectedImage</span><span class="params">(Mat&amp; Image,vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> max_a, <span class="type">int</span> max_b, <span class="type">int</span> max_r, <span class="type">int</span> second_filter_threshold)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="直线检测"><a href="#直线检测" class="headerlink" title="直线检测"></a>直线检测</h2><ul><li><strong>void LineDetection(Mat&amp; Image):</strong> 算法主流程。包括将图像转化到二维参数空间(row,theta),对参数空间矩阵进行初次阈值过滤,以及调用ShowParameterSpace和DrawLineDetectedImage方法。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    LineDetection: ShowParameterSpace + DrawLineDetectedImage</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::LineDetection</span><span class="params">(Mat&amp; Image)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    <span class="comment">//ParameterSpace[row][theta]</span></span><br><span class="line">    <span class="type">double</span> row_max = <span class="built_in">sqrt</span>(img_width * img_width + img_height * img_height);</span><br><span class="line">    <span class="type">int</span> theta_max = <span class="number">180</span>;   <span class="comment">//theta: step_length = 1</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;  <span class="built_in">PatameterSpace</span>(<span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),</span><br><span class="line">                                        <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(theta_max, <span class="number">0</span>));</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;ImageSize:&quot;</span> &lt;&lt; img_height &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; img_width &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;PatameterSpace:&quot;</span> &lt;&lt; <span class="number">2</span>*row_max &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; theta_max &lt;&lt; <span class="string">&quot; --&gt; &quot;</span> &lt;&lt; <span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)) &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; theta_max &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; img_height; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">0</span>; x &lt; img_width; x++)&#123;</span><br><span class="line">            <span class="type">int</span> B = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> G = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> R = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">2</span>]; </span><br><span class="line">            <span class="keyword">if</span>(B == <span class="number">0</span> &amp;&amp; G == <span class="number">0</span> &amp;&amp; R == <span class="number">0</span>)&#123;   <span class="comment">//Edge is black-pixel</span></span><br><span class="line">                <span class="comment">//!!!look through theta, calc row than write into parameter-space!!!</span></span><br><span class="line">                <span class="comment">//遍历theta，计算row，存入参数空间</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> theta = <span class="number">0</span>; theta &lt;= theta_max; theta++)&#123;  </span><br><span class="line">                    <span class="type">double</span> theta_rad = theta * PI / <span class="number">180.0</span>;</span><br><span class="line">                    <span class="type">double</span> row = x * <span class="built_in">cos</span>(theta_rad) + y * <span class="built_in">sin</span>(theta_rad);</span><br><span class="line">                    <span class="comment">//row可能是负的,row_max作为偏移量. 将偏移量row_max加到row上，转为非负索引</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; &quot;row = &quot; &lt;&lt; row &lt;&lt; &quot; ---&gt; &quot; &lt;&lt; row + row_max  &lt;&lt; &quot; ---&gt; &quot; &lt;&lt; ceil(row) + ceil(row_max) &lt;&lt; endl;</span></span><br><span class="line">                    PatameterSpace[<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row) + <span class="built_in">ceil</span>(row_max))][theta]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> threshold = <span class="number">10</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;  <span class="built_in">PS_AfterFilter</span>(<span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),</span><br><span class="line">                                        <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(theta_max, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">//threshold-filter</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PatameterSpace.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PatameterSpace[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(PatameterSpace[i][j] &gt;= threshold)</span><br><span class="line">                PS_AfterFilter[i][j] = PatameterSpace[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                PS_AfterFilter[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ShowParameterSpace</span>(PS_AfterFilter,<span class="string">&quot;source/line-result/EnhancedHoughSpaceImage-FirstFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> second_filter_threshold = <span class="number">500</span>;</span><br><span class="line">    <span class="built_in">DrawLineDetectedImage</span>(Image,PS_AfterFilter,<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),theta_max,second_filter_threshold);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>ShowParameterSpace(vector&lt;vector<int>&gt;&amp; PS_AfterFilter, string file_name, int thetaScale)：</strong> 在LineDetection和DrawLineDetectedImage中被调用，可以描绘出二维参数空间PS_AfterFilter(row,theta)的点分布。其中file_name是图片保存地址；thetaScale将theta轴拉伸，以达到更好的可视化效果。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    ShowParameterSpace:</span></span><br><span class="line"><span class="comment">        描绘(row,theta)参数空间的图像。此时的参数矩阵PS_AfterFilter只经历了初步的阈值筛选。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::ShowParameterSpace</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale = <span class="number">15</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> rows = PS_AfterFilter.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> cols = PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function">Mat <span class="title">houghSpaceImage</span><span class="params">(rows, cols, CV_8UC1, Scalar(<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="type">int</span> maxVal = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; row : PS_AfterFilter) &#123;</span><br><span class="line">        maxVal = <span class="built_in">max</span>(maxVal, *<span class="built_in">max_element</span>(row.<span class="built_in">begin</span>(), row.<span class="built_in">end</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            houghSpaceImage.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="built_in">static_cast</span>&lt;uchar&gt;(<span class="number">255.0</span> * PS_AfterFilter[i][j] / maxVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Mat enlargedHoughSpace;</span><br><span class="line">    <span class="built_in">resize</span>(houghSpaceImage, enlargedHoughSpace, <span class="built_in">Size</span>(cols * thetaScale, rows), <span class="number">0</span>, <span class="number">0</span>, INTER_LINEAR);</span><br><span class="line">    Mat colorHoughSpace;</span><br><span class="line">    <span class="built_in">applyColorMap</span>(enlargedHoughSpace, colorHoughSpace, COLORMAP_JET);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Enhanced Hough Space&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Enhanced Hough Space&quot;</span>, colorHoughSpace);</span><br><span class="line">    <span class="built_in">imwrite</span>(file_name, colorHoughSpace);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>DrawLineDetectedImage(Mat&amp; Image, vector&lt;vector<int>&gt;&amp; PS_AfterFilter, int row_max, int theta_max , int second_filter_threshold):</strong> 将二维参数空间矩阵PS_AfterFilter进行更深层次的阈值筛选(阈值更大，筛选剩下的点更少)，然后反变换到”x,y直角坐标系”，描绘出检测出的直线。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    DrawDetectedImage: </span></span><br><span class="line"><span class="comment">        二次过滤参数空间(row,theta)矩阵，然后在原图image上描绘出直线。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::DrawLineDetectedImage</span><span class="params">(Mat&amp; Image, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> row_max, <span class="type">int</span> theta_max = <span class="number">180</span>, <span class="type">int</span> second_filter_threshold = <span class="number">100</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//threshold-filter-second</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">PS_FinalFilter</span>(<span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),</span><br><span class="line">                                       <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(theta_max, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PS_AfterFilter.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(PS_AfterFilter[i][j] &gt;= second_filter_threshold)</span><br><span class="line">                PS_FinalFilter[i][j] = PS_AfterFilter[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                PS_FinalFilter[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ShowParameterSpace</span>(PS_FinalFilter,<span class="string">&quot;source/line-result/EnhancedHoughSpaceImage-FinalFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rows = PS_FinalFilter.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> cols = PS_FinalFilter[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> row = <span class="number">0</span>; row &lt; rows; row++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> theta = <span class="number">0</span>; theta &lt; cols; theta++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (PS_FinalFilter[row][theta] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">double</span> this_theta_rad = theta * PI / <span class="number">180.0</span>;  </span><br><span class="line">                <span class="type">double</span> this_row = row - row_max;</span><br><span class="line"></span><br><span class="line">                Point pt1, pt2;</span><br><span class="line">                <span class="type">double</span> a = <span class="built_in">cos</span>(this_theta_rad);</span><br><span class="line">                <span class="type">double</span> b = <span class="built_in">sin</span>(this_theta_rad);</span><br><span class="line">                <span class="type">double</span> x0 = a * this_row;</span><br><span class="line">                <span class="type">double</span> y0 = b * this_row;</span><br><span class="line">                pt<span class="number">1.</span>x = <span class="built_in">cvRound</span>(x0 + <span class="number">1000</span> * (-b));</span><br><span class="line">                pt<span class="number">1.</span>y = <span class="built_in">cvRound</span>(y0 + <span class="number">1000</span> * (a));</span><br><span class="line">                pt<span class="number">2.</span>x = <span class="built_in">cvRound</span>(x0 - <span class="number">1000</span> * (-b));</span><br><span class="line">                pt<span class="number">2.</span>y = <span class="built_in">cvRound</span>(y0 - <span class="number">1000</span> * (a));</span><br><span class="line"></span><br><span class="line">                <span class="built_in">line</span>(Image, pt1, pt2, <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>, LINE_AA);</span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Detected Lines&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Detected Lines&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">imwrite</span>(<span class="string">&quot;source/line-result/DetectedLinesImage.png&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>调试方法：</strong> 调整阈值second_filter_threshold直到合适。如果阈值太低，描绘的直线就会过多，图上一片混乱；如果阈值太高，则不会有检测结果。</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>输入测试图片，主函数调用LineDetection(Mat&amp; Image)即可。</p><ul><li>测试图像如下。</li></ul><img src="https://s2.loli.net/2024/11/10/tnT7CJQDNgLraUR.png"/><ul><li>霍夫变换并初步阈值过滤(threshold&#x3D;10)后，检测出的直线二维参数空间(row,theta)图像。</li></ul><img src="https://s2.loli.net/2024/11/10/zdjCqyXa6QkMBp1.png"/><ul><li>二次深度阈值过滤(threshold&#x3D;500)后，检测出的直线二维参数空间(row,theta)图像。</li></ul><img src="https://s2.loli.net/2024/11/10/J4VF9xdLYpwrayU.png"/><ul><li>反变换到直角坐标，原图上描绘出检测到的直线。</li></ul><img src="https://s2.loli.net/2024/11/10/IBofUtDdhnNelWx.png"/><hr><h2 id="圆检测"><a href="#圆检测" class="headerlink" title="圆检测"></a>圆检测</h2><ul><li><strong>CircleDetection(Mat&amp; Image):</strong> 算法主流程。包括将图像转化到三维参数空间(a,b,r)，其中圆心坐标为(a,b)，圆的半径是r。对参数空间矩阵进行初次阈值过滤,以及调用ShowParameterSpace_Circle和DrawCircleDetectedImage方法。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    CircleDetection: ShowParameterSpace_Circle + DrawCircleDetectedImage</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::CircleDetection</span><span class="params">(Mat&amp; Image)</span></span>&#123;</span><br><span class="line">    <span class="comment">//在霍夫变换中，我们通过三个参数来描述一个圆：圆心的坐标(a,b)和半径r.</span></span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    <span class="comment">//ParameterSpace[b][a][r]   b---&gt;height---&gt;y | a---&gt;width---&gt;x</span></span><br><span class="line">    <span class="type">int</span> max_a = img_width;</span><br><span class="line">    <span class="type">int</span> max_b = img_height;</span><br><span class="line">    <span class="type">int</span> max_r = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="number">0.5</span>* <span class="built_in">min</span>(max_a,max_b));</span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; <span class="built_in">ParameterSpace</span>(max_b,</span><br><span class="line">                                               vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(max_a,</span><br><span class="line">                                               <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(max_r)</span><br><span class="line">                                               ));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; img_height; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">0</span>; x &lt; img_width; x++)&#123;</span><br><span class="line">            <span class="type">int</span> B = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> G = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> R = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">2</span>]; </span><br><span class="line">            <span class="keyword">if</span>(B == <span class="number">0</span> &amp;&amp; G == <span class="number">0</span> &amp;&amp; R == <span class="number">0</span>)&#123;   <span class="comment">//Edge is black-pixel</span></span><br><span class="line">                <span class="comment">//遍历r，计算row，存入参数空间: min_r = 20 --&gt; max_r</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> r = <span class="number">20</span>; r &lt;= max_r; r++)&#123;</span><br><span class="line">                    <span class="comment">//遍历每个r情况下的theta(一周)，计算a&amp;b，存入参数空间</span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> theta = <span class="number">0</span>; theta &lt; <span class="number">360</span>; theta++)&#123;</span><br><span class="line">                        <span class="type">double</span> theta_rad = theta * PI / <span class="number">180.0</span>;</span><br><span class="line">                        <span class="type">int</span> a = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(x - r * <span class="built_in">cos</span>(theta_rad));</span><br><span class="line">                        <span class="type">int</span> b = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(y - r * <span class="built_in">sin</span>(theta_rad));</span><br><span class="line">                        <span class="keyword">if</span>(a &gt;= <span class="number">0</span> &amp;&amp; a &lt; max_a &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt; max_b)&#123;</span><br><span class="line">                            ParameterSpace[b][a][r]++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//threshold-filter</span></span><br><span class="line">    <span class="type">int</span> threshold = <span class="number">10</span>;</span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; <span class="built_in">PS_AfterFilter</span>(max_b,</span><br><span class="line">                                               vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(max_a,</span><br><span class="line">                                               <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(max_r)</span><br><span class="line">                                               ));</span><br><span class="line">    <span class="comment">//threshold-filter</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ParameterSpace.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; ParameterSpace[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; ParameterSpace[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(ParameterSpace[i][j][k] &gt;= threshold)</span><br><span class="line">                    PS_AfterFilter[i][j][k] = ParameterSpace[i][j][k];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    PS_AfterFilter[i][j][k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ShowParameterSpace_Circle</span>(PS_AfterFilter,<span class="string">&quot;source/circle-result/EnhancedHoughSpaceImage-FirstFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> second_filter_threshold = <span class="number">300</span>;</span><br><span class="line">    <span class="built_in">DrawCircleDetectedImage</span>(Image,PS_AfterFilter,max_a,max_b,max_r,second_filter_threshold);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>ShowParameterSpace_Circle(vector&lt;vector&lt;vector<int>&gt;&gt;&amp; PS_AfterFilter, string file_name, int thetaScale)：</strong> 传入三维参数矩阵PS_AfterFilter，描绘图像。其中file_name是图片保存地址；thetaScale将theta轴拉伸，以达到更好的可视化效果。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::ShowParameterSpace_Circle</span><span class="params">(vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale = <span class="number">1</span>)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> height = PS_AfterFilter.<span class="built_in">size</span>();     <span class="comment">//row的范围</span></span><br><span class="line">    <span class="type">int</span> width = PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>();   <span class="comment">// theta的范围</span></span><br><span class="line">    <span class="type">int</span> num_r = PS_AfterFilter[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); <span class="comment">// 半径r的数量</span></span><br><span class="line">    <span class="function">Mat <span class="title">parameter_space_image</span><span class="params">(height, width, CV_8UC1, cv::Scalar(<span class="number">0</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> b = <span class="number">0</span>; b &lt; height; b++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> a = <span class="number">0</span>; a &lt; width; a++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> r = <span class="number">0</span>; r &lt; num_r; r++) &#123;</span><br><span class="line">                <span class="type">int</span> accumulator_value = PS_AfterFilter[b][a][r];</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 将累积值映射到0-255的范围（可以根据实际情况调整比例）</span></span><br><span class="line">                <span class="type">int</span> intensity = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="number">255.0</span> * accumulator_value / <span class="number">255.0</span>); </span><br><span class="line">                parameter_space_image.<span class="built_in">at</span>&lt;uchar&gt;(b, a) = intensity;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Mat enlargedHoughSpace;</span><br><span class="line">    <span class="built_in">resize</span>(parameter_space_image, enlargedHoughSpace, <span class="built_in">Size</span>(width * thetaScale, height), <span class="number">0</span>, <span class="number">0</span>, INTER_LINEAR);</span><br><span class="line">    Mat colorHoughSpace;</span><br><span class="line">    <span class="built_in">applyColorMap</span>(enlargedHoughSpace, colorHoughSpace, COLORMAP_JET);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Detected Circles&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Detected Circles&quot;</span>, colorHoughSpace);</span><br><span class="line">    <span class="built_in">imwrite</span>(file_name, colorHoughSpace);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>DrawCircleDetectedImage(Mat&amp; Image,vector&lt;vector&lt;vector<int>&gt;&gt;&amp; PS_AfterFilter, int max_a, int max_b, int max_r, int second_filter_threshold)：</strong> 传入三维参数空间PS_AfterFilter，利用second_filter_threshold进行二次阈值筛选后，反变换到直角坐标。由于是圆检测，只需要取出圆心(x,y)和半径r的值，然后进行描绘即可。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::DrawCircleDetectedImage</span><span class="params">(Mat&amp; Image,vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> max_a, <span class="type">int</span> max_b, <span class="type">int</span> max_r, <span class="type">int</span> second_filter_threshold)</span></span>&#123;</span><br><span class="line">    <span class="comment">//threshold-filter-second</span></span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; <span class="built_in">PS_FinalFilter</span>(max_b,</span><br><span class="line">                                               vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(max_a,</span><br><span class="line">                                               <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(max_r)</span><br><span class="line">                                               ));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PS_AfterFilter.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; PS_AfterFilter[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(PS_AfterFilter[i][j][k] &gt;= second_filter_threshold)</span><br><span class="line">                    PS_FinalFilter[i][j][k] = PS_AfterFilter[i][j][k];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    PS_FinalFilter[i][j][k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ShowParameterSpace_Circle</span>(PS_FinalFilter,<span class="string">&quot;source/circle-result/EnhancedHoughSpaceImage-FinalFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PS_FinalFilter.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PS_FinalFilter[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; PS_FinalFilter[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); k++)&#123;</span><br><span class="line">                <span class="comment">//draw circle</span></span><br><span class="line">                <span class="keyword">if</span>(PS_FinalFilter[i][j][k] != <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="function">Point <span class="title">center</span><span class="params">(j, i)</span></span>;</span><br><span class="line">                    <span class="built_in">circle</span>(Image, center, k, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>);  <span class="comment">//红色圆圈</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Detected Circles&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Detected Circles&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">imwrite</span>(<span class="string">&quot;source/circle-result/DrawCircleDetectedImage.png&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>调试方法：</strong> <ul><li>调整阈值second_filter_threshold直到合适。如果阈值太低，描绘的圆就会过多，图上一片混乱；如果阈值太高，则不会有检测结果。</li><li>调整参数计算时，半径的遍历上下限的r_min和r_max。r_max一般直接取图像height和width中的较小值。r_min如果取0，那么有宽度的直线也会被检测成一长串的迷你圆；r_min取得太小，可能会把交点也检测成小圆。</li></ul></li></ul><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>输入测试图片，主函数调用CircleDetection(Mat&amp; Image)即可。</p><ul><li>测试图像如下。</li></ul><img src="https://s2.loli.net/2024/11/10/tnT7CJQDNgLraUR.png"/><ul><li>霍夫变换并初步阈值(threshold&#x3D;10)过滤后，检测出的参数空间图像。</li></ul><img src="https://s2.loli.net/2024/11/10/PhSj2sOoIez7MfV.png"/><ul><li>二次深度阈值过滤(threshold&#x3D;300)后，检测出的圆参数空间图像。</li></ul><img src="https://s2.loli.net/2024/11/10/Ou8HU2AxKkST4bN.png"/><ul><li>反变换到直角坐标，原图上描绘出检测到的圆。</li></ul><img src="https://s2.loli.net/2024/11/10/B68dTPnk1OAIpMh.png"/><hr><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/core.hpp&gt;</span>     <span class="comment">// Basic OpenCV structures (cv::Mat)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/videoio.hpp&gt;</span>  <span class="comment">// Video write</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/imgcodecs.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/videoio.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/video.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> PI = <span class="number">3.14159265358979323846</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ToughTransform</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">LineDetection</span><span class="params">(Mat&amp; Image)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">CircleDetection</span><span class="params">(Mat&amp; Image)</span></span>;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">ShowParameterSpace</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">DrawLineDetectedImage</span><span class="params">(Mat&amp; Image, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> row_max, <span class="type">int</span> theta_max , <span class="type">int</span> second_filter_threshold)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">ShowParameterSpace_Circle</span><span class="params">(vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">DrawCircleDetectedImage</span><span class="params">(Mat&amp; Image,vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> max_a, <span class="type">int</span> max_b, <span class="type">int</span> max_r, <span class="type">int</span> second_filter_threshold)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    ShowParameterSpace:</span></span><br><span class="line"><span class="comment">        描绘(row,theta)参数空间的图像。此时的参数矩阵PS_AfterFilter只经历了初步的阈值筛选。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::ShowParameterSpace</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale = <span class="number">15</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> rows = PS_AfterFilter.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> cols = PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function">Mat <span class="title">houghSpaceImage</span><span class="params">(rows, cols, CV_8UC1, Scalar(<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="type">int</span> maxVal = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; row : PS_AfterFilter) &#123;</span><br><span class="line">        maxVal = <span class="built_in">max</span>(maxVal, *<span class="built_in">max_element</span>(row.<span class="built_in">begin</span>(), row.<span class="built_in">end</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            houghSpaceImage.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="built_in">static_cast</span>&lt;uchar&gt;(<span class="number">255.0</span> * PS_AfterFilter[i][j] / maxVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Mat enlargedHoughSpace;</span><br><span class="line">    <span class="built_in">resize</span>(houghSpaceImage, enlargedHoughSpace, <span class="built_in">Size</span>(cols * thetaScale, rows), <span class="number">0</span>, <span class="number">0</span>, INTER_LINEAR);</span><br><span class="line">    Mat colorHoughSpace;</span><br><span class="line">    <span class="built_in">applyColorMap</span>(enlargedHoughSpace, colorHoughSpace, COLORMAP_JET);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Enhanced Hough Space&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Enhanced Hough Space&quot;</span>, colorHoughSpace);</span><br><span class="line">    <span class="built_in">imwrite</span>(file_name, colorHoughSpace);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    DrawDetectedImage: </span></span><br><span class="line"><span class="comment">        二次过滤参数空间(row,theta)矩阵，然后在原图image上描绘出直线。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::DrawLineDetectedImage</span><span class="params">(Mat&amp; Image, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> row_max, <span class="type">int</span> theta_max = <span class="number">180</span>, <span class="type">int</span> second_filter_threshold = <span class="number">100</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//threshold-filter-second</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">PS_FinalFilter</span>(<span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),</span><br><span class="line">                                       <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(theta_max, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PS_AfterFilter.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(PS_AfterFilter[i][j] &gt;= second_filter_threshold)</span><br><span class="line">                PS_FinalFilter[i][j] = PS_AfterFilter[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                PS_FinalFilter[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ShowParameterSpace</span>(PS_FinalFilter,<span class="string">&quot;source/line-result/EnhancedHoughSpaceImage-FinalFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rows = PS_FinalFilter.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> cols = PS_FinalFilter[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> row = <span class="number">0</span>; row &lt; rows; row++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> theta = <span class="number">0</span>; theta &lt; cols; theta++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (PS_FinalFilter[row][theta] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">double</span> this_theta_rad = theta * PI / <span class="number">180.0</span>;  </span><br><span class="line">                <span class="type">double</span> this_row = row - row_max;</span><br><span class="line"></span><br><span class="line">                Point pt1, pt2;</span><br><span class="line">                <span class="type">double</span> a = <span class="built_in">cos</span>(this_theta_rad);</span><br><span class="line">                <span class="type">double</span> b = <span class="built_in">sin</span>(this_theta_rad);</span><br><span class="line">                <span class="type">double</span> x0 = a * this_row;</span><br><span class="line">                <span class="type">double</span> y0 = b * this_row;</span><br><span class="line">                pt<span class="number">1.</span>x = <span class="built_in">cvRound</span>(x0 + <span class="number">1000</span> * (-b));</span><br><span class="line">                pt<span class="number">1.</span>y = <span class="built_in">cvRound</span>(y0 + <span class="number">1000</span> * (a));</span><br><span class="line">                pt<span class="number">2.</span>x = <span class="built_in">cvRound</span>(x0 - <span class="number">1000</span> * (-b));</span><br><span class="line">                pt<span class="number">2.</span>y = <span class="built_in">cvRound</span>(y0 - <span class="number">1000</span> * (a));</span><br><span class="line"></span><br><span class="line">                <span class="built_in">line</span>(Image, pt1, pt2, <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>, LINE_AA);</span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Detected Lines&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Detected Lines&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">imwrite</span>(<span class="string">&quot;source/line-result/DetectedLinesImage.png&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    LineDetection: ShowParameterSpace + DrawLineDetectedImage</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::LineDetection</span><span class="params">(Mat&amp; Image)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    <span class="comment">//ParameterSpace[row][theta]</span></span><br><span class="line">    <span class="type">double</span> row_max = <span class="built_in">sqrt</span>(img_width * img_width + img_height * img_height);</span><br><span class="line">    <span class="type">int</span> theta_max = <span class="number">180</span>;   <span class="comment">//theta: step_length = 1</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;  <span class="built_in">PatameterSpace</span>(<span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),</span><br><span class="line">                                        <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(theta_max, <span class="number">0</span>));</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;ImageSize:&quot;</span> &lt;&lt; img_height &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; img_width &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;PatameterSpace:&quot;</span> &lt;&lt; <span class="number">2</span>*row_max &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; theta_max &lt;&lt; <span class="string">&quot; --&gt; &quot;</span> &lt;&lt; <span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)) &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; theta_max &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; img_height; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">0</span>; x &lt; img_width; x++)&#123;</span><br><span class="line">            <span class="type">int</span> B = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> G = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> R = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">2</span>]; </span><br><span class="line">            <span class="keyword">if</span>(B == <span class="number">0</span> &amp;&amp; G == <span class="number">0</span> &amp;&amp; R == <span class="number">0</span>)&#123;   <span class="comment">//Edge is black-pixel</span></span><br><span class="line">                <span class="comment">//!!!look through theta, calc row than write into parameter-space!!!</span></span><br><span class="line">                <span class="comment">//遍历theta，计算row，存入参数空间</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> theta = <span class="number">0</span>; theta &lt;= theta_max; theta++)&#123;  </span><br><span class="line">                    <span class="type">double</span> theta_rad = theta * PI / <span class="number">180.0</span>;</span><br><span class="line">                    <span class="type">double</span> row = x * <span class="built_in">cos</span>(theta_rad) + y * <span class="built_in">sin</span>(theta_rad);</span><br><span class="line">                    <span class="comment">//row可能是负的,row_max作为偏移量. 将偏移量row_max加到row上，转为非负索引</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; &quot;row = &quot; &lt;&lt; row &lt;&lt; &quot; ---&gt; &quot; &lt;&lt; row + row_max  &lt;&lt; &quot; ---&gt; &quot; &lt;&lt; ceil(row) + ceil(row_max) &lt;&lt; endl;</span></span><br><span class="line">                    PatameterSpace[<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row) + <span class="built_in">ceil</span>(row_max))][theta]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> threshold = <span class="number">10</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;  <span class="built_in">PS_AfterFilter</span>(<span class="number">2</span> * <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),</span><br><span class="line">                                        <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(theta_max, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">//threshold-filter</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PatameterSpace.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PatameterSpace[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(PatameterSpace[i][j] &gt;= threshold)</span><br><span class="line">                PS_AfterFilter[i][j] = PatameterSpace[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                PS_AfterFilter[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ShowParameterSpace</span>(PS_AfterFilter,<span class="string">&quot;source/line-result/EnhancedHoughSpaceImage-FirstFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> second_filter_threshold = <span class="number">500</span>;</span><br><span class="line">    <span class="built_in">DrawLineDetectedImage</span>(Image,PS_AfterFilter,<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">ceil</span>(row_max)),theta_max,second_filter_threshold);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::ShowParameterSpace_Circle</span><span class="params">(vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, string file_name, <span class="type">int</span> thetaScale = <span class="number">1</span>)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> height = PS_AfterFilter.<span class="built_in">size</span>();     <span class="comment">//row的范围</span></span><br><span class="line">    <span class="type">int</span> width = PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>();   <span class="comment">// theta的范围</span></span><br><span class="line">    <span class="type">int</span> num_r = PS_AfterFilter[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); <span class="comment">// 半径r的数量</span></span><br><span class="line">    <span class="function">Mat <span class="title">parameter_space_image</span><span class="params">(height, width, CV_8UC1, cv::Scalar(<span class="number">0</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> b = <span class="number">0</span>; b &lt; height; b++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> a = <span class="number">0</span>; a &lt; width; a++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> r = <span class="number">0</span>; r &lt; num_r; r++) &#123;</span><br><span class="line">                <span class="type">int</span> accumulator_value = PS_AfterFilter[b][a][r];</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 将累积值映射到0-255的范围（可以根据实际情况调整比例）</span></span><br><span class="line">                <span class="type">int</span> intensity = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="number">255.0</span> * accumulator_value / <span class="number">255.0</span>); </span><br><span class="line">                parameter_space_image.<span class="built_in">at</span>&lt;uchar&gt;(b, a) = intensity;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Mat enlargedHoughSpace;</span><br><span class="line">    <span class="built_in">resize</span>(parameter_space_image, enlargedHoughSpace, <span class="built_in">Size</span>(width * thetaScale, height), <span class="number">0</span>, <span class="number">0</span>, INTER_LINEAR);</span><br><span class="line">    Mat colorHoughSpace;</span><br><span class="line">    <span class="built_in">applyColorMap</span>(enlargedHoughSpace, colorHoughSpace, COLORMAP_JET);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Detected Circles&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Detected Circles&quot;</span>, colorHoughSpace);</span><br><span class="line">    <span class="built_in">imwrite</span>(file_name, colorHoughSpace);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::DrawCircleDetectedImage</span><span class="params">(Mat&amp; Image,vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;&amp; PS_AfterFilter, <span class="type">int</span> max_a, <span class="type">int</span> max_b, <span class="type">int</span> max_r, <span class="type">int</span> second_filter_threshold)</span></span>&#123;</span><br><span class="line">    <span class="comment">//threshold-filter-second</span></span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; <span class="built_in">PS_FinalFilter</span>(max_b,</span><br><span class="line">                                               vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(max_a,</span><br><span class="line">                                               <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(max_r)</span><br><span class="line">                                               ));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PS_AfterFilter.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PS_AfterFilter[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; PS_AfterFilter[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(PS_AfterFilter[i][j][k] &gt;= second_filter_threshold)</span><br><span class="line">                    PS_FinalFilter[i][j][k] = PS_AfterFilter[i][j][k];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    PS_FinalFilter[i][j][k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ShowParameterSpace_Circle</span>(PS_FinalFilter,<span class="string">&quot;source/circle-result/EnhancedHoughSpaceImage-FinalFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; PS_FinalFilter.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; PS_FinalFilter[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; PS_FinalFilter[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); k++)&#123;</span><br><span class="line">                <span class="comment">//draw circle</span></span><br><span class="line">                <span class="keyword">if</span>(PS_FinalFilter[i][j][k] != <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="function">Point <span class="title">center</span><span class="params">(j, i)</span></span>;</span><br><span class="line">                    <span class="built_in">circle</span>(Image, center, k, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>);  <span class="comment">//红色圆圈</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">namedWindow</span>(<span class="string">&quot;Detected Circles&quot;</span>, WINDOW_NORMAL);</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Detected Circles&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">imwrite</span>(<span class="string">&quot;source/circle-result/DrawCircleDetectedImage.png&quot;</span>, Image);</span><br><span class="line">    <span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    CircleDetection: ShowParameterSpace_Circle + DrawCircleDetectedImage</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToughTransform::CircleDetection</span><span class="params">(Mat&amp; Image)</span></span>&#123;</span><br><span class="line">    <span class="comment">//在霍夫变换中，我们通过三个参数来描述一个圆：圆心的坐标(a,b)和半径r.</span></span><br><span class="line">    <span class="type">int</span> img_width = Image.<span class="built_in">size</span>().width;</span><br><span class="line">    <span class="type">int</span> img_height = Image.<span class="built_in">size</span>().height;</span><br><span class="line">    <span class="comment">//ParameterSpace[b][a][r]   b---&gt;height---&gt;y | a---&gt;width---&gt;x</span></span><br><span class="line">    <span class="type">int</span> max_a = img_width;</span><br><span class="line">    <span class="type">int</span> max_b = img_height;</span><br><span class="line">    <span class="type">int</span> max_r = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(<span class="number">0.5</span>* <span class="built_in">min</span>(max_a,max_b));</span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; <span class="built_in">ParameterSpace</span>(max_b,</span><br><span class="line">                                               vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(max_a,</span><br><span class="line">                                               <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(max_r)</span><br><span class="line">                                               ));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; img_height; y++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">0</span>; x &lt; img_width; x++)&#123;</span><br><span class="line">            <span class="type">int</span> B = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> G = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> R = Image.<span class="built_in">at</span>&lt;Vec3b&gt;(y,x)[<span class="number">2</span>]; </span><br><span class="line">            <span class="keyword">if</span>(B == <span class="number">0</span> &amp;&amp; G == <span class="number">0</span> &amp;&amp; R == <span class="number">0</span>)&#123;   <span class="comment">//Edge is black-pixel</span></span><br><span class="line">                <span class="comment">//遍历r，计算row，存入参数空间: min_r = 20 --&gt; max_r</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> r = <span class="number">20</span>; r &lt;= max_r; r++)&#123;</span><br><span class="line">                    <span class="comment">//遍历每个r情况下的theta(一周)，计算a&amp;b，存入参数空间</span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> theta = <span class="number">0</span>; theta &lt; <span class="number">360</span>; theta++)&#123;</span><br><span class="line">                        <span class="type">double</span> theta_rad = theta * PI / <span class="number">180.0</span>;</span><br><span class="line">                        <span class="type">int</span> a = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(x - r * <span class="built_in">cos</span>(theta_rad));</span><br><span class="line">                        <span class="type">int</span> b = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(y - r * <span class="built_in">sin</span>(theta_rad));</span><br><span class="line">                        <span class="keyword">if</span>(a &gt;= <span class="number">0</span> &amp;&amp; a &lt; max_a &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt; max_b)&#123;</span><br><span class="line">                            ParameterSpace[b][a][r]++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//threshold-filter</span></span><br><span class="line">    <span class="type">int</span> threshold = <span class="number">10</span>;</span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; <span class="built_in">PS_AfterFilter</span>(max_b,</span><br><span class="line">                                               vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(max_a,</span><br><span class="line">                                               <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(max_r)</span><br><span class="line">                                               ));</span><br><span class="line">    <span class="comment">//threshold-filter</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ParameterSpace.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; ParameterSpace[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; ParameterSpace[<span class="number">0</span>][<span class="number">0</span>].<span class="built_in">size</span>(); k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(ParameterSpace[i][j][k] &gt;= threshold)</span><br><span class="line">                    PS_AfterFilter[i][j][k] = ParameterSpace[i][j][k];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    PS_AfterFilter[i][j][k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ShowParameterSpace_Circle</span>(PS_AfterFilter,<span class="string">&quot;source/circle-result/EnhancedHoughSpaceImage-FirstFilter.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> second_filter_threshold = <span class="number">300</span>;</span><br><span class="line">    <span class="built_in">DrawCircleDetectedImage</span>(Image,PS_AfterFilter,max_a,max_b,max_r,second_filter_threshold);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    ToughTransform handle;</span><br><span class="line">    <span class="comment">//Mat img = imread(&quot;source/line.png&quot;);</span></span><br><span class="line">    <span class="comment">//LineDetection(img);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Mat img2 = imread(&quot;source/testline_cross.png&quot;);</span></span><br><span class="line">    <span class="comment">//LineDetection(img2);</span></span><br><span class="line"></span><br><span class="line">    Mat img3 = <span class="built_in">imread</span>(<span class="string">&quot;source/line_circle.png&quot;</span>);</span><br><span class="line">    <span class="comment">//handle.LineDetection(img3);</span></span><br><span class="line">    handle.<span class="built_in">CircleDetection</span>(img3);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LAB EXERCISE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPP </tag>
            
            <tag> Tough-Transform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寄存器堆(RegisterFile)的设计和仿真验证</title>
      <link href="/2024/11/03/RegisterFile/"/>
      <url>/2024/11/03/RegisterFile/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="RF4x8模块硬件描述"><a href="#RF4x8模块硬件描述" class="headerlink" title="RF4x8模块硬件描述"></a>RF4x8模块硬件描述</h2><p>基本功能描述：</p><ul><li>读写全双工。<strong>写入数据</strong>需要①拉高一位使能信号en_wr并②给定地址Addr_wr和③数据Data_wr；<strong>读取数据</strong>需要给定地址Addr_rd_X，并支持两路读取(X&#x3D;A&#x2F;B)。</li><li>数据位宽：8bit；地址位宽：4bit，地址总数2^4&#x3D;16个。即<strong>本RF4x8中可以存放16个8bit数据</strong>。</li><li>时序：clk上升沿检测钟控；rst下降沿检测，异步复位。</li></ul><img src="https://s2.loli.net/2024/11/03/9FjlhLSgbz2spkI.jpg" width="400" height="800"><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> RF4x8 #( <span class="keyword">parameter</span></span><br><span class="line">    DATA_WIDTH = <span class="number">8</span>,</span><br><span class="line">    ADDR_WIDTH = <span class="number">4</span></span><br><span class="line">)(</span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>    clk,</span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>    rst,</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>    en_wr,</span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>[DATA_WIDTH-<span class="number">1</span>:<span class="number">0</span>]   Data_wr,    <span class="comment">//写数据：位宽为8bit</span></span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>[ADDR_WIDTH-<span class="number">1</span>:<span class="number">0</span>]   Addr_wr,    <span class="comment">//写地址：地址位宽为4bit,因此总地址数量为2^4 = 16</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>[ADDR_WIDTH-<span class="number">1</span>:<span class="number">0</span>]   Addr_rd_A,  <span class="comment">//读地址A</span></span><br><span class="line">    <span class="keyword">input</span>   <span class="keyword">wire</span>[ADDR_WIDTH-<span class="number">1</span>:<span class="number">0</span>]   Addr_rd_B,  <span class="comment">//读地址B</span></span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>[DATA_WIDTH-<span class="number">1</span>:<span class="number">0</span>]    Data_rd_A,</span><br><span class="line">    <span class="keyword">output</span>  <span class="keyword">reg</span>[DATA_WIDTH-<span class="number">1</span>:<span class="number">0</span>]    Data_rd_B</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">2</span>**ADDR_WIDTH-<span class="number">1</span>:<span class="number">0</span>]  addr;</span><br><span class="line"><span class="keyword">reg</span>[DATA_WIDTH-<span class="number">1</span>:<span class="number">0</span>]  data[<span class="number">0</span>:<span class="number">2</span>**ADDR_WIDTH-<span class="number">1</span>];   <span class="comment">//[7:0] data[0:15] -&gt; 16个地址，每个地址下存储一个8bit数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//reset:清空数据</span></span><br><span class="line"><span class="keyword">integer</span> i;</span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst)    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">2</span>**ADDR_WIDTH; i=i+<span class="number">1</span>)    data[i] &lt;= <span class="number">8&#x27;b0000_0000</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(en_wr)           <span class="comment">//写使能en_wr==1&#x27;b1  </span></span><br><span class="line">        data[Addr_wr] &lt;= Data_wr;</span><br><span class="line">    <span class="keyword">else</span>    </span><br><span class="line">        data[Addr_wr] &lt;= data[Addr_wr];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读数据</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    Data_rd_A &lt;= data[Addr_rd_A];   <span class="comment">//A通道</span></span><br><span class="line">    Data_rd_B &lt;= data[Addr_rd_B];   <span class="comment">//B通道</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><hr><h2 id="RF4x8仿真分析"><a href="#RF4x8仿真分析" class="headerlink" title="RF4x8仿真分析"></a>RF4x8仿真分析</h2><h3 id="仿真模块RF4x8-tb"><a href="#仿真模块RF4x8-tb" class="headerlink" title="仿真模块RF4x8_tb"></a>仿真模块RF4x8_tb</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 10ps</span></span><br><span class="line"><span class="keyword">module</span> RF4x8_tb();</span><br><span class="line"></span><br><span class="line"><span class="keyword">parameter</span> DATA_WIDTH = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">parameter</span> ADDR_WIDTH = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">reg</span> clk,rst;</span><br><span class="line"><span class="keyword">reg</span> en_wr;</span><br><span class="line"><span class="keyword">reg</span>[DATA_WIDTH-<span class="number">1</span>:<span class="number">0</span>] Data_wr;</span><br><span class="line"><span class="keyword">reg</span>[ADDR_WIDTH-<span class="number">1</span>:<span class="number">0</span>] Addr_wr;</span><br><span class="line"><span class="keyword">reg</span>[ADDR_WIDTH-<span class="number">1</span>:<span class="number">0</span>] Addr_rd_A,Addr_rd_B;</span><br><span class="line"><span class="keyword">wire</span>[DATA_WIDTH-<span class="number">1</span>:<span class="number">0</span>] Data_rd_A,Data_rd_B;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    clk &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    rst &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">    en_wr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">always</span> #<span class="number">10</span>  clk &lt;= ~clk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    <span class="built_in">$monitor</span>(<span class="string">&quot;%t Data_rd_A=%b Data_rd_B=%b&quot;</span>,<span class="built_in">$time</span>,Data_rd_A,Data_rd_B);</span><br><span class="line">    #<span class="number">10</span> rst &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">10</span> rst &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">    <span class="comment">//测试写入</span></span><br><span class="line">    #<span class="number">20</span> en_wr &lt;= <span class="number">1&#x27;b1</span>;  Addr_wr &lt;= <span class="number">4&#x27;b0000</span>;  Data_wr &lt;= <span class="number">8&#x27;b1001_0011</span>;</span><br><span class="line">    #<span class="number">20</span> en_wr &lt;= <span class="number">1&#x27;b1</span>;  Addr_wr &lt;= <span class="number">4&#x27;b0001</span>;  Data_wr &lt;= <span class="number">8&#x27;b1111_0000</span>;</span><br><span class="line">    #<span class="number">20</span> en_wr &lt;= <span class="number">1&#x27;b1</span>;  Addr_wr &lt;= <span class="number">4&#x27;b1100</span>;  Data_wr &lt;= <span class="number">8&#x27;b0000_1011</span>;</span><br><span class="line">    #<span class="number">20</span> en_wr &lt;= <span class="number">1&#x27;b1</span>;  Addr_wr &lt;= <span class="number">4&#x27;b1111</span>;  Data_wr &lt;= <span class="number">8&#x27;b0100_1111</span>;</span><br><span class="line">    <span class="comment">//测试读取</span></span><br><span class="line">    en_wr &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">    #<span class="number">20</span> Addr_rd_A &lt;= <span class="number">4&#x27;b0000</span>;   Addr_rd_B &lt;= <span class="number">4&#x27;b0000</span>;</span><br><span class="line">    #<span class="number">20</span> Addr_rd_A &lt;= <span class="number">4&#x27;b0000</span>;   Addr_rd_B &lt;= <span class="number">4&#x27;b0001</span>;</span><br><span class="line">    #<span class="number">20</span> Addr_rd_A &lt;= <span class="number">4&#x27;b1111</span>;   Addr_rd_B &lt;= <span class="number">4&#x27;b1100</span>;</span><br><span class="line">    <span class="comment">//测试读写双全工</span></span><br><span class="line">    #<span class="number">20</span> en_wr &lt;= <span class="number">1&#x27;b1</span>;  Addr_wr &lt;= <span class="number">4&#x27;b0101</span>;  Data_wr &lt;= <span class="number">8&#x27;b1111_1111</span>;</span><br><span class="line">    #<span class="number">20</span> Addr_rd_A &lt;= <span class="number">4&#x27;b0101</span>;   Addr_rd_B &lt;= <span class="number">4&#x27;b0101</span>;</span><br><span class="line">    #<span class="number">50</span></span><br><span class="line">    <span class="comment">//测试复位</span></span><br><span class="line">    #<span class="number">10</span> rst &lt;= <span class="number">1&#x27;b0</span>;    en_wr &lt;= <span class="number">1&#x27;b0</span>;  Addr_wr &lt;= <span class="number">4&#x27;bx</span>;  Data_wr &lt;= <span class="number">8&#x27;bx</span>;</span><br><span class="line">    #<span class="number">10</span> rst &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">    #<span class="number">20</span> Addr_rd_A &lt;= <span class="number">4&#x27;b0101</span>;   Addr_rd_B &lt;= <span class="number">4&#x27;b0101</span>;</span><br><span class="line">    #<span class="number">20</span></span><br><span class="line">    <span class="built_in">$finish</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RF4x8 RF4x8_for_simultion(</span><br><span class="line">    <span class="variable">.clk</span>(clk),</span><br><span class="line">    <span class="variable">.rst</span>(rst),</span><br><span class="line">    </span><br><span class="line">    <span class="variable">.en_wr</span>(en_wr),</span><br><span class="line">    <span class="variable">.Data_wr</span>(Data_wr),  </span><br><span class="line">    <span class="variable">.Addr_wr</span>(Addr_wr),  </span><br><span class="line">          </span><br><span class="line">    <span class="variable">.Addr_rd_A</span>(Addr_rd_A),</span><br><span class="line">    <span class="variable">.Addr_rd_B</span>(Addr_rd_B),</span><br><span class="line">    <span class="variable">.Data_rd_A</span>(Data_rd_A),</span><br><span class="line">    <span class="variable">.Data_rd_B</span>(Data_rd_B) </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="仿真结果时序分析"><a href="#仿真结果时序分析" class="headerlink" title="仿真结果时序分析"></a>仿真结果时序分析</h3><ul><li><strong>40ns,60ns,80ns,100ns时写数据：</strong>拉高写使能信号en_wr,分别向地址0000,0001,1100和1111写入数据10010011,11110000,00001011和01001111。写地址和写数据信号分别在50ns,70ns,90ns和110ns时刻的clk上升沿被捕捉到。</li><li><strong>120ns时读数据：</strong>给出A&#x2F;B端口读数据地址0000和0000,并在130ns的clk上升沿被捕捉(图1中粉色虚线所在位置),Data_rd_A&#x2F;Data_rd_B分别读取到地址0000处的数据10010011。</li><li><strong>130ns时读数据：</strong>改变B端口读地址为0001,在140ns的clk上升沿被捕捉,Data_rd_B读取到地址0001处的数据11110000。</li><li><strong>260ns时发生复位：</strong>rst被拉低(图2中黄色实线所在位置)，此时再读地址0101的数据，发现被重置为00000000。</li></ul><img src="https://s2.loli.net/2024/11/03/qA7xGedVZCSsin6.jpg"><img src="https://s2.loli.net/2024/11/03/R4EmpAqacloZKdJ.jpg"><p><strong>注</strong>：</p><ul><li>本测试例中，读地址给出后需要等待半个时钟周期才能读出数据，这是因为读地址信号刚好和clk错开(读地址信号给出时正好是clk下降沿)，需要等待clk到达上升沿才能捕捉到读地址信号。如果读写信号再延时半个时钟周期，那么不会出现这样的情况。</li><li>关于写使能信号en_wr：虽然支持读写双工，但在<strong>读数据时最好要把en_wr拉低</strong>。否则当RF与其他模块级联时，可能会导致RF在被读的同时被写入不正确的数据，这在后面的RF_ALU级联测试中会提到。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Course Assignment </category>
          
          <category> System LSI Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Verilog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关日语中「と」和「という」文法的一些理解</title>
      <link href="/2024/10/28/hinongo01/"/>
      <url>/2024/10/28/hinongo01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="日本人说话时句末的「と」是什么意思？"><a href="#日本人说话时句末的「と」是什么意思？" class="headerlink" title="日本人说话时句末的「と」是什么意思？"></a>日本人说话时句末的「と」是什么意思？</h2><p>这个问题是我在做JLPT-N2的完形填空时发现的，当时文章中有这么一句话：</p><blockquote><p>時には、「陰口」が聞こえてくるかもしれない。「彼は、わがままだよな」「あいつはいつも定時だね」など<strong>と</strong>。</p></blockquote><p>当时我就很不理解这个「など」后面的「と」是什么意思，导致整段理解吃力。后来我去问了实验室里一个日本语上手的学长，才明白了这个用法的实际含义。</p><p><strong>「と」放在句末：转述别人说的话，或者是引用别人说的话。可以理解成「と言います」的省略。</strong> </p><p>在N4语法中有这么一条，叫 <strong>「と言います」表示“传闻，听说…”。</strong> 而省略后的「と」<strong>更多地用在转述他人说的话的场合上</strong>。因此，「と言います」与句尾的「と」的含义还是有细微的区别，但可以连携记忆。下面举一个「と言います」表示“传闻，听说…”的例文，同样也是出现在N2考题中的：</p><blockquote><p>　最近はインタネットを通じて知り合った人と結婚することも多い<strong>という</strong>。<br> （翻译）<br>  (听说)进来通过网络认识并结婚的人也很多。</p></blockquote><p>理解了这一点，我们就知道了文章中这句话的意思：</p><blockquote><p>時には、「陰口」が聞こえてくるかもしれない。「彼は、わがままだよな」「あいつはいつも定時だね」など<strong>と</strong>。<br>很多时候，我们可能会听到别人在暗地里的议论之词，“他这个人可真是任性啊”“那个家伙每次可都准时(下班)呢”种种。</p></blockquote><p>因为「彼は、わがままだよな」「あいつはいつも定時だね」这两句话是从别人口中说出的，文章引用他们的话，所以最后加了个「と」，表示“别人说……”</p><p>我们可以再举几个简单的情景对话例子，来理解这个句末的「と」。</p><ul><li><p>由于上周太浪的缘故，导致你的科研毫无进展，这周组会上被教授严厉地批评了一通。组会结束后，你的同学和你交谈了起来：</p><blockquote><p>　ー　なんでそんなに元気がない様子？<br>　ー　だって、先生が「来週頑張らなければ学校辞めろう！」<strong>と</strong>。<br>（翻译）<br> —— 为什么看起来这么没精神？<br> —— 因为老师说“下周再不努力的话就退学吧！”</p></blockquote></li><li><p>你有个好哥们暗恋一个女生，想送她生日礼物，但是他太怂了不敢问她喜欢什么东西，因此拜托你去打听一下。打听结束后，你们在交谈：</p><blockquote><p>　ー　何が情報があるんだか？<br>　ー　「可愛いウサギのバックが好きだ」<strong>と</strong>。<br>(翻译)<br> —— 得到什么情报没有？<br> —— 她说她喜欢可爱兔兔的包包。</p></blockquote></li><li><p>在原神的角色PV：纳西妲「生日快乐」中，纳西妲念的诗歌也用到了这个「と」：</p><blockquote><p>花車が揺らぎ、ナヒーダは目を開ける。そして言う、夢を見ていた<strong>と</strong>。ナヒーダの誕生日は今日なのだ<strong>と</strong>。<br>(翻译)<br>花车摇呀摇，纳西妲睁开眼。她说：刚刚做了梦，梦见纳西妲的生日就是今天。</p></blockquote></li></ul><iframe     src="//player.bilibili.com/player.html?isOutside=true&aid=774457097&bvid=BV1e14y157yY&cid=1052688695&p=1"     width="900"     height="550"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     allowfullscreen="true"></iframe><p>这个文法(或许也不能称之为文法)大概率是不会出现在语法书上的，但是在日本人<strong>日常的对话中非常常见</strong>，来日本的这一个多月里也时常会听到身边的日本人说。</p><hr><h2 id="日本人的口癖：「というふうに」・「という感じで」"><a href="#日本人的口癖：「というふうに」・「という感じで」" class="headerlink" title="日本人的口癖：「というふうに」・「という感じで」"></a>日本人的口癖：「というふうに」・「という感じで」</h2><p>这几周每周三晚上我都会有一节Digital Circuit的课，我发现教授在上课时经常会说这样几个短语：</p><blockquote><p>（哔哩吧啦解释一大堆专业性概念后）…というふうになって…<br>（哔哩吧啦解释一大堆专业性概念后）…という感じで…</p></blockquote><p>于是我就去搜索了一下「というふうに」的意思，发现它是很多很多日本人说话时都会有的口癖。</p><p>首先，「ふう」的汉字是「風」，在字典里有解释是“样子；方法”。因此,<strong>「というふうに」就可以解释成 “就像说的这个样子一样…”，“就像这样…” 。</strong></p><p>其次，在文法层面 <strong>「ふうに」＝「ように」</strong>，「感じで」也有类似的感觉。因此可以用几个最常用的句型来记忆它。</p><blockquote><p>　こんな<strong>ふうに</strong>やってみます！<br>　こんな<strong>感じで</strong>やってみます！<br>　この<strong>ように</strong>やってみます！<br>   (翻译)<br>   就这样做做看吧！</p></blockquote><p>另外，「というふうに」虽然是口癖，给人一种非常口语化、不正式的感觉，但其实现在很多正式的场合也会用到「というふうに」。可能是语言也在慢慢地演化吧。</p><img src="https://s2.loli.net/2024/10/28/9WMIRrgQTlamADq.png" style="zoom:65%;" /><p>下面这个视频可以很好地进行解释： </p><iframe     src="//player.bilibili.com/player.html?isOutside=true&aid=113334019951909&bvid=BV1DDCdYtEL1&cid=26365005117&p=1"     width="900"     height="550"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     allowfullscreen="true"></iframe><hr><h2 id="「という」视作前置定语的引导词：概述前面，修饰后面"><a href="#「という」视作前置定语的引导词：概述前面，修饰后面" class="headerlink" title="「という」视作前置定语的引导词：概述前面，修饰后面"></a>「という」视作前置定语的引导词：概述前面，修饰后面</h2><p>在前两节，我们提到了由「といいます」简化而成的口语「と」，也总结了日本人的口癖用法「というふうに」。但他们归根结底的词根用法是「という」。研究过N2&#x2F;N1语法书的人都知道，由「という」引申出去的文法实在是多的可怕，比如「というより…」「~ということ」。这些复杂且需要额外区分的复杂文法总结，放在了这一节的最后部分。在这一节的主体部分，我只想讨论「という」最基础的含义。</p><p>「いう」写作汉字是「言う」，意思是“说”，只要是学过日语的人都知道。因此，不难理解 <strong>「という」的本意就是「叫做…」「称作…」。</strong> </p><p>与「という」组合而成的文法看似纷繁复杂，其实只要抓住一点就不难理解了，以下面这个句子为例：</p><blockquote><p>勝つのは難しいかもしれないが、まったく可能性がない<strong>というわけでもない</strong>。</p></blockquote><p>此处的「という」很显然是<strong>对前面「勝つ可能性がない」这个事情&#x2F;观点的总结，然后修饰后面的「わけ」</strong>。“没有赢的可能性”这样的“情况”，也并非如此。人话就是虽然难赢但还是可能赢的。当然，把「～というわけでもない」当做一个固定短语“并不是说…”记忆也可以，但重要的是要理解语法现象。</p><p><strong>「という」概述前面，修饰后面的名词。从前面的描述&#x2F;观点一直到「という」为止，都可以试做后面名词的前置定语。我们可以这样认为：「という」是一种前置定语的引导词。</strong> 从这一观点出发，再去思考上一节的「というふうに」，发现也是如此。类似的还可以举出很多例句：</p><blockquote><p>私の趣味は旅行<strong>ということ</strong>です。<br>彼が言ったことを信じるのは難しいが、それが真実だ<strong>という可能性</strong>もある<br>彼女が新しいプロジェクトのリーダーになる<strong>という話</strong>を聞いたが、具体的な詳細はまだ不明だ。</p></blockquote><hr><h2 id="「という」在口语中省略为「って」"><a href="#「という」在口语中省略为「って」" class="headerlink" title="「という」在口语中省略为「って」"></a>「という」在口语中省略为「って」</h2><p>另外，<strong>「という」在口语里常常会省略成「って」</strong>,这里的「という」则是「と言います」<strong>表示“传闻，听说…”。</strong>这是一个N4的语法，再此稍作复习，不做具体展开讨论。</p><blockquote><p>彼女は先月結婚した<strong>って</strong>知ってるか？  &#x2F;  彼女は先月結婚した<strong>という</strong>。<br>彼は本当にすごい人だ<strong>って</strong>。   &#x2F;  彼は本当にすごい人だ<strong>という</strong>。</p></blockquote><blockquote><p>私は字がきれいです<strong>って</strong>。きれいなもんですか。<br><strong>你说</strong>我的字写的好看？哪儿好看了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VOCALOID调教之十二大参数</title>
      <link href="/2024/10/27/VOCALOID%E8%B0%83%E6%95%99%E4%B9%8B%E5%8D%81%E4%BA%8C%E5%A4%A7%E5%8F%82%E6%95%B0/"/>
      <url>/2024/10/27/VOCALOID%E8%B0%83%E6%95%99%E4%B9%8B%E5%8D%81%E4%BA%8C%E5%A4%A7%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="VOCALOID调教之十二大参数"><a href="#VOCALOID调教之十二大参数" class="headerlink" title="VOCALOID调教之十二大参数"></a>VOCALOID调教之十二大参数</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​在钢琴窗口之下的调参区，左侧点击Edit，可以切换选择待调整的参数。</p><img src="https://s2.loli.net/2024/10/28/W3dYeKOXfVbmvth.png" style="zoom:50%;" /><h2 id="VEL：速度"><a href="#VEL：速度" class="headerlink" title="VEL：速度"></a>VEL：速度</h2><p>​VEL参数主要<strong>调整“辅音长度”，即咬字的清晰度</strong>。辅音往往先于整个字的音所在节拍而发出的。换句话讲，任何一个字在歌唱时，辅音先发声，并且辅音的发声要略早于整个音符的起点。</p><ul><li>VEL调高：咬字比较轻，基本听不到辅音的发声。</li><li>VEL调低：咬字很重，用于强调本音。</li></ul><p>​全曲的VEL参数建议<strong>错落有致地进行设置</strong>，最好不要连续地将VEL拉高或者拉低。如果VEL连续地拉高，那么这一段的每个字都听上去轻飘飘的，连续的咬字不清也会带来听不懂的问题；如果VEL连续地拉低，听上去像是一个字一个字顿着发出的声音，MIKU或者洛天依像是在咬牙切齿地唱。如果不是为了风格有意而为之，建议不要这样。</p><h2 id="DYN：动态"><a href="#DYN：动态" class="headerlink" title="DYN：动态"></a>DYN：动态</h2><p>​DYN参数最直观的影响是<strong>音符的响度</strong>，调教初期可以不调整这个参数。刻意地进行DYN的调整，某些歌姬可能会出现非常不好的效果。比如可能造成歌姬人声的响度忽高忽低，时而盖过伴奏时而又被伴奏淹没。这样听上去就非常的难受了。</p><p>​有时通过DYN的调整，也可以实现个人独特的风格。但难度较大。</p><h2 id="BRE：呼吸度"><a href="#BRE：呼吸度" class="headerlink" title="BRE：呼吸度"></a>BRE：呼吸度</h2><p>​BRE参数调整<strong>音色的“粗糙程度”</strong>。默认值为0。</p><ul><li>BRE调高：声音变得干涩，沙哑。</li><li>BRE调低：声音变得明亮一些。</li></ul><p>​一般而言，要求全段BRE保持一致。</p><h2 id="BRI：明亮度"><a href="#BRI：明亮度" class="headerlink" title="BRI：明亮度"></a>BRI：明亮度</h2><p>​BRI参数调整声音的<strong>“明亮度”</strong>。声音明暗的变化可以<strong>调整歌姬演唱情绪的起伏</strong>，要经常进行调教。</p><ul><li>BRI调高：声音变得明亮，像是张大嘴巴放声歌唱。</li><li>BRI调低：声音变得低沉，像是压在喉咙里放不开的声音。</li></ul><p>​在调整BRI时，一个音的响度和频率都发生了较大的变化。具体而言，声音调整的越明亮，频谱整体就会向高频偏移；反之亦然。另外，BRI的调整基本不会影响辅音，但是BRI太低可能会导致齿音较重的问题（尤其是洛天依）。</p><h2 id="CLE：清晰度"><a href="#CLE：清晰度" class="headerlink" title="CLE：清晰度"></a>CLE：清晰度</h2><p>​CLE调高后，声音会变得锋利。基本不作调整。</p><h2 id="OPE：开口度"><a href="#OPE：开口度" class="headerlink" title="OPE：开口度"></a>OPE：开口度</h2><p>​OPE默认拉满，只能向下降低调整。但是如果将一整个音的开口度都设置小，运用于某些长音就不适合，歌姬就像是含着东西在发声一样，听起来很奇怪。如果想要调整全曲歌姬演唱的口型，单纯设置OPE不能解决问题，只能拆音。</p><h2 id="GEN：性别值"><a href="#GEN：性别值" class="headerlink" title="GEN：性别值"></a>GEN：性别值</h2><p>​调整歌姬音色的共振峰，让声音<strong>更偏向于男声或者女声</strong>。这个参数通常全段一致处理，不对每个字进行单修。</p><ul><li>GEN调高：声音变粗，更像男声。但是鼻音增大，声音会变软一些。</li><li>GEN降低：声音变细，更像女声。</li></ul><h2 id="POR：滑音时间"><a href="#POR：滑音时间" class="headerlink" title="POR：滑音时间"></a>POR：滑音时间</h2><p>​在音符与音符之间的衔接处，会有衔接的滑音。比如从C3-do升高到mi，歌姬的音调并不是阶跃式的抬升，而是平滑地向上增加。调整POR前可以先开启“音高渲染”，将音高线显示在音符上，会更加直观。</p><img src="https://s2.loli.net/2024/10/28/9wcrpn1agUEP4hB.png" style="zoom:50%;" /><ul><li>POR调高：前一个音符会更慢地划向后一个。</li><li>POR调低：前一个音符会更快地划向后一个。</li></ul><p>​POR一般不需要大动，个别字精修就行了，整体调整会导致歌姬发声的不自然。</p><h2 id="XSY：交叉演奏参数"><a href="#XSY：交叉演奏参数" class="headerlink" title="XSY：交叉演奏参数"></a>XSY：交叉演奏参数</h2><p>​XSY参数用于混合两个歌姬的声线，其常规用法是<strong>混合同一个歌姬的不同声线</strong>。比如，用不同比例混合洛天依的meng和ning的音色。XSY主要用于解决一个歌姬的<strong>音域</strong>问题，比如洛天依可以在高音部分混合一些乐正绫进行改善。</p><p>​调整前首先需要设置“第二歌手”：【设置】–【当前歌手属性(A)】–【双击当前歌手】–【第二歌手】</p><img src="https://s2.loli.net/2024/10/28/jUJFMZL5iWytNI7.png" style="zoom:50%;" /><ul><li>XSY越大：第二歌手的影响就更大。</li></ul><p>​一个歌姬的第二歌手由官方给定并限制，如果我们想要混合其他同语种的歌姬，可以在V4编辑器的声库管理工具Vocaloid Voice Management中进行解锁。另外，这是V4编辑器特有的功能，在V5和V6编辑器中反而删除了这个功能。</p><h2 id="GWL：咆哮声"><a href="#GWL：咆哮声" class="headerlink" title="GWL：咆哮声"></a>GWL：咆哮声</h2><h2 id="PIT：滑音"><a href="#PIT：滑音" class="headerlink" title="PIT：滑音"></a>PIT：滑音</h2><p>​PIT参数用于<strong>调整“音高”</strong>，是最重要的参数。其直观效果是：</p><ul><li>从中线向下拉低一半：降低一个半音。</li><li>从中线向下拉低到底：降低两个半音。</li></ul><p>​PIT的调教是VOCALOID调教的核心，也是一个调教师水平和风格的最直观体现。PIT的变化对歌曲的情绪等方面都有着很大的影响。其它参数多如牛毛的微调，有时可能还没有PIT的一笔来得有效果。PIT还可以控制转音和颤音。</p><p>​另外，PIT的功能很强大，比如我们可以用PIT手绘颤音：</p><img src="https://s2.loli.net/2024/10/28/hUp6St9TmlMuBg8.png" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> VOCALOID </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vocaloid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP实现蚁群算法(ACO)并解决TSP问题</title>
      <link href="/2024/10/22/TSP-CPP/"/>
      <url>/2024/10/22/TSP-CPP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题简述"><a href="#问题简述" class="headerlink" title="问题简述"></a>问题简述</h2><p>Given a set of n nodes and distances for each pair of nodes, find aroundtrip of minimal total length visiting each node exactly once. The distance from node i to node j is the same as from node j to node i.</p><p>Berlin52 – 52 locations in Berlin (Germany)</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Super-Parameters</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ITERATION_TIMES = <span class="number">200</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ANT_NUMBER = <span class="number">100</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> CITY_NUMBER = <span class="number">50</span>;    <span class="comment">//DataSet: Berin52</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> ALPHA = <span class="number">2.0</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> BETA = <span class="number">1.0</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> ROW = <span class="number">0.4</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> information_init = <span class="number">1.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> vector&lt;vector&lt;<span class="type">double</span>&gt;&gt;  Matrix;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Ant</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; route;           <span class="comment">//(目前为止)路径</span></span><br><span class="line">    <span class="type">double</span>  TotalRouteLength;    <span class="comment">//(目前为止)路径的总长度</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TSP</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">TSP</span>(Matrix DistancesMatrix) : <span class="built_in">DistancesMatrix</span>(DistancesMatrix)&#123;</span><br><span class="line">            city_number = DistancesMatrix.<span class="built_in">size</span>();   <span class="comment">//城市数量：通过距离矩阵获取</span></span><br><span class="line">            InformationMatrix = <span class="built_in">Matrix</span>(city_number,<span class="built_in">vector</span>&lt;<span class="type">double</span>&gt;(city_number,information_init));   <span class="comment">//初始化信息素矩阵</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="comment">//获取最佳情况</span></span><br><span class="line">        <span class="function"><span class="type">double</span> <span class="title">GetBestRouteLength</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">GetBestRoute</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="comment">//存储最佳情况</span></span><br><span class="line">        <span class="type">double</span> BestRouteLength = numeric_limits&lt;<span class="type">double</span>&gt;::<span class="built_in">max</span>();    <span class="comment">//初始值需要赋予一个很大的值</span></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; BestRoute;</span><br><span class="line">        <span class="comment">//一般参数</span></span><br><span class="line">        <span class="type">int</span> city_number;</span><br><span class="line">        <span class="comment">//距离矩阵，信息素矩阵</span></span><br><span class="line">        Matrix DistancesMatrix;</span><br><span class="line">        Matrix InformationMatrix;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//三个核心方法</span></span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">Select_NextCity</span><span class="params">(Ant&amp; this_ant)</span></span>;           <span class="comment">//传入Ant结构体的一个对象</span></span><br><span class="line">        <span class="function"><span class="type">double</span> <span class="title">Calculate_TotalLength</span><span class="params">(Ant&amp; this_ant)</span></span>;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">Update_Information</span><span class="params">(vector&lt;Ant&gt;&amp; ants)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    TSP的主要算法流程---------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TSP::solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> iter=<span class="number">0</span>; iter&lt;ITERATION_TIMES; iter++)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;------第&quot;</span> &lt;&lt; iter<span class="number">+1</span> &lt;&lt; <span class="string">&quot;次算法迭代&quot;</span> &lt;&lt; <span class="string">&quot;------&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="function">vector&lt;Ant&gt; <span class="title">ants</span><span class="params">(ANT_NUMBER)</span></span>;       <span class="comment">//####创建存放Ant结构体变量的数组，开辟的空间数量为ANT_NUMBER</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ANT_NUMBER; i++)&#123;        <span class="comment">//第i只蚂蚁</span></span><br><span class="line">            ants[i].route.<span class="built_in">push_back</span>(<span class="built_in">rand</span>() % city_number);   <span class="comment">//Step1:初始化蚂蚁所在节点（随机）</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;|||第&quot;</span> &lt;&lt; i<span class="number">+1</span> &lt;&lt; <span class="string">&quot;只蚂蚁：初始位置为&quot;</span> &lt;&lt; ants[i].route.<span class="built_in">back</span>() &lt;&lt; <span class="string">&quot;|||&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; city_number - <span class="number">1</span>; j++)&#123;   <span class="comment">//第j步移动</span></span><br><span class="line">                <span class="type">int</span> nextCity = <span class="built_in">Select_NextCity</span>(ants[i]);     <span class="comment">//Step2:选择下一个前往的节点,结果push到route集合中去。重复直到走遍所有节点。#核心：Select_NextCity()方法</span></span><br><span class="line">                ants[i].route.<span class="built_in">push_back</span>(nextCity);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;!!!第&quot;</span> &lt;&lt; j<span class="number">+1</span> &lt;&lt; <span class="string">&quot;步:移动到&quot;</span> &lt;&lt; nextCity &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            ants[i].TotalRouteLength = <span class="built_in">Calculate_TotalLength</span>(ants[i]);  <span class="comment">//Step3:计算该蚂蚁(i)当前路径下的总距离，然后看看是不是最佳情况。#核心：Calculate_TotalLength()方法</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;--&gt;路径长：&quot;</span> &lt;&lt; ants[i].TotalRouteLength &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">if</span>(ants[i].TotalRouteLength &lt; BestRouteLength)</span><br><span class="line">            &#123;</span><br><span class="line">                BestRouteLength = ants[i].TotalRouteLength;</span><br><span class="line">                BestRoute = ants[i].route;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;目前为止最佳的路径长：&quot;</span> &lt;&lt; BestRouteLength &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Step4:所有蚂蚁的情况运行结束，现在开始根据ants所有成员存储的route信息，更新信息素矩阵。#核心：Update_Information()方法</span></span><br><span class="line">        <span class="built_in">Update_Information</span>(ants);</span><br><span class="line">        <span class="comment">//Step5:本次迭代结束，进入下一个迭代。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Select_NextCity:路径选择</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">TSP::Select_NextCity</span><span class="params">(Ant&amp; this_ant)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//this_ant.route存储了已经经过的结点，类型是vector&lt;int&gt;。在选择下一个目的节点时，需要跳过这些节点。</span></span><br><span class="line">    <span class="comment">//创建概率列表Probabilities：从当前节点i往其他节点走的概率p_k(i,j)</span></span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">Probabilities</span><span class="params">(city_number,<span class="number">0.0</span>)</span></span>;   </span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> NowCity = this_ant.route.<span class="built_in">back</span>();    <span class="comment">//NowCity：当前所在的节点，即route列表的最后一项</span></span><br><span class="line">    <span class="type">double</span> totalProbabilities = <span class="number">0.0</span>;</span><br><span class="line">    <span class="comment">//Step1: 计算每个情况的概率(分子)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> NextCity = <span class="number">0</span>; NextCity &lt; city_number; NextCity++)&#123;</span><br><span class="line">        <span class="comment">//需要跳过已经访问的节点,前往他们的概率保持为0.0</span></span><br><span class="line">        <span class="keyword">auto</span> visited = <span class="built_in">find</span>(this_ant.route.<span class="built_in">begin</span>(), this_ant.route.<span class="built_in">end</span>(), NextCity);  </span><br><span class="line">        <span class="keyword">if</span>(visited != this_ant.route.<span class="built_in">end</span>())     </span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> information_goto_nextcity = InformationMatrix[NowCity][NextCity];</span><br><span class="line">        <span class="type">double</span> distance_goto_nextcity = DistancesMatrix[NowCity][NextCity];</span><br><span class="line">        Probabilities[NextCity] = <span class="built_in">pow</span>(information_goto_nextcity, ALPHA) * <span class="built_in">pow</span>(<span class="number">1.0</span>/distance_goto_nextcity, BETA);</span><br><span class="line">        totalProbabilities += Probabilities[NextCity];</span><br><span class="line">        <span class="comment">//cout &lt;&lt; &quot;#Probabilities:[Before]&quot; &lt;&lt; Probabilities[NextCity] &lt;&lt; endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;#totalProbabilities:&quot; &lt;&lt; totalProbabilities &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Step2:计算每个情况的条件概率p_k(i,j)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> NextCity = <span class="number">0</span>; NextCity &lt; city_number; NextCity++)&#123;</span><br><span class="line">        <span class="keyword">auto</span> visited = <span class="built_in">find</span>(this_ant.route.<span class="built_in">begin</span>(), this_ant.route.<span class="built_in">end</span>(), NextCity);  </span><br><span class="line">        <span class="keyword">if</span>(visited != this_ant.route.<span class="built_in">end</span>())     </span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        Probabilities[NextCity] = Probabilities[NextCity] / totalProbabilities;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; &quot;#Probabilities:[After]&quot; &lt;&lt; Probabilities[NextCity] &lt;&lt; endl;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Step3:轮盘赌选择去往的下一个节点</span></span><br><span class="line">    <span class="type">double</span>  randVal = (<span class="type">double</span>)<span class="built_in">rand</span>() / RAND_MAX * totalProbabilities;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;#randVal:&quot; &lt;&lt; randVal &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> NextCity = <span class="number">0</span>; NextCity &lt; city_number; NextCity++)&#123;</span><br><span class="line">        <span class="keyword">auto</span> visited = <span class="built_in">find</span>(this_ant.route.<span class="built_in">begin</span>(), this_ant.route.<span class="built_in">end</span>(), NextCity);  </span><br><span class="line">        <span class="keyword">if</span>(visited != this_ant.route.<span class="built_in">end</span>())     </span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        randVal -= Probabilities[NextCity] * totalProbabilities;</span><br><span class="line">        <span class="keyword">if</span> (randVal &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> NextCity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;    <span class="comment">//ERROR</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Calculate_TotalLength:计算路径总长</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">TSP::Calculate_TotalLength</span><span class="params">(Ant&amp; this_ant)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> totalLength = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; this_ant.route.<span class="built_in">size</span>()<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        totalLength += DistancesMatrix[this_ant.route[i]][this_ant.route[i<span class="number">+1</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">    totalLength += DistancesMatrix[this_ant.route.<span class="built_in">back</span>()][this_ant.route[<span class="number">0</span>]];  <span class="comment">//终点回到起点</span></span><br><span class="line">    <span class="keyword">return</span> totalLength;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Update_Information:更新信息素矩阵</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TSP::Update_Information</span><span class="params">(vector&lt;Ant&gt;&amp; ants)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//Step1: 信息素蒸发</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; InformationMatrix[<span class="number">0</span>].<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; InformationMatrix[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            InformationMatrix[i][j] = InformationMatrix[i][j] * (<span class="number">1</span> - ROW);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Step2: 信息素释放：每只蚂蚁经过的路径上，都会留下一定的信息素。留下信息素的量规定为距离的倒数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ants.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ants[i].route.<span class="built_in">size</span>() - <span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="type">int</span> StartPoint = ants[i].route[j];</span><br><span class="line">            <span class="type">int</span> Destination = ants[i].route[j<span class="number">+1</span>];</span><br><span class="line">            InformationMatrix[StartPoint][Destination] += <span class="number">1.0</span> / ants[i].TotalRouteLength;</span><br><span class="line">        &#125;</span><br><span class="line">        InformationMatrix[ants[i].route.<span class="built_in">back</span>()][ants[i].route[<span class="number">0</span>]] += <span class="number">1.0</span> / ants[i].TotalRouteLength;   <span class="comment">//终点回到起点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">TSP::GetBestRoute</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BestRoute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">TSP::GetBestRouteLength</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BestRouteLength;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">static_cast</span>&lt;<span class="type">unsigned</span>&gt;(<span class="built_in">time</span>(<span class="number">0</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试集要求：主对角线全0，其他元素不能出现0（否则两点就重合了，必定报错）</span></span><br><span class="line">    <span class="comment">/* Test: 5-CITY</span></span><br><span class="line"><span class="comment">    Matrix distances = &#123;</span></span><br><span class="line"><span class="comment">        &#123;0, 2, 9, 10, 7&#125;,</span></span><br><span class="line"><span class="comment">        &#123;1, 0, 6, 4, 3&#125;,</span></span><br><span class="line"><span class="comment">        &#123;15, 7, 0, 8, 6&#125;,</span></span><br><span class="line"><span class="comment">        &#123;6, 3, 12, 0, 5&#125;,</span></span><br><span class="line"><span class="comment">        &#123;10, 4, 8, 7, 0&#125;</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    Matrix distances = &#123;</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>&#125;,</span><br><span class="line">        &#123;<span class="number">9</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>&#125;,</span><br><span class="line">        &#123;<span class="number">10</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">7</span>&#125;,</span><br><span class="line">        &#123;<span class="number">7</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">4</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="number">8</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">12</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>&#125;,</span><br><span class="line">        &#123;<span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">9</span>&#125;,</span><br><span class="line">        &#123;<span class="number">6</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">15</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>&#125;,</span><br><span class="line">        &#123;<span class="number">14</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>&#125;,</span><br><span class="line">        &#123;<span class="number">11</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">13</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>&#125;,</span><br><span class="line">        &#123;<span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>&#125;,</span><br><span class="line">        &#123;<span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>&#125;,</span><br><span class="line">        &#123;<span class="number">7</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>&#125;,</span><br><span class="line">        &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>&#125;,</span><br><span class="line">        &#123;<span class="number">6</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>&#125;,</span><br><span class="line">        &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>&#125;,</span><br><span class="line">        &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>&#125;,</span><br><span class="line">        &#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>&#125;,</span><br><span class="line">        &#123;<span class="number">7</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>&#125;,</span><br><span class="line">        &#123;<span class="number">6</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function">TSP <span class="title">tsp</span><span class="params">(distances)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> start = chrono::high_resolution_clock::<span class="built_in">now</span>();</span><br><span class="line">    tsp.<span class="built_in">solve</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Running the algorithm...\n&quot;</span> &lt;&lt; flush;</span><br><span class="line">    <span class="keyword">auto</span> end = chrono::high_resolution_clock::<span class="built_in">now</span>();</span><br><span class="line">    chrono::duration&lt;<span class="type">double</span>&gt; duration = end - start;   <span class="comment">//程序运行时间</span></span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; BestRoute = tsp.<span class="built_in">GetBestRoute</span>();</span><br><span class="line">    <span class="type">double</span>  BestRouteLength = tsp.<span class="built_in">GetBestRouteLength</span>();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Test Ouput</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Algorithm completed!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n==============最终结果==============\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;最佳路径：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; BestRoute.<span class="built_in">size</span>() - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; BestRoute[i] &lt;&lt; <span class="string">&quot; -&gt; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; BestRoute.<span class="built_in">back</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n最佳(最短)路径长：&quot;</span>;</span><br><span class="line">    cout &lt;&lt; BestRouteLength &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============================||END.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;(本次运行超参数：&quot;</span> &lt;&lt; <span class="string">&quot;--ITERATION_TIMES=&quot;</span> &lt;&lt; ITERATION_TIMES </span><br><span class="line">                               &lt;&lt; <span class="string">&quot;--ANT_NUMBER&quot;</span> &lt;&lt; ANT_NUMBER</span><br><span class="line">                               &lt;&lt; <span class="string">&quot;--ALPHA=&quot;</span> &lt;&lt; ALPHA</span><br><span class="line">                               &lt;&lt; <span class="string">&quot;--BETA=&quot;</span> &lt;&lt; BETA</span><br><span class="line">                               &lt;&lt; <span class="string">&quot;--ROW=&quot;</span> &lt;&lt; ROW</span><br><span class="line">                               &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;(程序运行时长：&quot;</span> &lt;&lt; duration &lt;&lt; <span class="string">&quot; seconds)&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="代码逻辑和解析—-2024-10-25更新完毕"><a href="#代码逻辑和解析—-2024-10-25更新完毕" class="headerlink" title="代码逻辑和解析—-&gt;2024.10.25更新完毕"></a>代码逻辑和解析—-&gt;2024.10.25更新完毕</h2><h3 id="算法载体“蚂蚁”的结构体表征"><a href="#算法载体“蚂蚁”的结构体表征" class="headerlink" title="算法载体“蚂蚁”的结构体表征"></a>算法载体“蚂蚁”的结构体表征</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Ant</span></span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; route;           <span class="comment">//(目前为止)路径</span></span><br><span class="line">    <span class="type">double</span>  TotalRouteLength;    <span class="comment">//(目前为止)路径的总长度</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><strong>route</strong>: 路径，是一个存放int的一维vector。比如{3,2,1,4,5}，表示该蚂蚁的行走路径是3-&gt;2-&gt;1-&gt;4-&gt;5，蚂蚁当前正位于节点5。算法的运行过程中，在每只蚂蚁、每一次根据概率选择完毕下一个节点后，route需要在末尾实时存入(push_back)这个目的节点。</li><li><strong>TotalRouteLength</strong>：每一次迭代完成后(即一只蚂蚁走遍了所有节点)，存放route路径的总长度。</li></ul><h3 id="距离矩阵和信息素矩阵"><a href="#距离矩阵和信息素矩阵" class="headerlink" title="距离矩阵和信息素矩阵"></a>距离矩阵和信息素矩阵</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> vector&lt;vector&lt;<span class="type">double</span>&gt;&gt;  Matrix;</span><br><span class="line"><span class="comment">//距离矩阵，信息素矩阵</span></span><br><span class="line">Matrix DistancesMatrix;</span><br><span class="line">Matrix InformationMatrix;</span><br></pre></td></tr></table></figure><ul><li>矩阵的第i行第j列元素，表示从i节点到j节点“路径的距离”&#x2F;“路径上信息素的含量”。</li><li>DistancesMatrix是算法的输入，他反映了当前TSP问题的城市个数和它们之间的位置关系(彼此间的距离)；</li><li>i-&gt;j与j-&gt;i路径相同只是方向相反，同一条路径上的距离和信息素都应该相同。因此，DistancesMatrix和InformationMatrix都是主对角线全0的对称矩阵。</li></ul><h3 id="算法主逻辑solve"><a href="#算法主逻辑solve" class="headerlink" title="算法主逻辑solve()"></a>算法主逻辑solve()</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TSP::solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> iter=<span class="number">0</span>; iter&lt;ITERATION_TIMES; iter++)&#123;</span><br><span class="line">        <span class="function">vector&lt;Ant&gt; <span class="title">ants</span><span class="params">(ANT_NUMBER)</span></span>;       <span class="comment">//####创建存放Ant结构体变量的数组，开辟的空间数量为ANT_NUMBER</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ANT_NUMBER; i++)&#123;        <span class="comment">//第i只蚂蚁</span></span><br><span class="line">            ants[i].route.<span class="built_in">push_back</span>(<span class="built_in">rand</span>() % city_number);   <span class="comment">//Step1:初始化蚂蚁所在节点（随机）</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; city_number - <span class="number">1</span>; j++)&#123;   <span class="comment">//第j步移动</span></span><br><span class="line">                <span class="type">int</span> nextCity = <span class="built_in">Select_NextCity</span>(ants[i]);     <span class="comment">//Step2:选择下一个前往的节点,结果push到route集合中去。重复直到走遍所有节点。#核心：Select_NextCity()方法</span></span><br><span class="line">                ants[i].route.<span class="built_in">push_back</span>(nextCity);</span><br><span class="line">            &#125;</span><br><span class="line">            ants[i].TotalRouteLength = <span class="built_in">Calculate_TotalLength</span>(ants[i]);  <span class="comment">//Step3:计算该蚂蚁(i)当前路径下的总距离，然后看看是不是最佳情况。#核心：Calculate_TotalLength()方法</span></span><br><span class="line">            <span class="keyword">if</span>(ants[i].TotalRouteLength &lt; BestRouteLength)</span><br><span class="line">            &#123;</span><br><span class="line">                BestRouteLength = ants[i].TotalRouteLength;</span><br><span class="line">                BestRoute = ants[i].route;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Step4:所有蚂蚁的情况运行结束，现在开始根据ants所有成员存储的route信息，更新信息素矩阵。#核心：Update_Information()方法</span></span><br><span class="line">        <span class="built_in">Update_Information</span>(ants);</span><br><span class="line">        <span class="comment">//Step5:本次迭代结束，进入下一个迭代。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>三重循环：最外层循环控制算法总迭代次数；i循环遍历每只蚂蚁；j循环控制每只蚂蚁进行寻路。</li><li>核心方法调用：<ul><li><strong>Select_NextCity</strong>：传入当前蚂蚁(结构体)。因为结构体中包含了蚂蚁现在的位置信息now(route的末尾元素)，因此可以遍历计算概率p(now,next)，并通过轮盘赌选择下一步的节点编号next。</li><li><strong>Calculate_TotalLength</strong>：最内j循环运行完毕，即当前蚂蚁已经走遍所有节点，运算总路径长。随后确认是否是最佳情况。</li><li><strong>Update_Information</strong>：所有蚂蚁寻路完毕，本次迭代完成，根据每只蚂蚁的路径route更新信息素矩阵。</li></ul></li><li>另外：ants为所有蚂蚁的集合，数据类型是存放结构体对象的一维vector。</li></ul><p>*算法主逻辑手写版：<br><img src="https://s2.loli.net/2024/10/25/sdcKDOQLRIMgqbt.jpg" width="500" height="1200"></p><h3 id="核心方法·其一：Select-NextCity路径选择"><a href="#核心方法·其一：Select-NextCity路径选择" class="headerlink" title="核心方法·其一：Select_NextCity路径选择"></a>核心方法·其一：Select_NextCity路径选择</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">TSP::Select_NextCity</span><span class="params">(Ant&amp; this_ant)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//this_ant.route存储了已经经过的结点，类型是vector&lt;int&gt;。在选择下一个目的节点时，需要跳过这些节点。</span></span><br><span class="line">    <span class="comment">//创建概率列表Probabilities：从当前节点i往其他节点走的概率p_k(i,j)</span></span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">Probabilities</span><span class="params">(city_number,<span class="number">0.0</span>)</span></span>;   </span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> NowCity = this_ant.route.<span class="built_in">back</span>();    <span class="comment">//NowCity：当前所在的节点，即route列表的最后一项</span></span><br><span class="line">    <span class="type">double</span> totalProbabilities = <span class="number">0.0</span>;</span><br><span class="line">    <span class="comment">//Step1: 计算每个情况的概率(分子)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> NextCity = <span class="number">0</span>; NextCity &lt; city_number; NextCity++)&#123;</span><br><span class="line">        <span class="comment">//需要跳过已经访问的节点,前往他们的概率保持为0.0</span></span><br><span class="line">        <span class="keyword">auto</span> visited = <span class="built_in">find</span>(this_ant.route.<span class="built_in">begin</span>(), this_ant.route.<span class="built_in">end</span>(), NextCity);  </span><br><span class="line">        <span class="keyword">if</span>(visited != this_ant.route.<span class="built_in">end</span>())     </span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> information_goto_nextcity = InformationMatrix[NowCity][NextCity];</span><br><span class="line">        <span class="type">double</span> distance_goto_nextcity = DistancesMatrix[NowCity][NextCity];</span><br><span class="line">        Probabilities[NextCity] = <span class="built_in">pow</span>(information_goto_nextcity, ALPHA) * <span class="built_in">pow</span>(<span class="number">1.0</span>/distance_goto_nextcity, BETA);</span><br><span class="line">        totalProbabilities += Probabilities[NextCity];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Step2:计算每个情况的条件概率p_k(i,j)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> NextCity = <span class="number">0</span>; NextCity &lt; city_number; NextCity++)&#123;</span><br><span class="line">        <span class="keyword">auto</span> visited = <span class="built_in">find</span>(this_ant.route.<span class="built_in">begin</span>(), this_ant.route.<span class="built_in">end</span>(), NextCity);  </span><br><span class="line">        <span class="keyword">if</span>(visited != this_ant.route.<span class="built_in">end</span>())     </span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        Probabilities[NextCity] = Probabilities[NextCity] / totalProbabilities;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Step3:轮盘赌选择去往的下一个节点</span></span><br><span class="line">    <span class="type">double</span>  randVal = (<span class="type">double</span>)<span class="built_in">rand</span>() / RAND_MAX * totalProbabilities;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> NextCity = <span class="number">0</span>; NextCity &lt; city_number; NextCity++)&#123;</span><br><span class="line">        <span class="keyword">auto</span> visited = <span class="built_in">find</span>(this_ant.route.<span class="built_in">begin</span>(), this_ant.route.<span class="built_in">end</span>(), NextCity);  </span><br><span class="line">        <span class="keyword">if</span>(visited != this_ant.route.<span class="built_in">end</span>())     </span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        randVal -= Probabilities[NextCity] * totalProbabilities;</span><br><span class="line">        <span class="keyword">if</span> (randVal &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> NextCity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;    <span class="comment">//ERROR</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>计算每条路径的**概率p_k(i,j)**。注意需要事先排除已经走过的节点。</li><li><strong>轮盘赌</strong>选择去往的下一个节点。</li></ul><img src="https://s2.loli.net/2024/10/25/QaX1brEvRJWwD4y.jpg"><h3 id="核心方法·其二：Calculate-TotalLength计算总长"><a href="#核心方法·其二：Calculate-TotalLength计算总长" class="headerlink" title="核心方法·其二：Calculate_TotalLength计算总长"></a>核心方法·其二：Calculate_TotalLength计算总长</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">TSP::Calculate_TotalLength</span><span class="params">(Ant&amp; this_ant)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> totalLength = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; this_ant.route.<span class="built_in">size</span>()<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        totalLength += DistancesMatrix[this_ant.route[i]][this_ant.route[i<span class="number">+1</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">    totalLength += DistancesMatrix[this_ant.route.<span class="built_in">back</span>()][this_ant.route[<span class="number">0</span>]];  <span class="comment">//终点回到起点</span></span><br><span class="line">    <span class="keyword">return</span> totalLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了简化代码，solve()在运行时不会让蚂蚁回到起点。但此处我们认为TSP问题仍需要走一个闭环，所以在运算路径总长时需要另外加上从终点(route最后一项)回到起点(route第一项)的距离。</p><h3 id="核心方法·其三：Update-Information信息素更新"><a href="#核心方法·其三：Update-Information信息素更新" class="headerlink" title="核心方法·其三：Update_Information信息素更新"></a>核心方法·其三：Update_Information信息素更新</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TSP::Update_Information</span><span class="params">(vector&lt;Ant&gt;&amp; ants)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//Step1: 信息素蒸发</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; InformationMatrix[<span class="number">0</span>].<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; InformationMatrix[<span class="number">0</span>].<span class="built_in">size</span>(); j++)&#123;</span><br><span class="line">            InformationMatrix[i][j] = InformationMatrix[i][j] * (<span class="number">1</span> - ROW);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Step2: 信息素释放：每只蚂蚁经过的路径上，都会留下一定的信息素。留下信息素的量规定为距离的倒数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ants.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ants[i].route.<span class="built_in">size</span>() - <span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="type">int</span> StartPoint = ants[i].route[j];</span><br><span class="line">            <span class="type">int</span> Destination = ants[i].route[j<span class="number">+1</span>];</span><br><span class="line">            InformationMatrix[StartPoint][Destination] += <span class="number">1.0</span> / ants[i].TotalRouteLength;</span><br><span class="line">        &#125;</span><br><span class="line">        InformationMatrix[ants[i].route.<span class="built_in">back</span>()][ants[i].route[<span class="number">0</span>]] += <span class="number">1.0</span> / ants[i].TotalRouteLength;   <span class="comment">//终点回到起点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>信息素蒸发</strong>：根据超参数ROW，对上一次迭代后的信息素进行衰减操作。</li><li><strong>信息素释放</strong>：根据本轮迭代下每只蚂蚁的路径情况，为每条路径增加信息素。每次增加的信息素量是route总长的倒数(即1&#x2F;TotalRouteLength)。</li></ul><img src="https://s2.loli.net/2024/10/25/mZu5AzcKEdyIqOl.jpg" width="500" height="1200"><h2 id="读取-tsp数据文件—-稍后更新"><a href="#读取-tsp数据文件—-稍后更新" class="headerlink" title="读取.tsp数据文件—-&gt;稍后更新"></a>读取.tsp数据文件—-&gt;稍后更新</h2><h2 id="Berlin52数据集测试情况—-稍后更新"><a href="#Berlin52数据集测试情况—-稍后更新" class="headerlink" title="Berlin52数据集测试情况—-&gt;稍后更新"></a>Berlin52数据集测试情况—-&gt;稍后更新</h2>]]></content>
      
      
      <categories>
          
          <category> Course Assignment </category>
          
          <category> Computational Intelligence </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPP </tag>
            
            <tag> TSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cpp实现矩阵操作</title>
      <link href="/2024/10/18/Matrix/"/>
      <url>/2024/10/18/Matrix/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="10bcc97a6d92a8da5eaf3955551c610a4dd1d08fea05c02e7bbbf211629512d0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">课程内代码不能无偿开源, 请输入密码查看.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> LAB EXERCISE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
